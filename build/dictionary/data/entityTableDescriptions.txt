Table descriptions

pc_account = An account is an entity (person or company) that applies for or purchases one or more policies from the carrier. Account attributes include years in business, industry code (SIC, NAICS, etc) and nature of ops, FEIN identifier, Bureau (WC) number and business entity type (e.g. individual, corp., partenership, etc.)

pc_account.ID = Internally managed primary key
pc_account.AccountNumber = The account number of this account.
pc_account.AccountOrgType = Organization type of this account
pc_account.AccountStatus = The status of this account
pc_account.BusOpsDesc = Business and operations description.
pc_account.CreateTime = Timestamp when the object was created
pc_account.CreateUser = User who created the object
pc_account.Frozen = If true then no Policy may be created or retrieved on this Account
pc_account.IndustryCode = Industry Code of Account
pc_account.LinkContacts = Indicates that this Account will sync Contacts with an external Contact Management System.
pc_account.LocationAutoNumberSeq = Sequence to autonumber account locations
pc_account.OriginationDate = The date the account became a client of the carrier.
pc_account.OtherOrgTypeDescription = If AccountOrgType is 'other', this value must be filled in
pc_account.PreferredCoverageCurrency = Preferred Coverage Currency
pc_account.PreferredSettlementCurrency = Preferred Settlement Currency
pc_account.PrimaryLanguage = The account's preferred language
pc_account.PrimaryLocale = The account's preferred locale
pc_account.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_account.ServiceTier = Customer Service Tier
pc_account.StateBureauNum = State Bureau number of this account.
pc_account.UpdateTime = Timestamp when the object was last updated
pc_account.UpdateUser = User who last updated the object
pc_account.YearBusinessStarted = What year was the business started?
pc_account.AccountContacts = All the contacts related to this account, including inactive ones.
pc_account.AccountLocations = The list of account locations for this Account
pc_account.JobGroups = The list of Job Groups of this Account
pc_account.Notes = Notes associated with this account.
pc_account.ProducerCodes = Producer Codes associated with this account.
pc_account.RoleAssignments = Role Assignments for this account.
pc_account.SourceRelatedAccounts = Relationships from this account to another one.
pc_account.TargetRelatedAccounts = Relationships from another account to this one.

pc_accountaccount = A relationship between two accounts.

pc_accountaccount.ID = Internally managed primary key
pc_accountaccount.CreateTime = Timestamp when the object was created
pc_accountaccount.CreateUser = User who created the object
pc_accountaccount.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountaccount.RelationshipType = The type of relationship from the perspective of the source account.
pc_accountaccount.SourceAccount = The source account in the relationship.
pc_accountaccount.TargetAccount = The target account in the relationship.
pc_accountaccount.UpdateTime = Timestamp when the object was last updated
pc_accountaccount.UpdateUser = User who last updated the object

pc_accountcontact = A contact on an account.

pc_accountcontact.ID = Internally managed primary key
pc_accountcontact.Account = The account on which this is a contact.
pc_accountcontact.Active = Determines whether or not the contact is available to be added to jobs
pc_accountcontact.Contact = The related contact.
pc_accountcontact.CreateTime = Timestamp when the object was created
pc_accountcontact.CreateUser = User who created the object
pc_accountcontact.LastUpdateTime = Date and time of last update
pc_accountcontact.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountcontact.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_accountcontact.UpdateTime = Timestamp when the object was last updated
pc_accountcontact.UpdateUser = User who last updated the object
pc_accountcontact.Roles = The roles that this contact has played on the account or its policies.

pc_accountcontactrole = A role that an contact has played on an account or its policies.

pc_accountcontactrole.ID = Internally managed primary key
pc_accountcontactrole.AccountContact = The account contact that plays this role.
pc_accountcontactrole.CreateTime = Timestamp when the object was created
pc_accountcontactrole.CreateUser = User who created the object
pc_accountcontactrole.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountcontactrole.Referenced = Whether or not this entity is Referenced.
pc_accountcontactrole.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_accountcontactrole.UpdateTime = Timestamp when the object was last updated
pc_accountcontactrole.UpdateUser = User who last updated the object
pc_accountcontactrole.Replaces = The roles that this AccountContactRole has replaced through merges
pc_accountcontactrole.DateCompletedTrainingClass = When this driver completed a training class.
pc_accountcontactrole.GoodDriverDiscount = Indicates whether this driver qualifies for a Good Driver discount
pc_accountcontactrole.MotorVehicleRecords = Deprecated in PC 7.0 This table is no longer used - Motor vehicle records for this driver.
pc_accountcontactrole.NumberofAccidents = Number of Accidents
pc_accountcontactrole.NumberofViolations = Number of Violations
pc_accountcontactrole.Student = Is this driver a student?
pc_accountcontactrole.TrainingClassType = The kind of training class driver completed.
pc_accountcontactrole.YearLicensed = The year that this contact first acquired a driver's license.
pc_accountcontactrole.BusOpsDescription = Business operation description.
pc_accountcontactrole.IndustryCode = Industry code of named insured.
pc_accountcontactrole.OrgType = Organization type.
pc_accountcontactrole.RelationshipTitle = Title

pc_acrreplacement = Indicates that two AccountContactRoles were merged, and which one replaces the other

pc_acrreplacement.ID = Internally managed primary key
pc_acrreplacement.CreateTime = Timestamp when the object was created
pc_acrreplacement.CreateUser = User who created the object
pc_acrreplacement.MergedPublicID = The PublicID of the AccountContactRole that was Merged into another
pc_acrreplacement.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_acrreplacement.ReplacementAccountContactRole = The AccountContactRole that replaced the merged AccountContactRole
pc_acrreplacement.UpdateTime = Timestamp when the object was last updated
pc_acrreplacement.UpdateUser = User who last updated the object

pc_accountproducercode = A producer code for the account.

pc_accountproducercode.ID = Internally managed primary key
pc_accountproducercode.Account = The account on which this is a contact.
pc_accountproducercode.CreateTime = Timestamp when the object was created
pc_accountproducercode.CreateUser = User who created the object
pc_accountproducercode.ProducerCode = The producer code.
pc_accountproducercode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountproducercode.UpdateTime = Timestamp when the object was last updated
pc_accountproducercode.UpdateUser = User who last updated the object

pc_accountuserroleassign = User role assignments for Accounts.

pc_accountuserroleassign.ID = Internally managed primary key
pc_accountuserroleassign.Account = Associated account.
pc_accountuserroleassign.Active = Indicates whether the user is active in this role assignment.
pc_accountuserroleassign.AssignedByUser = User who assigned this entity.
pc_accountuserroleassign.AssignedGroup = Group to which this entity is assigned; null if none assigned
pc_accountuserroleassign.AssignedQueue = Either the Queue to which this entity is assigned (if AssignmentStatus is 'assigned'), the Queue to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_accountuserroleassign.AssignedUser = Either the User to which this entity is assigned (if AssignmentStatus is 'assigned'), the User to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_accountuserroleassign.AssignmentDate = Time when entity last assigned
pc_accountuserroleassign.AssignmentStatus = Typelist describing assignment status.
pc_accountuserroleassign.CloseDate = Date and time when this entity was closed. (Not applicable to all assignable entities)
pc_accountuserroleassign.Comments = Comments about this role assignment.
pc_accountuserroleassign.CreateTime = Timestamp when the object was created
pc_accountuserroleassign.CreateUser = User who created the object
pc_accountuserroleassign.PreviousGroup = Group to which this entity was previously assigned.
pc_accountuserroleassign.PreviousQueue = Queue to which this entity was previously assigned.
pc_accountuserroleassign.PreviousUser = User to which this entity was previously assigned.
pc_accountuserroleassign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountuserroleassign.Role = The role to which the user is assigned.
pc_accountuserroleassign.UpdateTime = Timestamp when the object was last updated
pc_accountuserroleassign.UpdateUser = User who last updated the object

pc_acctholderedge = null

pc_acctholderedge.ID = Internally managed primary key
pc_acctholderedge.ForeignEntity = 
pc_acctholderedge.Owner = 
pc_acctholderedge.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_activity = An instance of work assigned to a user and belonging to an underwriting file. Activities are associated with pre-defined workflows and rules.

pc_activity.ID = Internally managed primary key
pc_activity.Account = The Account this activity is associated with.
pc_activity.AccountContact = AccountContact this activity is associated with.
pc_activity.ActivityClass = The class of the activity.
pc_activity.ActivityPattern = Pattern that created this activity. It it was not created from a pattern, then this is null.
pc_activity.ApprovalIssue = Reason approval is needed. This field should only be set for approval activities.
pc_activity.ApprovalRationale = Rationale for approving/rejecting the activity. This field should only be set for approval activities.
pc_activity.Approved = Whether the activity is approved. This is null if not relevant or undecided.
pc_activity.AssignedByUser = User who assigned this entity.
pc_activity.AssignedGroup = Group to which this entity is assigned; null if none assigned
pc_activity.AssignedQueue = Either the Queue to which this entity is assigned (if AssignmentStatus is 'assigned'), the Queue to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_activity.AssignedUser = Either the User to which this entity is assigned (if AssignmentStatus is 'assigned'), the User to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_activity.AssignmentDate = Time when entity last assigned
pc_activity.AssignmentStatus = Typelist describing assignment status.
pc_activity.AssociatedRole = The role on the associated entity that this activity is assigned to.
pc_activity.AutoGenerated = True if the activity was generated automatically; never fully implemented. Instead, customers can create an extension field and set it after creating an activity in a rule to indicate how the activity was created
pc_activity.CloseDate = Date and time when this entity was closed. (Not applicable to all assignable entities)
pc_activity.CloseUser = The user who closed this activity.
pc_activity.Command = A Gosu command to execute for this activity.
pc_activity.CreateTime = Timestamp when the object was created
pc_activity.CreateUser = User who created the object
pc_activity.Description = Description of the activity.
pc_activity.DocumentTemplate = The id of an associated document template. The id and language gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor. This property should not be used by applications.
pc_activity.EmailTemplate = The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.
pc_activity.EndDate = Time the event is scheduled to terminate or null if the activity is not a scheduled event.
pc_activity.Escalated = True if the activity has been escalated.
pc_activity.EscalationDate = When the activity will be escalated if it isn't yet completed; this is null if the activity is never escalated.
pc_activity.ExternallyOwned = Whether the activity is externally owned.
pc_activity.Job = The job this activity is associated with.
pc_activity.LastViewedDate = When this activity was last viewed by the assignee. If never viewed, this is null.
pc_activity.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_activity.LogicalName = Logical name of the activity.  Used by the internal workflow engine.
pc_activity.Mandatory = True if the activity must be completed and cannot be skipped.
pc_activity.Policy = The policy this activity is associated with.
pc_activity.PreviousGroup = Group to which this entity was previously assigned.
pc_activity.PreviousQueue = Queue to which this entity was previously assigned.
pc_activity.PreviousUser = User to which this entity was previously assigned.
pc_activity.Priority = Priority of the activity with respect to other activities.
pc_activity.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_activity.Recurring = Whether this activity is recurring.
pc_activity.ShortSubject = A very brief title for the activity e.g., displayable in a calendar; this is associated with its pattern.
pc_activity.Status = Status of the activity.
pc_activity.Subject = A brief title for the activity; this is associated with its pattern.
pc_activity.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_activity.TargetDate = If this activity is a task, time by which a person should complete the task; if not completed by this time, the task is considered overdue. If this activity is an event, the time the event is scheduled to start.
pc_activity.Type = Type of the activity.
pc_activity.UpdateTime = Timestamp when the object was last updated
pc_activity.UpdateUser = User who last updated the object
pc_activity.ValidationLevel = Validation level that this object passed (if any) before it was stored.
pc_activity.Workflow = Optional pointer to the workflow this activity is associated with.

pc_activitypattern = A template for an activity. An activity pattern is not assigned to a user, nor does it belong to an underwriting file; it is used only to create new activity instances. To create a new activity, an activity pattern is first chosen, and the values in the activity pattern are used to seed the values of the new activity instance.

pc_activitypattern.ID = Internally managed primary key
pc_activitypattern.ActivityClass = The class of the activity.
pc_activitypattern.AutomatedOnly = True if the activity pattern is used only by automated additions to the workplan. If true, the pattern won't be shown as an option for users to choose in the application's interface.
pc_activitypattern.Category = Category used to organize the activity pattern.
pc_activitypattern.Code = The concise name of the activity pattern, used to identify the pattern within rules.
pc_activitypattern.Command = A Gosu command to execute for this activity.
pc_activitypattern.CreateTime = Timestamp when the object was created
pc_activitypattern.CreateUser = User who created the object
pc_activitypattern.Description = Description of the activity pattern.
pc_activitypattern.DocumentTemplate = The id of an associated document template. The id gets passed to IDocumentTemplateSource to retrieve the DocumentTemplateDescriptor.
pc_activitypattern.EmailTemplate = The id of an associated email template. The id gets passed to IEmailTemplateSource to retrieve the EmailTemplateDescriptor.
pc_activitypattern.EscalationBusCalTag = Holiday tag code to use for business calendar in calculating EscalationDate, if applicable.
pc_activitypattern.EscalationDays = Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.
pc_activitypattern.EscalationHours = Used in conjunction with EscalationStartPoint and EscalationIncludedDays to calculate the EscalationDate of the activity.
pc_activitypattern.EscalationInclDays = Which days to include in calculating the EscalationDate.
pc_activitypattern.EscalationStartPt = Which existing date on the activity or associated claim to use as the starting date for the EscalationDate.
pc_activitypattern.EscBusCalLocPath = Location bean path to use for business calendar in calculating EscalationDate, if applicable.
pc_activitypattern.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_activitypattern.Mandatory = Whether completion of the activity is mandatory.
pc_activitypattern.PatternLevel = the level that this activity pattern is for.
pc_activitypattern.Priority = Priority of the activity with respect to other activities.
pc_activitypattern.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_activitypattern.Recurring = Whether this activity is recurring.
pc_activitypattern.ShortSubject = Short subject field of the activity. For use in small areas e.g., a calendar event entry.
pc_activitypattern.Subject = Subject field of the activity.
pc_activitypattern.TargetBusCalLocPath = Location bean path to use for business calendar in calculating TargetDate, if applicable.
pc_activitypattern.TargetBusCalTag = Holiday tag code to use for business calendar in calculating TargetDate, if applicable.
pc_activitypattern.TargetDays = Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.
pc_activitypattern.TargetHours = Used in conjunction with TargetStartPoint and TargetIncludedDays to calculate the ActionDate of the activity.
pc_activitypattern.TargetIncludeDays = Which days to include in calculating the TargetDate.
pc_activitypattern.TargetStartPoint = Which existing date on the activity or associated claim to use as the starting date for the TargetDate.
pc_activitypattern.Type = Type of the activity.
pc_activitypattern.UpdateTime = Timestamp when the object was last updated
pc_activitypattern.UpdateUser = User who last updated the object

pc_actpat_desc_l10n = null

pc_actpat_desc_l10n.ID = Internally managed primary key
pc_actpat_desc_l10n.Language = 
pc_actpat_desc_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_actpat_desc_l10n.Owner = 
pc_actpat_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_actpat_desc_l10n.Value = 

pc_actpat_ssbj_l10n = null

pc_actpat_ssbj_l10n.ID = Internally managed primary key
pc_actpat_ssbj_l10n.Language = 
pc_actpat_ssbj_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_actpat_ssbj_l10n.Owner = 
pc_actpat_ssbj_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_actpat_ssbj_l10n.Value = 

pc_actpat_subj_l10n = null

pc_actpat_subj_l10n.ID = Internally managed primary key
pc_actpat_subj_l10n.Language = 
pc_actpat_subj_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_actpat_subj_l10n.Owner = 
pc_actpat_subj_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_actpat_subj_l10n.Value = 

pc_addlinterestdetail = The details of the relationship of a PolicyAddlInterest to some entity.

pc_addlinterestdetail.ID = Internally managed primary key
pc_addlinterestdetail.AdditionalInterestType = Interest type
pc_addlinterestdetail.BranchValue = Link to root of effdated tree
pc_addlinterestdetail.CertRequired = Is a certificate required?
pc_addlinterestdetail.ChangeType = Type of change made to this row
pc_addlinterestdetail.ContractNumber = Loan numbers associated with a mortgagee or lender
pc_addlinterestdetail.CreateTime = Timestamp when the object was created
pc_addlinterestdetail.CreateUser = User who created the object
pc_addlinterestdetail.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_addlinterestdetail.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_addlinterestdetail.PolicyAddlInterest = 
pc_addlinterestdetail.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_addlinterestdetail.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_addlinterestdetail.UpdateTime = Timestamp when the object was last updated
pc_addlinterestdetail.UpdateUser = User who last updated the object
pc_addlinterestdetail.BAVehicle = 
pc_addlinterestdetail.BOPBuilding = 
pc_addlinterestdetail.CPBuilding = 
pc_addlinterestdetail.ContractorsEquipment = 
pc_addlinterestdetail.PAVehicle = 

pc_address = <p/>
      {@see com.guidewire.pl.domain.contact.Contact}<br/>
      {@see com.guidewire.pl.domain.contact.ContactAddress}

pc_address.ID = Internally managed primary key
pc_address.AddressBookUID = The system uses this value when it is integrated with ContactManager and the related contact             is linked.  In this case, the ID represents the ID of this </code>Address</code> object's associated             <code>ABAddress</code> in ContactManager. This value is Null if the object is not linked.
pc_address.AddressLine1 = First line of mailing address.
pc_address.AddressLine1Kanji = First line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)
pc_address.AddressLine2 = Second line of mailing address.
pc_address.AddressLine2Kanji = Second line of mailing address in kanji (used only for Japanese addresses and will be null otherwise)
pc_address.AddressLine3 = Third line of mailing address.
pc_address.AddressType = Type of this address record.
pc_address.BatchGeocode = Boolean field to mark an address to be geocoded (if needed) by the batch geocoding work queue.
pc_address.CEDEX = CEDEX: Special business mail delivery flag (used only for French addresses and will be null otherwise)
pc_address.CEDEXBureau = CEDEX: Special business mail delivery bureau (used only for French addresses and will be null otherwise)
pc_address.City = City.
pc_address.CityKanji = City in kanji (used only for Japanese addresses and will be null otherwise)
pc_address.Country = Country.
pc_address.County = County.
pc_address.CreateTime = Timestamp when the object was created
pc_address.CreateUser = User who created the object
pc_address.Description = Additional description of mailing address.
pc_address.GeocodeStatus = Enum giving the status of the latitude and longitude data.
pc_address.LastUpdateTime = Date and time of last update
pc_address.LinkedAddress = A potential link to a group of addresses
pc_address.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_address.PostalCode = Postal code; string to handle Zip+4 and international codes.
pc_address.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_address.Referenced = Whether or not this entity is Referenced.
pc_address.SpatialPoint = Latitude and longitude of this address, represented as an instance of SpatialPoint.
pc_address.State = State.
pc_address.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_address.UpdateTime = Timestamp when the object was last updated
pc_address.UpdateUser = User who last updated the object
pc_address.ValidUntil = Latest date that this address is valid.
pc_address.Replaces = The Addresses that this Address has replaced through merges
pc_address.Account = The account on which this is a location
pc_address.Active = Determines whether or not the location is available to be newly added to submissions
pc_address.EmployeeCount = The number of employees at this location
pc_address.LocationCode = The custom location code specified by customer
pc_address.LocationName = Shorthand name for this location
pc_address.LocationNum = The location number of this location
pc_address.NonSpecific = Is a non-specific location.
pc_address.Phone = Phone
pc_address.PhoneCountry = The country associated with this phone number.
pc_address.PhoneExtension = Phone extension

pc_addresscorrection = <p/>
      AddressCorrection entities will not be created for temporary Address, if no
      corrections are received, or if Geocoding fails for that Address. If an Address is edited more than
      once, and the Geocoding is updated, more than one AddressCorrection may exist for a given address.<p/>
      Note that the corrected address may not capture all information from the original; in particular, MapPoint
      will discard apartment/suite/floor/mailstop numbers. Similarly, "duplicate" corrections may be produced.
    

pc_addresscorrection.ID = Internally managed primary key
pc_addresscorrection.Address = The Address that has been corrected.
pc_addresscorrection.AddressLine1 = First line of original mailing address.
pc_addresscorrection.AddressLine2 = Second line of original mailing address.
pc_addresscorrection.City = Original City.
pc_addresscorrection.CorrectedAddressLine1 = First line of corrected mailing address.
pc_addresscorrection.CorrectedAddressLine2 = Second line of corrected mailing address.
pc_addresscorrection.CorrectedCity = Corrected City.
pc_addresscorrection.CorrectedCountry = Corrected Country.
pc_addresscorrection.CorrectedCounty = Corrected County.
pc_addresscorrection.CorrectedPostalCode = Corrected Postal code; string to handle Zip+4 and international codes.
pc_addresscorrection.CorrectedState = Corrected State.
pc_addresscorrection.Country = Original Country.
pc_addresscorrection.County = Original County.
pc_addresscorrection.PostalCode = Original Postal code; string to handle Zip+4 and international codes.
pc_addresscorrection.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_addresscorrection.State = Original State.

pc_addressreplacement = Indicates that two Addresses were merged, and which one replaces the other

pc_addressreplacement.ID = Internally managed primary key
pc_addressreplacement.CreateTime = Timestamp when the object was created
pc_addressreplacement.CreateUser = User who created the object
pc_addressreplacement.MergedPublicID = The PublicID of the Address that was Merged into another
pc_addressreplacement.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_addressreplacement.ReplacementAddress = The Address that replaced the merged Address
pc_addressreplacement.UpdateTime = Timestamp when the object was last updated
pc_addressreplacement.UpdateUser = User who last updated the object

pc_affinitygroup = Groups and Associations eligible for dividends or special rating.

pc_affinitygroup.ID = Internally managed primary key
pc_affinitygroup.AffinityGroupType = Type of group
pc_affinitygroup.CreateTime = Timestamp when the object was created
pc_affinitygroup.CreateUser = User who created the object
pc_affinitygroup.Description = Description of the affinity group
pc_affinitygroup.EndDate = Affinity group end date
pc_affinitygroup.FirstNameKanji = First name in kanji (used only for Japanese names and will be null otherwise)
pc_affinitygroup.LastNameKanji = Last name in kanji (used only for Japanese names and will be null otherwise)
pc_affinitygroup.Name = The name of affinity group.
pc_affinitygroup.NameKanji = Group name to search for in kanji (used only for Japanese).
pc_affinitygroup.Organization = The Organization that this group belongs to.
pc_affinitygroup.Particle = Particle, such as 'de', 'von' (used for French names and will be null otherwise)
pc_affinitygroup.PrimaryContactFirstName = First name of primary contact.
pc_affinitygroup.PrimaryContactLastName = Last name of primary contact.
pc_affinitygroup.PrimaryContactPhone = Phone number of primary contact.
pc_affinitygroup.PrimaryContactPhoneCountryCode = The country associated with this phone number.
pc_affinitygroup.PrimaryContactPhoneExtension = Phone extension
pc_affinitygroup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_affinitygroup.StartDate = Affinity group start date
pc_affinitygroup.UpdateTime = Timestamp when the object was last updated
pc_affinitygroup.UpdateUser = User who last updated the object
pc_affinitygroup.AffinityGroupProducerCodes = Producer Codes that this affinity group is available to.
pc_affinitygroup.Jurisdictions = Jurisdictions that this affinity group is available to.
pc_affinitygroup.Products = Products associated with this Affinity Group.

pc_affinitygroupjur = Jurisdictions that a particular affinity group is available to.

pc_affinitygroupjur.ID = Internally managed primary key
pc_affinitygroupjur.AffinityGroup = The associated affinity group.
pc_affinitygroupjur.Jurisdiction = Jurisdiction for an affinity group
pc_affinitygroupjur.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_affinitygroupprodcode = The producer code to affinity group availability relationship.

pc_affinitygroupprodcode.ID = Internally managed primary key
pc_affinitygroupprodcode.AffinityGroup = Affinity group granted to the producer code.
pc_affinitygroupprodcode.ProducerCode = The ProducerCode.
pc_affinitygroupprodcode.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_affinitygroupproduct = Products that a particular affinity group is available to..

pc_affinitygroupproduct.ID = Internally managed primary key
pc_affinitygroupproduct.AffinityGroup = The associated affinity group.
pc_affinitygroupproduct.ProductCode = The Product defining what kind of Policy this is
pc_affinitygroupproduct.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_agencybillplan = Agency bill plans, one per currency

pc_agencybillplan.ID = Internally managed primary key
pc_agencybillplan.Currency = 
pc_agencybillplan.Organization = 
pc_agencybillplan.PlanID = The public id of the agency bill plan in billing system
pc_agencybillplan.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_agreementparticipant = A reinsurer in a reinsurance agreement

pc_agreementparticipant.ID = Internally managed primary key
pc_agreementparticipant.Agreement = The reinsurance agreement.
pc_agreementparticipant.CedingRate = If a non-proportional treaty is divided among multiple participants, then they will each negotiate a rate for their participation.
pc_agreementparticipant.CommissionRate = This is tha actual commission that should be paid to each participant, defined as a % of their share of ceded premiums.
pc_agreementparticipant.CreateTime = Timestamp when the object was created
pc_agreementparticipant.CreateUser = User who created the object
pc_agreementparticipant.FlatPremium_amt = 
pc_agreementparticipant.FlatPremium_cur = 
pc_agreementparticipant.Participant = The reinsurer.
pc_agreementparticipant.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_agreementparticipant.RefNumber = Some agreement ID provided by the reinsurer, equivalent to the carrier’s policy number.
pc_agreementparticipant.RiskShare = Participants share of any losses to the agreement.
pc_agreementparticipant.UpdateTime = Timestamp when the object was last updated
pc_agreementparticipant.UpdateUser = User who last updated the object

pc_allowedpaymentmethod = Member element for PaymentPlanSummary's list of supported payment methods.

pc_allowedpaymentmethod.ID = Internally managed primary key
pc_allowedpaymentmethod.CreateTime = Timestamp when the object was created
pc_allowedpaymentmethod.CreateUser = User who created the object
pc_allowedpaymentmethod.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_allowedpaymentmethod.UpdateTime = Timestamp when the object was last updated
pc_allowedpaymentmethod.UpdateUser = User who last updated the object

pc_archivefailure = null

pc_archivefailure.ID = Internally managed primary key
pc_archivefailure.ArchiveFailure = Short version of the reason for a failure to archive
pc_archivefailure.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_archivefailuredetails = null

pc_archivefailuredetails.ID = Internally managed primary key
pc_archivefailuredetails.ArchiveFailureDetails = Full details of archive failure
pc_archivefailuredetails.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_archiveworkitem = Represents a unit of work pending for archive.

pc_archiveworkitem.ID = Internally managed primary key
pc_archiveworkitem.Attempts = 
pc_archiveworkitem.CheckedOutBy = 
pc_archiveworkitem.CreationTime = 
pc_archiveworkitem.Exception = Stack trace of the exception
pc_archiveworkitem.Item = Soft foreign key to the item to be processed for archive.
pc_archiveworkitem.LastUpdateTime = 
pc_archiveworkitem.Priority = 
pc_archiveworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_archiveworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_archiveworkitem.Status = Status of this workitem.

pc_arraydatadist = Stores array data distribution.

pc_arraydatadist.ID = Internally managed primary key
pc_arraydatadist.ArrayEntityName = Entity associated with array
pc_arraydatadist.ArrayEntityTableName = Table for array entity
pc_arraydatadist.ArrayName = Name of array.
pc_arraydatadist.MaxSize = Maximum array size.
pc_arraydatadist.MeanSize = Mean size of arrays.
pc_arraydatadist.MedianSize = Median size of arrays.
pc_arraydatadist.MinSize = Minimum array size.
pc_arraydatadist.NumNonNull = Count of # of non null values.
pc_arraydatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_arraydatadist.TableDataDist = TableDataDist for this object.
pc_arraydatadist.ArraySizeCntDDs = Collection of ArraySizeCntDDs linked to this ArrayDataDist.

pc_arraysizecntdd = Stores array data distribution size count pairs.

pc_arraysizecntdd.ID = Internally managed primary key
pc_arraysizecntdd.ArrayDataDist = ArrayDataDist for this object.
pc_arraysizecntdd.DistCount = Count of arrays  of that size.
pc_arraysizecntdd.DistSize = Size of array.
pc_arraysizecntdd.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_assignableforkeydatadist = Stores assignable foreign key data distribution.

pc_assignableforkeydatadist.ID = Internally managed primary key
pc_assignableforkeydatadist.AssignableForKeyName = Name of assignable foreign key.
pc_assignableforkeydatadist.MeanSize = Mean size of assignable foreign keys.
pc_assignableforkeydatadist.MedianSize = Median size of assignable foreign keys.
pc_assignableforkeydatadist.NumNonNull = Count of # of non null values.
pc_assignableforkeydatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_assignableforkeydatadist.TableDataDist = TableDataDist for this object.
pc_assignableforkeydatadist.AssignableForKeySizeCntDDs = Collection of AssignableForKeySizeCntDDs linked to this AssignableForKeyDataDist.

pc_assignableforkeysizecntdd = Stores assignable foreign key data distribution size count pairs.

pc_assignableforkeysizecntdd.ID = Internally managed primary key
pc_assignableforkeysizecntdd.AssignableForKeyDataDist = AssignableForKeyDataDist for this object.
pc_assignableforkeysizecntdd.DistCount = Count of sets of that size.
pc_assignableforkeysizecntdd.DistSize = Number of foreign keys for one value.
pc_assignableforkeysizecntdd.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_assignqueue = 
        A queue of assignable entities. Entities can be assigned to a queue (rather than a user) and
        any entity assigned to a queue is said to be "in the queue". A queue belongs to a group
        and is typically used to organize items which can be handled by any user in its group.
        When a user has time to tackle a new item they look at the items in the queue and reassign
        the top item to themselves.
      
    

pc_assignqueue.ID = Internally managed primary key
pc_assignqueue.CreateTime = Timestamp when the object was created
pc_assignqueue.CreateUser = User who created the object
pc_assignqueue.Description = The description of what this queue is for.
pc_assignqueue.Group = The group to which the queue belongs.
pc_assignqueue.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_assignqueue.Name = The name of this queue.
pc_assignqueue.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_assignqueue.SubGroupVisible = If true the queue is visible from sub-groups of the group to which it belongs.
pc_assignqueue.UpdateTime = Timestamp when the object was last updated
pc_assignqueue.UpdateUser = User who last updated the object

pc_attribute = 
        Describes a name-value pair. An administrator can create an Attribute entity to represent custom user characteristics,
        for example, Spanish. Then, the administrator can associate the Attribute with one or more system users.
        Studio users can reference an Attribute from Studio when writing rules.
      
    

pc_attribute.ID = Internally managed primary key
pc_attribute.Active = Indicates whether or not this attribute is currently in use.
pc_attribute.CreateTime = Timestamp when the object was created
pc_attribute.CreateUser = User who created the object
pc_attribute.Description = A description of the attribute.
pc_attribute.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_attribute.Name = The name of the attribute.
pc_attribute.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_attribute.Type = The type of the attribute.
pc_attribute.UpdateTime = Timestamp when the object was last updated
pc_attribute.UpdateUser = User who last updated the object

pc_attributeuser = 
        Links an Attribute entity with a User entity. An Attribute is a general-purpose characteristic you can associate with one or more users.
      
    

pc_attributeuser.ID = Internally managed primary key
pc_attributeuser.Attribute = The associated attribute.
pc_attributeuser.DateField1 = General-purpose date field.
pc_attributeuser.DateField2 = General-purpose date field.
pc_attributeuser.DateField3 = General-purpose date field.
pc_attributeuser.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_attributeuser.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_attributeuser.State = The state in which this attribute is applicable.
pc_attributeuser.TextField1 = General-purpose text field.
pc_attributeuser.TextField2 = General-purpose text field.
pc_attributeuser.TextField3 = General-purpose text field.
pc_attributeuser.User = The associated user.
pc_attributeuser.Value = The attribute value for this user.

pc_attr_name_l10n = null

pc_attr_name_l10n.ID = Internally managed primary key
pc_attr_name_l10n.Language = 
pc_attr_name_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_attr_name_l10n.Owner = 
pc_attr_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_attr_name_l10n.Value = 

pc_attr_desc_l10n = null

pc_attr_desc_l10n.ID = Internally managed primary key
pc_attr_desc_l10n.Language = 
pc_attr_desc_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_attr_desc_l10n.Owner = 
pc_attr_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_attr_desc_l10n.Value = 

pc_auditinformation = Contains information about an audit

pc_auditinformation.ID = Internally managed primary key
pc_auditinformation.ActualAuditMethod = Actual audit method used for this audit
pc_auditinformation.AuditFee_amt = 
pc_auditinformation.AuditFee_cur = 
pc_auditinformation.AuditMethod = The audit method to be used.
pc_auditinformation.AuditPeriodEndDate = End date of the audit period.
pc_auditinformation.AuditPeriodStartDate = Start date of the audit period.
pc_auditinformation.AuditScheduleType = The type of schedule that is used to schedule audits
pc_auditinformation.CreateTime = Timestamp when the object was created
pc_auditinformation.CreateUser = User who created the object
pc_auditinformation.DueDate = Due date of the audit.
pc_auditinformation.Escalated = Whether or not this audit has been escalated by the overdue premium report process.
pc_auditinformation.InitDate = Initialization date of the audit task.
pc_auditinformation.Instructions = Special instructions for the auditor
pc_auditinformation.PolicyTerm = Associated policy term
pc_auditinformation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_auditinformation.ReceivedDate = The date the audit related information was received
pc_auditinformation.ReversalDate = The date this audit was reversed
pc_auditinformation.RevisionType = The type of revision (revision or reversal) that is applied to this audit
pc_auditinformation.Series = To indicate whether this is a series audit; primarily to distinguish between single checking and series checking.
pc_auditinformation.UpdateTime = Timestamp when the object was last updated
pc_auditinformation.UpdateUser = User who last updated the object
pc_auditinformation.Waive = Was the audit waived?

pc_autonumbersequence = Handles numbering of the effdated entities.

pc_autonumbersequence.ID = Internally managed primary key
pc_autonumbersequence.CreateTime = Timestamp when the object was created
pc_autonumbersequence.CreateUser = User who created the object
pc_autonumbersequence.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_autonumbersequence.UpdateTime = Timestamp when the object was last updated
pc_autonumbersequence.UpdateUser = User who last updated the object

pc_bacededpremium = A CommercialAuto implementation of the RICededPremium delegate

pc_bacededpremium.ID = Internally managed primary key
pc_bacededpremium.BACost = 
pc_bacededpremium.CreateTime = Timestamp when the object was created
pc_bacededpremium.CreateUser = User who created the object
pc_bacededpremium.EffectiveDate = Effective date of this row.
pc_bacededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_bacededpremium.PolicyTerm = The policy term to which this ceding applies
pc_bacededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bacededpremium.RiskDate = Effective date of the associated risk
pc_bacededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_bacededpremium.UpdateTime = Timestamp when the object was last updated
pc_bacededpremium.UpdateUser = User who last updated the object
pc_bacededpremium.CedingHistory = 
pc_bacededpremium.CedingTransactions = 

pc_bacededpremiumhistory = A CommercialAuto implementation of the RICededPremiumHistory delegate

pc_bacededpremiumhistory.ID = Internally managed primary key
pc_bacededpremiumhistory.BACededPremium = 
pc_bacededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_bacededpremiumhistory.CreateTime = Timestamp when the object was created
pc_bacededpremiumhistory.CreateUser = User who created the object
pc_bacededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_bacededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bacededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_bacededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_bacededpremiumhistory.UpdateUser = User who last updated the object

pc_bacededpremiumtransaction = A Commercial Auto implementation of the RICededPremiumTransaction delegate

pc_bacededpremiumtransaction.ID = Internally managed primary key
pc_bacededpremiumtransaction.Agreement = The agreement being ceded to
pc_bacededpremiumtransaction.BACededPremium = 
pc_bacededpremiumtransaction.BACededPremiumHistory = 
pc_bacededpremiumtransaction.BasisGNP_amt = 
pc_bacededpremiumtransaction.BasisGNP_cur = 
pc_bacededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_bacededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_bacededpremiumtransaction.CededPremium_amt = 
pc_bacededpremiumtransaction.CededPremium_cur = 
pc_bacededpremiumtransaction.CededPremiumMarkup_amt = 
pc_bacededpremiumtransaction.CededPremiumMarkup_cur = 
pc_bacededpremiumtransaction.CededRiskAmount_amt = 
pc_bacededpremiumtransaction.CededRiskAmount_cur = 
pc_bacededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_bacededpremiumtransaction.Commission_amt = 
pc_bacededpremiumtransaction.Commission_cur = 
pc_bacededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_bacededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_bacededpremiumtransaction.CreateUser = User who created the object
pc_bacededpremiumtransaction.DatePosted = The date the transaction was created
pc_bacededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_bacededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_bacededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_bacededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_bacededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_bacededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_bacededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bacededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_bacededpremiumtransaction.UpdateUser = User who last updated the object

pc_bacost = A Commercial Auto unit of price for a period of time that should not be broken up any further.

pc_bacost.ID = Internally managed primary key
pc_bacost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_bacost.ActualAmount_amt = 
pc_bacost.ActualAmount_cur = 
pc_bacost.ActualAmountBilling_amt = 
pc_bacost.ActualAmountBilling_cur = 
pc_bacost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_bacost.ActualTermAmount_amt = 
pc_bacost.ActualTermAmount_cur = 
pc_bacost.ActualTermAmountBilling_amt = 
pc_bacost.ActualTermAmountBilling_cur = 
pc_bacost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_bacost.BranchValue = Link to root of effdated tree
pc_bacost.BusinessAutoLine = 
pc_bacost.BusinessVehicle = The Business Vehicle related to the this Cost
pc_bacost.ChangeType = Type of change made to this row
pc_bacost.ChargeGroup = Custom group name to group charges together
pc_bacost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_bacost.CreateTime = Timestamp when the object was created
pc_bacost.CreateUser = User who created the object
pc_bacost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bacost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bacost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_bacost.Jurisdiction = The Jurisdiction related to the this Cost
pc_bacost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_bacost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_bacost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_bacost.OverrideAmount_amt = 
pc_bacost.OverrideAmount_cur = 
pc_bacost.OverrideAmountBilling_amt = 
pc_bacost.OverrideAmountBilling_cur = 
pc_bacost.OverrideBaseRate = The user-specified override for the base rate.
pc_bacost.OverrideReason = Why the override is being applied.
pc_bacost.OverrideSource = Source of override, or null if none
pc_bacost.OverrideTermAmount_amt = 
pc_bacost.OverrideTermAmount_cur = 
pc_bacost.OverrideTermAmountBilling_amt = 
pc_bacost.OverrideTermAmountBilling_cur = 
pc_bacost.PolicyFXRate = 
pc_bacost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_bacost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bacost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_bacost.RateBook = 
pc_bacost.RatedOrder = The order in which this cost was rated.
pc_bacost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_bacost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_bacost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_bacost.StandardAmount_amt = 
pc_bacost.StandardAmount_cur = 
pc_bacost.StandardAmountBilling_amt = 
pc_bacost.StandardAmountBilling_cur = 
pc_bacost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_bacost.StandardTermAmount_amt = 
pc_bacost.StandardTermAmount_cur = 
pc_bacost.StandardTermAmountBilling_amt = 
pc_bacost.StandardTermAmountBilling_cur = 
pc_bacost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_bacost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bacost.UpdateTime = Timestamp when the object was last updated
pc_bacost.UpdateUser = User who last updated the object
pc_bacost.BAJurisdictionCostType = 
pc_bacost.BusinessAutoCov = 
pc_bacost.BANonOwnedLiabCovCostType = 
pc_bacost.BANonOwnedLiabCovCostType = deprecated - use BALineCovNonownedCost since non owned coverages have now been moved to the line level
pc_bacost.BAStateCov = 
pc_bacost.BAStateCovPIPCostType = 
pc_bacost.BusinessVehicleCov = 

pc_bahiredautoinfo = Information necessary for rating hired auto coverages

pc_bahiredautoinfo.ID = Internally managed primary key
pc_bahiredautoinfo.Basis = Basis amount for hired auto coverage
pc_bahiredautoinfo.BranchValue = Link to root of effdated tree
pc_bahiredautoinfo.ChangeType = Type of change made to this row
pc_bahiredautoinfo.CreateTime = Timestamp when the object was created
pc_bahiredautoinfo.CreateUser = User who created the object
pc_bahiredautoinfo.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bahiredautoinfo.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bahiredautoinfo.IfAnyExposure = Option to indicate that coverage is provided with precise liability to be determined later (at audit)
pc_bahiredautoinfo.Jurisdiction = The Jurisdiction related to hired auto basis
pc_bahiredautoinfo.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bahiredautoinfo.UpdateTime = Timestamp when the object was last updated
pc_bahiredautoinfo.UpdateUser = User who last updated the object

pc_bajurismodifier = A modifier for Commercial Auto Jurisdictions

pc_bajurismodifier.ID = Internally managed primary key
pc_bajurismodifier.BooleanModifier = Boolean modifier
pc_bajurismodifier.BranchValue = Link to root of effdated tree
pc_bajurismodifier.ChangeType = Type of change made to this row
pc_bajurismodifier.CreateTime = Timestamp when the object was created
pc_bajurismodifier.CreateUser = User who created the object
pc_bajurismodifier.DateModifier = Date modifier
pc_bajurismodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bajurismodifier.Eligible = Whether this modifier is eligible or not
pc_bajurismodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bajurismodifier.Jurisdiction = The jurisdiction for which this modifier applies
pc_bajurismodifier.Justification = Additional comment to justify the value of this modifier
pc_bajurismodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_bajurismodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bajurismodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_bajurismodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bajurismodifier.State = The state to attach rating information to.
pc_bajurismodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bajurismodifier.TypeKeyModifier = Typekey modifier
pc_bajurismodifier.UpdateTime = Timestamp when the object was last updated
pc_bajurismodifier.UpdateUser = User who last updated the object
pc_bajurismodifier.ValueFinal = Whether this modifier's value is final or not
pc_bajurismodifier.BAJurisRateFactors = Individual components of the rating factor

pc_bajurisratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_bajurisratefactor.ID = Internally managed primary key
pc_bajurisratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_bajurisratefactor.BAJurisModifier = The modifier containing this rate factor
pc_bajurisratefactor.BranchValue = Link to root of effdated tree
pc_bajurisratefactor.ChangeType = Type of change made to this row
pc_bajurisratefactor.CreateTime = Timestamp when the object was created
pc_bajurisratefactor.CreateUser = User who created the object
pc_bajurisratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bajurisratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bajurisratefactor.Justification = Additional comment to justify this rate factor
pc_bajurisratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_bajurisratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bajurisratefactor.UpdateTime = Timestamp when the object was last updated
pc_bajurisratefactor.UpdateUser = User who last updated the object

pc_bajurisdiction = Container for state-level elements

pc_bajurisdiction.ID = Internally managed primary key
pc_bajurisdiction.BALine = 
pc_bajurisdiction.BranchValue = Link to root of effdated tree
pc_bajurisdiction.ChangeType = Type of change made to this row
pc_bajurisdiction.CreateTime = Timestamp when the object was created
pc_bajurisdiction.CreateUser = User who created the object
pc_bajurisdiction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bajurisdiction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bajurisdiction.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_bajurisdiction.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_bajurisdiction.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_bajurisdiction.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_bajurisdiction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bajurisdiction.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_bajurisdiction.State = The jurisdiction that is covered
pc_bajurisdiction.UpdateTime = Timestamp when the object was last updated
pc_bajurisdiction.UpdateUser = User who last updated the object
pc_bajurisdiction.BAJurisModifiers = Rating info for the line.
pc_bajurisdiction.Conditions = All Conditions on this State
pc_bajurisdiction.Costs = 
pc_bajurisdiction.Coverages = All Coverages on this State
pc_bajurisdiction.Exclusions = All Exclusions on this State

pc_bamodifier = A line-level modifier for Commercial Auto

pc_bamodifier.ID = Internally managed primary key
pc_bamodifier.BALine = 
pc_bamodifier.BooleanModifier = Boolean modifier
pc_bamodifier.BranchValue = Link to root of effdated tree
pc_bamodifier.ChangeType = Type of change made to this row
pc_bamodifier.CreateTime = Timestamp when the object was created
pc_bamodifier.CreateUser = User who created the object
pc_bamodifier.DateModifier = Date modifier
pc_bamodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bamodifier.Eligible = Whether this modifier is eligible or not
pc_bamodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bamodifier.Justification = Additional comment to justify the value of this modifier
pc_bamodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_bamodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bamodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_bamodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bamodifier.State = The state to attach rating information to.
pc_bamodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bamodifier.TypeKeyModifier = Typekey modifier
pc_bamodifier.UpdateTime = Timestamp when the object was last updated
pc_bamodifier.UpdateUser = User who last updated the object
pc_bamodifier.ValueFinal = Whether this modifier's value is final or not
pc_bamodifier.BARateFactors = Individual components of the rating factor

pc_banonownedinfo = Information necessary for rating non-owned coverages

pc_banonownedinfo.ID = Internally managed primary key
pc_banonownedinfo.BranchValue = Link to root of effdated tree
pc_banonownedinfo.ChangeType = Type of change made to this row
pc_banonownedinfo.CreateTime = Timestamp when the object was created
pc_banonownedinfo.CreateUser = User who created the object
pc_banonownedinfo.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_banonownedinfo.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_banonownedinfo.Jurisdiction = The Jurisdiction for the Non Owned Basis and its coverage
pc_banonownedinfo.NumEmployees = Number of employees
pc_banonownedinfo.NumPartners = Number of partners
pc_banonownedinfo.NumVolunteers = Number of volunteers
pc_banonownedinfo.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_banonownedinfo.UpdateTime = Timestamp when the object was last updated
pc_banonownedinfo.UpdateUser = User who last updated the object

pc_baratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_baratefactor.ID = Internally managed primary key
pc_baratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_baratefactor.BAModifier = 
pc_baratefactor.BranchValue = Link to root of effdated tree
pc_baratefactor.ChangeType = Type of change made to this row
pc_baratefactor.CreateTime = Timestamp when the object was created
pc_baratefactor.CreateUser = User who created the object
pc_baratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_baratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_baratefactor.Justification = Additional comment to justify this rate factor
pc_baratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_baratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_baratefactor.UpdateTime = Timestamp when the object was last updated
pc_baratefactor.UpdateUser = User who last updated the object

pc_bastatecond = A state-level policy condition for Commercial Auto

pc_bastatecond.ID = Internally managed primary key
pc_bastatecond.BAJurisdiction = 
pc_bastatecond.BranchValue = Link to root of effdated tree
pc_bastatecond.ChangeType = Type of change made to this row
pc_bastatecond.CreateTime = Timestamp when the object was created
pc_bastatecond.CreateUser = User who created the object
pc_bastatecond.Currency = Currency associated with the policy condition
pc_bastatecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bastatecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bastatecond.PatternCode = The pattern defining what kind of Condition this is
pc_bastatecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bastatecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bastatecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bastatecond.UpdateTime = Timestamp when the object was last updated
pc_bastatecond.UpdateUser = User who last updated the object

pc_bastatecov = A state-level coverage for Commercial Auto

pc_bastatecov.ID = Internally managed primary key
pc_bastatecov.BAJurisdiction = 
pc_bastatecov.BranchValue = Link to root of effdated tree
pc_bastatecov.ChangeType = Type of change made to this row
pc_bastatecov.CreateTime = Timestamp when the object was created
pc_bastatecov.CreateUser = User who created the object
pc_bastatecov.Currency = Currency associated with the coverage
pc_bastatecov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bastatecov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bastatecov.PatternCode = The pattern defining what kind of Coverage this is
pc_bastatecov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bastatecov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bastatecov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bastatecov.UpdateTime = Timestamp when the object was last updated
pc_bastatecov.UpdateUser = User who last updated the object
pc_bastatecov.Costs = 
pc_bastatecov.HiredCauseOfLoss = Cause of loss

pc_bastateexcl = A state-level exclusion for Commercial Auto

pc_bastateexcl.ID = Internally managed primary key
pc_bastateexcl.BAJurisdiction = 
pc_bastateexcl.BranchValue = Link to root of effdated tree
pc_bastateexcl.ChangeType = Type of change made to this row
pc_bastateexcl.CreateTime = Timestamp when the object was created
pc_bastateexcl.CreateUser = User who created the object
pc_bastateexcl.Currency = Currency associated with the Exclusion
pc_bastateexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bastateexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bastateexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_bastateexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bastateexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bastateexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bastateexcl.UpdateTime = Timestamp when the object was last updated
pc_bastateexcl.UpdateUser = User who last updated the object

pc_batransaction = A transaction for the Commercial Auto line

pc_batransaction.ID = Internally managed primary key
pc_batransaction.Amount_amt = 
pc_batransaction.Amount_cur = 
pc_batransaction.AmountBilling_amt = 
pc_batransaction.AmountBilling_cur = 
pc_batransaction.BACost = The cost this transaction modifies.
pc_batransaction.BranchValue = Link to root of effdated tree
pc_batransaction.ChangeType = Type of change made to this row
pc_batransaction.Charged = Whether or not this transaction amount should be charged.
pc_batransaction.CreateTime = Timestamp when the object was created
pc_batransaction.CreateUser = User who created the object
pc_batransaction.EffDate = The date on which the transaction becomes effective.
pc_batransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_batransaction.ExpDate = The date on which the transaction expires.
pc_batransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_batransaction.PolicyFXRate = 
pc_batransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_batransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_batransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_batransaction.UpdateTime = Timestamp when the object was last updated
pc_batransaction.UpdateUser = User who last updated the object
pc_batransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_batransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_bopbuilding = BOP Building

pc_bopbuilding.ID = Internally managed primary key
pc_bopbuilding.BasisAmount = Basis Amount
pc_bopbuilding.BOPLocation = 
pc_bopbuilding.BranchValue = Link to root of effdated tree
pc_bopbuilding.Building = 
pc_bopbuilding.ChangeType = Type of change made to this row
pc_bopbuilding.ClassCode = Class code of building.
pc_bopbuilding.ConstructionType = Type of building construction
pc_bopbuilding.CreateTime = Timestamp when the object was created
pc_bopbuilding.CreateUser = User who created the object
pc_bopbuilding.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopbuilding.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopbuilding.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_bopbuilding.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_bopbuilding.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_bopbuilding.NumDiving = Number of diving boards
pc_bopbuilding.NumPools = Number of swimming pools
pc_bopbuilding.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_bopbuilding.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopbuilding.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_bopbuilding.UpdateTime = Timestamp when the object was last updated
pc_bopbuilding.UpdateUser = User who last updated the object
pc_bopbuilding.AdditionalInterests = Additional interests on this building
pc_bopbuilding.Coverages = All coverages that apply directly to this building.

pc_bopbuildingcov = A building-level coverage for Business Owners

pc_bopbuildingcov.ID = Internally managed primary key
pc_bopbuildingcov.BOPBuilding = 
pc_bopbuildingcov.BranchValue = Link to root of effdated tree
pc_bopbuildingcov.ChangeType = Type of change made to this row
pc_bopbuildingcov.CreateTime = Timestamp when the object was created
pc_bopbuildingcov.CreateUser = User who created the object
pc_bopbuildingcov.Currency = Currency associated with the coverage
pc_bopbuildingcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopbuildingcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopbuildingcov.PatternCode = The pattern defining what kind of Coverage this is
pc_bopbuildingcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopbuildingcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bopbuildingcov.ScheduleAutoNumberSeq = Sequence to autonumber schedule items
pc_bopbuildingcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bopbuildingcov.UpdateTime = Timestamp when the object was last updated
pc_bopbuildingcov.UpdateUser = User who last updated the object
pc_bopbuildingcov.Costs = 

pc_bopcededpremium = A BusinessOwners implementation of the RICededPremium delegate

pc_bopcededpremium.ID = Internally managed primary key
pc_bopcededpremium.BOPCost = 
pc_bopcededpremium.CreateTime = Timestamp when the object was created
pc_bopcededpremium.CreateUser = User who created the object
pc_bopcededpremium.EffectiveDate = Effective date of this row.
pc_bopcededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_bopcededpremium.PolicyTerm = The policy term to which this ceding applies
pc_bopcededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopcededpremium.RiskDate = Effective date of the associated risk
pc_bopcededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_bopcededpremium.UpdateTime = Timestamp when the object was last updated
pc_bopcededpremium.UpdateUser = User who last updated the object
pc_bopcededpremium.CedingHistory = 
pc_bopcededpremium.CedingTransactions = 

pc_bopcededpremiumhistory = A BusinessOwners implementation of the RICededPremiumHistory delegate

pc_bopcededpremiumhistory.ID = Internally managed primary key
pc_bopcededpremiumhistory.BOPCededPremium = 
pc_bopcededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_bopcededpremiumhistory.CreateTime = Timestamp when the object was created
pc_bopcededpremiumhistory.CreateUser = User who created the object
pc_bopcededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_bopcededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopcededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_bopcededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_bopcededpremiumhistory.UpdateUser = User who last updated the object

pc_bopcededpremiumtransaction = A BusinessOwners implementation of the RICededPremiumTransaction delegate

pc_bopcededpremiumtransaction.ID = Internally managed primary key
pc_bopcededpremiumtransaction.Agreement = The agreement being ceded to
pc_bopcededpremiumtransaction.BasisGNP_amt = 
pc_bopcededpremiumtransaction.BasisGNP_cur = 
pc_bopcededpremiumtransaction.BOPCededPremium = 
pc_bopcededpremiumtransaction.BOPCededPremiumHistory = 
pc_bopcededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_bopcededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_bopcededpremiumtransaction.CededPremium_amt = 
pc_bopcededpremiumtransaction.CededPremium_cur = 
pc_bopcededpremiumtransaction.CededPremiumMarkup_amt = 
pc_bopcededpremiumtransaction.CededPremiumMarkup_cur = 
pc_bopcededpremiumtransaction.CededRiskAmount_amt = 
pc_bopcededpremiumtransaction.CededRiskAmount_cur = 
pc_bopcededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_bopcededpremiumtransaction.Commission_amt = 
pc_bopcededpremiumtransaction.Commission_cur = 
pc_bopcededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_bopcededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_bopcededpremiumtransaction.CreateUser = User who created the object
pc_bopcededpremiumtransaction.DatePosted = The date the transaction was created
pc_bopcededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_bopcededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_bopcededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_bopcededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_bopcededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_bopcededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_bopcededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopcededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_bopcededpremiumtransaction.UpdateUser = User who last updated the object

pc_bopclasscode = Business owners building class codes.  Premium calculations are driven by class codes and both premium and losses are reported by class codes to rating bureaus.

pc_bopclasscode.ID = Internally managed primary key
pc_bopclasscode.Basis = Rating basis for this class code.
pc_bopclasscode.BOPLiabilityClassGroup = A value required by the rating engine for BOP.
pc_bopclasscode.BOPPropertyRateNumber = A value required by the rating engine for BOP.
pc_bopclasscode.Classification = The Classification of the code (essentially a short description)
pc_bopclasscode.ClassIndicator = The Class Indicator for the class code
pc_bopclasscode.Code = The Class Code for a building in a line of insurance
pc_bopclasscode.CreateTime = Timestamp when the object was created
pc_bopclasscode.CreateUser = User who created the object
pc_bopclasscode.EffectiveDate = Effective date of this row.
pc_bopclasscode.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_bopclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopclasscode.UpdateTime = Timestamp when the object was last updated
pc_bopclasscode.UpdateUser = User who last updated the object

pc_bopclcode_class = null

pc_bopclcode_class.ID = Internally managed primary key
pc_bopclcode_class.Language = 
pc_bopclcode_class.Owner = 
pc_bopclcode_class.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopclcode_class.Value = 

pc_bopcost = A BusinessOwners unit of price for a period of time, not to be broken up any further

pc_bopcost.ID = Internally managed primary key
pc_bopcost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_bopcost.ActualAmount_amt = 
pc_bopcost.ActualAmount_cur = 
pc_bopcost.ActualAmountBilling_amt = 
pc_bopcost.ActualAmountBilling_cur = 
pc_bopcost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_bopcost.ActualTermAmount_amt = 
pc_bopcost.ActualTermAmount_cur = 
pc_bopcost.ActualTermAmountBilling_amt = 
pc_bopcost.ActualTermAmountBilling_cur = 
pc_bopcost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_bopcost.BranchValue = Link to root of effdated tree
pc_bopcost.BusinessOwnersLine = 
pc_bopcost.ChangeType = Type of change made to this row
pc_bopcost.ChargeGroup = Custom group name to group charges together
pc_bopcost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_bopcost.CreateTime = Timestamp when the object was created
pc_bopcost.CreateUser = User who created the object
pc_bopcost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopcost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopcost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_bopcost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_bopcost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_bopcost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_bopcost.OverrideAmount_amt = 
pc_bopcost.OverrideAmount_cur = 
pc_bopcost.OverrideAmountBilling_amt = 
pc_bopcost.OverrideAmountBilling_cur = 
pc_bopcost.OverrideBaseRate = The user-specified override for the base rate.
pc_bopcost.OverrideReason = Why the override is being applied.
pc_bopcost.OverrideSource = Source of override, or null if none
pc_bopcost.OverrideTermAmount_amt = 
pc_bopcost.OverrideTermAmount_cur = 
pc_bopcost.OverrideTermAmountBilling_amt = 
pc_bopcost.OverrideTermAmountBilling_cur = 
pc_bopcost.PolicyFXRate = 
pc_bopcost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_bopcost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopcost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_bopcost.RateBook = 
pc_bopcost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_bopcost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_bopcost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_bopcost.StandardAmount_amt = 
pc_bopcost.StandardAmount_cur = 
pc_bopcost.StandardAmountBilling_amt = 
pc_bopcost.StandardAmountBilling_cur = 
pc_bopcost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_bopcost.StandardTermAmount_amt = 
pc_bopcost.StandardTermAmount_cur = 
pc_bopcost.StandardTermAmountBilling_amt = 
pc_bopcost.StandardTermAmountBilling_cur = 
pc_bopcost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_bopcost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bopcost.UpdateTime = Timestamp when the object was last updated
pc_bopcost.UpdateUser = User who last updated the object
pc_bopcost.AdditionalInsured = 
pc_bopcost.BOPBuildingCov = 
pc_bopcost.BOPBuilding = 
pc_bopcost.BusinessOwnersCov = 
pc_bopcost.BOPLocationCov = 
pc_bopcost.OnPremises = Whether the money covered is on the premises or off it
pc_bopcost.TaxState = Jurisdiction tax that applies

pc_boplocation = BOP Location

pc_boplocation.ID = Internally managed primary key
pc_boplocation.BOPLine = 
pc_boplocation.BranchValue = Link to root of effdated tree
pc_boplocation.ChangeType = Type of change made to this row
pc_boplocation.CityLimits = Whether the location is within city limits
pc_boplocation.CreateTime = Timestamp when the object was created
pc_boplocation.CreateUser = User who created the object
pc_boplocation.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boplocation.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boplocation.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_boplocation.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_boplocation.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_boplocation.Location = Location of business exposure, e.g., one or more buildings.
pc_boplocation.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_boplocation.PrincipalOpsDesc = Principle operations and occupancy.
pc_boplocation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boplocation.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_boplocation.RiskClass = Foreign key to Risk Class Codes
pc_boplocation.UpdateTime = Timestamp when the object was last updated
pc_boplocation.UpdateUser = User who last updated the object
pc_boplocation.Buildings = Buildings on this location
pc_boplocation.Coverages = All coverages that apply directly to this location.
pc_boplocation.LocationAnswers = Set of answers for any questions on this location

pc_boplocationanswer = Links location and answer references - answers are persisted text responses to questions in the location ui. Specific to Policy Center

pc_boplocationanswer.ID = Internally managed primary key
pc_boplocationanswer.BooleanAnswer = Yes / no component of answer.
pc_boplocationanswer.BOPLocation = 
pc_boplocationanswer.BranchValue = Link to root of effdated tree
pc_boplocationanswer.ChangeType = Type of change made to this row
pc_boplocationanswer.ChoiceAnswerCode = Choice of the answer.
pc_boplocationanswer.CreateTime = Timestamp when the object was created
pc_boplocationanswer.CreateUser = User who created the object
pc_boplocationanswer.DateAnswer = The answer in date form.
pc_boplocationanswer.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boplocationanswer.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boplocationanswer.IntegerAnswer = Numeric component of answer.
pc_boplocationanswer.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boplocationanswer.QuestionCode = Question that this answer answers
pc_boplocationanswer.TextAnswer = Either the answer's text.
pc_boplocationanswer.UpdateTime = Timestamp when the object was last updated
pc_boplocationanswer.UpdateUser = User who last updated the object

pc_boplocationcov = A location-level coverage for Business Owners

pc_boplocationcov.ID = Internally managed primary key
pc_boplocationcov.BOPLocation = 
pc_boplocationcov.BranchValue = Link to root of effdated tree
pc_boplocationcov.ChangeType = Type of change made to this row
pc_boplocationcov.CreateTime = Timestamp when the object was created
pc_boplocationcov.CreateUser = User who created the object
pc_boplocationcov.Currency = Currency associated with the coverage
pc_boplocationcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boplocationcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boplocationcov.PatternCode = The pattern defining what kind of Coverage this is
pc_boplocationcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boplocationcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_boplocationcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_boplocationcov.UpdateTime = Timestamp when the object was last updated
pc_boplocationcov.UpdateUser = User who last updated the object
pc_boplocationcov.Costs = 

pc_bopmodifier = A line-level modifier for Business Owners

pc_bopmodifier.ID = Internally managed primary key
pc_bopmodifier.BooleanModifier = Boolean modifier
pc_bopmodifier.BOPLine = 
pc_bopmodifier.BranchValue = Link to root of effdated tree
pc_bopmodifier.ChangeType = Type of change made to this row
pc_bopmodifier.CreateTime = Timestamp when the object was created
pc_bopmodifier.CreateUser = User who created the object
pc_bopmodifier.DateModifier = Date modifier
pc_bopmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopmodifier.Eligible = Whether this modifier is eligible or not
pc_bopmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopmodifier.Justification = Additional comment to justify the value of this modifier
pc_bopmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_bopmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_bopmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bopmodifier.State = The state to attach rating information to.
pc_bopmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bopmodifier.TypeKeyModifier = Typekey modifier
pc_bopmodifier.UpdateTime = Timestamp when the object was last updated
pc_bopmodifier.UpdateUser = User who last updated the object
pc_bopmodifier.ValueFinal = Whether this modifier's value is final or not
pc_bopmodifier.BOPRateFactors = Individual components of the rating factor

pc_bopratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_bopratefactor.ID = Internally managed primary key
pc_bopratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_bopratefactor.BOPModifier = 
pc_bopratefactor.BranchValue = Link to root of effdated tree
pc_bopratefactor.ChangeType = Type of change made to this row
pc_bopratefactor.CreateTime = Timestamp when the object was created
pc_bopratefactor.CreateUser = User who created the object
pc_bopratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopratefactor.Justification = Additional comment to justify this rate factor
pc_bopratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_bopratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopratefactor.UpdateTime = Timestamp when the object was last updated
pc_bopratefactor.UpdateUser = User who last updated the object

pc_bopscheduledequipment = BOP Location

pc_bopscheduledequipment.ID = Internally managed primary key
pc_bopscheduledequipment.BOPLine = 
pc_bopscheduledequipment.BranchValue = Link to root of effdated tree
pc_bopscheduledequipment.ChangeType = Type of change made to this row
pc_bopscheduledequipment.CreateTime = Timestamp when the object was created
pc_bopscheduledequipment.CreateUser = User who created the object
pc_bopscheduledequipment.Description = Description
pc_bopscheduledequipment.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bopscheduledequipment.EquipmentNumber = The index of this equipment
pc_bopscheduledequipment.EquipmentValue = Equipment Value
pc_bopscheduledequipment.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bopscheduledequipment.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bopscheduledequipment.SerialNumber = Equipment Identifier.
pc_bopscheduledequipment.UpdateTime = Timestamp when the object was last updated
pc_bopscheduledequipment.UpdateUser = User who last updated the object

pc_boptransaction = A transaction for the Business Owners line

pc_boptransaction.ID = Internally managed primary key
pc_boptransaction.Amount_amt = 
pc_boptransaction.Amount_cur = 
pc_boptransaction.AmountBilling_amt = 
pc_boptransaction.AmountBilling_cur = 
pc_boptransaction.BOPCost = The cost this transaction modifies.
pc_boptransaction.BranchValue = Link to root of effdated tree
pc_boptransaction.ChangeType = Type of change made to this row
pc_boptransaction.Charged = Whether or not this transaction amount should be charged.
pc_boptransaction.CreateTime = Timestamp when the object was created
pc_boptransaction.CreateUser = User who created the object
pc_boptransaction.EffDate = The date on which the transaction becomes effective.
pc_boptransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boptransaction.ExpDate = The date on which the transaction expires.
pc_boptransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boptransaction.PolicyFXRate = 
pc_boptransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_boptransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boptransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_boptransaction.UpdateTime = Timestamp when the object was last updated
pc_boptransaction.UpdateUser = User who last updated the object
pc_boptransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_boptransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_batchserver = null

pc_batchserver.ID = Internally managed primary key
pc_batchserver.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_batchserver.ServerId = Service id of the batch server
pc_batchserver.StartupTime = Startup time of the batch server
pc_batchserver.UUID = UUID of the batch server

pc_beanversiondatadist = Stores bean version data distributions.

pc_beanversiondatadist.ID = Internally managed primary key
pc_beanversiondatadist.BeanCount = Count of # of rows with this bean version.
pc_beanversiondatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_beanversiondatadist.TableDataDist = TableDataDist for this object.

pc_billinginvoicestream = Billing invoice stream, used to set up a new policy term and does not need to be revisioned.

pc_billinginvoicestream.ID = Internally managed primary key
pc_billinginvoicestream.CreateTime = Timestamp when the object was created
pc_billinginvoicestream.CreateUser = User who created the object
pc_billinginvoicestream.DayOfWeek = For Every Week payment plans, this is the day of the week that the invoice should fall on.
pc_billinginvoicestream.Description = 
pc_billinginvoicestream.DueDateBilling = Whether or not the account's invoice date(s) are the date the invoice is sent or due.                 If false the date is the date the invoice is sent (EventDate),                 If true the date is the date the invoice is due (PaymentDueDate)
pc_billinginvoicestream.FirstAnchorDate = A date that determines the invoicing day of month, day of week, etc.  This date should fall on the           desired invoicing day of month or day of week.           Invoices in the stream are billed (sent) DaysBeforeAnchorDatesForInvoiceBilling days before the invoicing           day of month, day of week, etc. that is specified by the anchor dates.           If the invoice payer chooses not to send invoices on a non-business day, the target bill (send) date will be           adjusted to be a business day, depending upon the payer's method of adjusting for business day.
pc_billinginvoicestream.FirstDayOfMonth = First day (of two) of the month for twice-per-month invoicing.
pc_billinginvoicestream.Interval = The Periodicity of Invoices in the stream -- Weekly, Monthly, Quarterly, etc.
pc_billinginvoicestream.PaymentInstrumentID = The Public ID of the payment instrument.  May be null.
pc_billinginvoicestream.PaymentMethod = Payment Method (e.g. Credit Card, Send Invoice...)
pc_billinginvoicestream.PolicyPeriod = The associated policy period.
pc_billinginvoicestream.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_billinginvoicestream.SecondAnchorDate = A date that determines the second invoicing day for periodicities that need two anchor dates.           This determines the second invoicing day of month for twice-per-month BillingPeriodicity.  This date should fall on the           desired second invoicing day of month.  If the BillingPeriodicity is twice-per-month and the second anchor date is           not set, then the stream will invoice on the day determined by the FirstAnchorDate and one-half month from then.
pc_billinginvoicestream.SecondDayOfMonth = Second day (of two) of the month for twice-per-month invoicing.
pc_billinginvoicestream.UnappliedFundID = The Public ID of the existing unapplied fund which has been selected for this invoice stream. Null if there is no existing unapplied fund.
pc_billinginvoicestream.UnappliedFundDescription = The description of a new unapplied fund for this invoice stream. Null if there is no new unapplied fund being created.
pc_billinginvoicestream.UpdateTime = Timestamp when the object was last updated
pc_billinginvoicestream.UpdateUser = User who last updated the object

pc_blobcoldatadist = Stores bean version data distributions.

pc_blobcoldatadist.ID = Internally managed primary key
pc_blobcoldatadist.AverageLength = Average length of blob values.
pc_blobcoldatadist.BlobColName = Blob column name.
pc_blobcoldatadist.MaximumLength = Maximum length of blob values.
pc_blobcoldatadist.MinimumLength = Minimum length of blob values.
pc_blobcoldatadist.NumNonNull = Count of # of non null values.
pc_blobcoldatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_blobcoldatadist.TableDataDist = TableDataDist for this object.

pc_booleancoldatadist = Stores boolean (true/false) data distribution.

pc_booleancoldatadist.ID = Internally managed primary key
pc_booleancoldatadist.BooleanColumnName = Name of boolean column.
pc_booleancoldatadist.NumFalse = Count of # of false values.
pc_booleancoldatadist.NumNonNull = Count of # of non null values.
pc_booleancoldatadist.NumTrue = Count of # of true values.
pc_booleancoldatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_booleancoldatadist.TableDataDist = TableDataDist for this object.

pc_broadcastbatch = null

pc_broadcastbatch.ID = Internally managed primary key
pc_broadcastbatch.Messages = Serialized list of messages
pc_broadcastbatch.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_broadcastbatch.SeqNo = Sequence ID
pc_broadcastbatch.ServerId = Sender's serverID
pc_broadcastbatch.TimeInserted = Time batch inserted

pc_building = Building

pc_building.ID = Internally managed primary key
pc_building.AlarmCertificate = Alarm certificate number
pc_building.AlarmCertification = Alarm certification
pc_building.AlarmClass = Alarm class
pc_building.AlarmExpiration = Alarm expiration date
pc_building.AlarmGrade = Alarm grade
pc_building.AreaFinished = Building finished square footage
pc_building.AreaLeased = Percentage of area leased
pc_building.AreaUnfinished = Building unfinished square footage
pc_building.BasementArea = Area of the basement
pc_building.BranchValue = Link to root of effdated tree
pc_building.BuildingAlarmType = Building alarm type
pc_building.BuildingNum = The building number
pc_building.BurglarySafeguard = Burglary safeguard
pc_building.ChangeType = Type of change made to this row
pc_building.ConstructionType = Type of building construction
pc_building.CreateTime = Timestamp when the object was created
pc_building.CreateUser = User who created the object
pc_building.Description = Description of the building
pc_building.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_building.EffectivenessGrade = Building code effectiveness grade
pc_building.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_building.HeatingBoilerElsewhere = Indicates if a heating boiler other than on the premises is insured
pc_building.HeatingBoilerOnPremises = Indicates if a heating boiler is on the premises
pc_building.InterestType = Types of interest
pc_building.NumBasements = Number of basements
pc_building.NumStories = Number of stories
pc_building.NumUnits = Number of units
pc_building.PercentOccupied = % occupied
pc_building.PercentVacant = % vacancy
pc_building.PolicyLocation = 
pc_building.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_building.RentedOthers = Rented to Others
pc_building.RoofType = Roof type
pc_building.SprinklerCoverage = % covered by sprinkler
pc_building.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_building.TotalArea = Total area (excluding the basement)
pc_building.UpdateTime = Timestamp when the object was last updated
pc_building.UpdateUser = User who last updated the object
pc_building.WindRating = Rating against wind damage
pc_building.YearBuilt = Year built
pc_building.BuildingImprovements = Improvements for building
pc_building.BuildingSides = Sides for building

pc_buildingimpr = Building improvements by type (e.g. electrical, plumbing, etc.) and year of improvement.

pc_buildingimpr.ID = Internally managed primary key
pc_buildingimpr.BranchValue = Link to root of effdated tree
pc_buildingimpr.Building = 
pc_buildingimpr.BuildingImprType = Type of building improvement
pc_buildingimpr.ChangeType = Type of change made to this row
pc_buildingimpr.CreateTime = Timestamp when the object was created
pc_buildingimpr.CreateUser = User who created the object
pc_buildingimpr.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_buildingimpr.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_buildingimpr.Notes = Notes
pc_buildingimpr.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_buildingimpr.UpdateTime = Timestamp when the object was last updated
pc_buildingimpr.UpdateUser = User who last updated the object
pc_buildingimpr.YearAdded = Year added

pc_buildingside = A hazardous adjacent exposure to an insured property - a proximate cause of loss (e.g. next door lumberyard, solvent mfg.,etc.)

pc_buildingside.ID = Internally managed primary key
pc_buildingside.BranchValue = Link to root of effdated tree
pc_buildingside.Building = 
pc_buildingside.BuildingSideType = Side of building
pc_buildingside.ChangeType = Type of change made to this row
pc_buildingside.CreateTime = Timestamp when the object was created
pc_buildingside.CreateUser = User who created the object
pc_buildingside.Description = Description
pc_buildingside.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_buildingside.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_buildingside.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_buildingside.UpdateTime = Timestamp when the object was last updated
pc_buildingside.UpdateUser = User who last updated the object

pc_balinecond = A line-level condition for Commercial Auto

pc_balinecond.ID = Internally managed primary key
pc_balinecond.BALine = 
pc_balinecond.BranchValue = Link to root of effdated tree
pc_balinecond.ChangeType = Type of change made to this row
pc_balinecond.CreateTime = Timestamp when the object was created
pc_balinecond.CreateUser = User who created the object
pc_balinecond.Currency = Currency associated with the policy condition
pc_balinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_balinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_balinecond.PatternCode = The pattern defining what kind of Condition this is
pc_balinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_balinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_balinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_balinecond.UpdateTime = Timestamp when the object was last updated
pc_balinecond.UpdateUser = User who last updated the object

pc_businessautocov = A line-level coverage for Commercial Auto

pc_businessautocov.ID = Internally managed primary key
pc_businessautocov.BALine = 
pc_businessautocov.BranchValue = Link to root of effdated tree
pc_businessautocov.ChangeType = Type of change made to this row
pc_businessautocov.CreateTime = Timestamp when the object was created
pc_businessautocov.CreateUser = User who created the object
pc_businessautocov.Currency = Currency associated with the coverage
pc_businessautocov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_businessautocov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_businessautocov.PatternCode = The pattern defining what kind of Coverage this is
pc_businessautocov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessautocov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_businessautocov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_businessautocov.UpdateTime = Timestamp when the object was last updated
pc_businessautocov.UpdateUser = User who last updated the object
pc_businessautocov.Costs = Costs for Commercial Auto Line coverages

pc_balineexcl = A line-level exclusion for Commercial Auto

pc_balineexcl.ID = Internally managed primary key
pc_balineexcl.BALine = 
pc_balineexcl.BranchValue = Link to root of effdated tree
pc_balineexcl.ChangeType = Type of change made to this row
pc_balineexcl.CreateTime = Timestamp when the object was created
pc_balineexcl.CreateUser = User who created the object
pc_balineexcl.Currency = Currency associated with the Exclusion
pc_balineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_balineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_balineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_balineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_balineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_balineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_balineexcl.UpdateTime = Timestamp when the object was last updated
pc_balineexcl.UpdateUser = User who last updated the object

pc_boplinecond = A line-level condition for Business Owners

pc_boplinecond.ID = Internally managed primary key
pc_boplinecond.BOPLine = 
pc_boplinecond.BranchValue = Link to root of effdated tree
pc_boplinecond.ChangeType = Type of change made to this row
pc_boplinecond.CreateTime = Timestamp when the object was created
pc_boplinecond.CreateUser = User who created the object
pc_boplinecond.Currency = Currency associated with the policy condition
pc_boplinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boplinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boplinecond.PatternCode = The pattern defining what kind of Condition this is
pc_boplinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boplinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_boplinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_boplinecond.UpdateTime = Timestamp when the object was last updated
pc_boplinecond.UpdateUser = User who last updated the object

pc_businessownerscov = A line-level coverage for Business Owners

pc_businessownerscov.ID = Internally managed primary key
pc_businessownerscov.BOPLine = 
pc_businessownerscov.BranchValue = Link to root of effdated tree
pc_businessownerscov.ChangeType = Type of change made to this row
pc_businessownerscov.CreateTime = Timestamp when the object was created
pc_businessownerscov.CreateUser = User who created the object
pc_businessownerscov.Currency = Currency associated with the coverage
pc_businessownerscov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_businessownerscov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_businessownerscov.PatternCode = The pattern defining what kind of Coverage this is
pc_businessownerscov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessownerscov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_businessownerscov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_businessownerscov.UpdateTime = Timestamp when the object was last updated
pc_businessownerscov.UpdateUser = User who last updated the object
pc_businessownerscov.Costs = 

pc_boplineexcl = A line-level exclusion for Business Owners

pc_boplineexcl.ID = Internally managed primary key
pc_boplineexcl.BOPLine = 
pc_boplineexcl.BranchValue = Link to root of effdated tree
pc_boplineexcl.ChangeType = Type of change made to this row
pc_boplineexcl.CreateTime = Timestamp when the object was created
pc_boplineexcl.CreateUser = User who created the object
pc_boplineexcl.Currency = Currency associated with the Exclusion
pc_boplineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_boplineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_boplineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_boplineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_boplineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_boplineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_boplineexcl.UpdateTime = Timestamp when the object was last updated
pc_boplineexcl.UpdateUser = User who last updated the object

pc_businessvehicle = Business Vehicle

pc_businessvehicle.ID = Internally managed primary key
pc_businessvehicle.AntiLockBrakes = Deprecated in PC 7.0 - Use vehicle modifier instead. Whether or not the car has anti-lock brakes
pc_businessvehicle.AntiTheft = Deprecated in PC 7.0 - Use vehicle modifier instead. Whether or not the car is equipped with an anti-theft device
pc_businessvehicle.BALine = 
pc_businessvehicle.BodyType = Body type of the vehicle.
pc_businessvehicle.BranchValue = Link to root of effdated tree
pc_businessvehicle.ChangeType = Type of change made to this row
pc_businessvehicle.Color = Color of the vehicle.
pc_businessvehicle.CostNew_amt = 
pc_businessvehicle.CostNew_cur = 
pc_businessvehicle.CreateTime = Timestamp when the object was created
pc_businessvehicle.CreateUser = User who created the object
pc_businessvehicle.DestinationZone = Destination zone of vehicle
pc_businessvehicle.DoesUMUIMApply = Deprecated in PC 7.0 - Use vehicle modifier instead. Whether or not UM and UIM coverage applies to this vehicle
pc_businessvehicle.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_businessvehicle.Experience = Experience of the possible drivers of this vehicle
pc_businessvehicle.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_businessvehicle.Industry = The industry the vehicle is in
pc_businessvehicle.IndustryUse = Vehicle industry use
pc_businessvehicle.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_businessvehicle.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_businessvehicle.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_businessvehicle.IntraInterStateUsage = Deprecated in PC 7.0 - Use vehicle modifier instead. IntraInterStateUsage applicable only to MI
pc_businessvehicle.LeaseOrRent = If this vehicle is leased or rented.
pc_businessvehicle.LengthOfLease = The lease period of a leased or a rented vehicle.
pc_businessvehicle.LicensePlate = License plate of the vehicle.
pc_businessvehicle.LicenseState = State in which the vehicle is licensed.
pc_businessvehicle.Location = Location of the vehicle.
pc_businessvehicle.Make = Make of the vehicle.
pc_businessvehicle.Model = Model of the vehicle.
pc_businessvehicle.OriginationZone = Origination zone of vehicle
pc_businessvehicle.OwnedByPoliticalSub = Deprecated in PC 7.0 - Use vehicle modifier instead. Owned by political subdivision
pc_businessvehicle.PipCovered = Deprecated in PC 7.0 - Use vehicle modifier instead. Indicate how PIP should be rated
pc_businessvehicle.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_businessvehicle.PrimaryUse = Primary use of the vehicle.
pc_businessvehicle.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessvehicle.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_businessvehicle.SafeDrivingCert = Deprecated in PC 7.0 - Use vehicle modifier instead. Whether or not the primary driver of the vehicle has a safe driving certificate
pc_businessvehicle.StatedValue_amt = 
pc_businessvehicle.StatedValue_cur = 
pc_businessvehicle.UpdateTime = Timestamp when the object was last updated
pc_businessvehicle.UpdateUser = User who last updated the object
pc_businessvehicle.VehicleClassCode = Vehicle classification code
pc_businessvehicle.VehicleCondition = true if vehicle is new, false if vehicle is used
pc_businessvehicle.VehicleNumber = Vehicle number
pc_businessvehicle.VehicleRadius = Normal radius of operations from principle garage.
pc_businessvehicle.VehicleSizeClass = Weight or size class of the vehicle.
pc_businessvehicle.VehicleType = Type of the vehicle.
pc_businessvehicle.Vin = VIN (vehicle identification number) of the vehicle.
pc_businessvehicle.Year = Vehicle model year
pc_businessvehicle.YearPurchased = year the vehicle is purchased
pc_businessvehicle.AdditionalInterests = Additional interests on this vehicle
pc_businessvehicle.BusinessVehicleModifiers = Rating info for the line.
pc_businessvehicle.Costs = 
pc_businessvehicle.Coverages = All coverages that apply directly to this vehicle.
pc_businessvehicle.LineCosts = Costs for Commercial Auto Line coverages

pc_businessvehiclecov = A vehicle-level coverage for Commercial Auto

pc_businessvehiclecov.ID = Internally managed primary key
pc_businessvehiclecov.BranchValue = Link to root of effdated tree
pc_businessvehiclecov.ChangeType = Type of change made to this row
pc_businessvehiclecov.CreateTime = Timestamp when the object was created
pc_businessvehiclecov.CreateUser = User who created the object
pc_businessvehiclecov.Currency = Currency associated with the coverage
pc_businessvehiclecov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_businessvehiclecov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_businessvehiclecov.PatternCode = The pattern defining what kind of Coverage this is
pc_businessvehiclecov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessvehiclecov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_businessvehiclecov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_businessvehiclecov.UpdateTime = Timestamp when the object was last updated
pc_businessvehiclecov.UpdateUser = User who last updated the object
pc_businessvehiclecov.Vehicle = 
pc_businessvehiclecov.Costs = 
pc_businessvehiclecov.SpecifiedCauseOfLoss = Cause of loss

pc_bavehiclemodifier = A modifier for Business Vehicles

pc_bavehiclemodifier.ID = Internally managed primary key
pc_bavehiclemodifier.BooleanModifier = Boolean modifier
pc_bavehiclemodifier.BranchValue = Link to root of effdated tree
pc_bavehiclemodifier.ChangeType = Type of change made to this row
pc_bavehiclemodifier.CreateTime = Timestamp when the object was created
pc_bavehiclemodifier.CreateUser = User who created the object
pc_bavehiclemodifier.DateModifier = Date modifier
pc_bavehiclemodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_bavehiclemodifier.Eligible = Whether this modifier is eligible or not
pc_bavehiclemodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_bavehiclemodifier.Justification = Additional comment to justify the value of this modifier
pc_bavehiclemodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_bavehiclemodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bavehiclemodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_bavehiclemodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_bavehiclemodifier.State = The state to attach rating information to.
pc_bavehiclemodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_bavehiclemodifier.TypeKeyModifier = Typekey modifier
pc_bavehiclemodifier.UpdateTime = Timestamp when the object was last updated
pc_bavehiclemodifier.UpdateUser = User who last updated the object
pc_bavehiclemodifier.ValueFinal = Whether this modifier's value is final or not
pc_bavehiclemodifier.Vehicle = The Business Vehicle for which this modifier applies

pc_businessweek = List of businessweeks.

pc_businessweek.ID = Internally managed primary key
pc_businessweek.AppliesToAllZones = True if this businessweek applies to all zones (in which case BusinessWeekZones should be empty). If false and BusinessWeekZones has elements, this businessweek applies to those zones.  If false and BusinessWeekZones is empty, this businessweek doesn't apply anywhere.
pc_businessweek.BusinessDayDemarcation = Demarcation of the business day
pc_businessweek.BusinessWeekEnd = What day the business week ends.
pc_businessweek.FridayBusinessDay = Is Friday a business day.
pc_businessweek.FridayBusinessEnd = End of business day on Friday.
pc_businessweek.FridayBusinessStart = Start of business day on Friday.
pc_businessweek.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_businessweek.MondayBusinessDay = Is Monday a business day.
pc_businessweek.MondayBusinessEnd = End of business day on Monday.
pc_businessweek.MondayBusinessStart = Start of business day on Monday.
pc_businessweek.Name = The name of a businessweek in the business calendar.
pc_businessweek.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessweek.SaturdayBusinessDay = Is Saturday a business day.
pc_businessweek.SaturdayBusinessEnd = End of business day on Saturday.
pc_businessweek.SaturdayBusinessStart = Start of business day on Saturday.
pc_businessweek.SundayBusinessDay = Is Sunday a business day.
pc_businessweek.SundayBusinessEnd = End of business day on Sunday.
pc_businessweek.SundayBusinessStart = Start of business day on Sunday.
pc_businessweek.ThursdayBusinessDay = Is Thursday a business day.
pc_businessweek.ThursdayBusinessEnd = End of business day on Thursday.
pc_businessweek.ThursdayBusinessStart = Start of business day on Thursday.
pc_businessweek.TuesdayBusinessDay = Is Tuesday a business day.
pc_businessweek.TuesdayBusinessEnd = End of business day on Tuesday.
pc_businessweek.TuesdayBusinessStart = Start of business day on Tuesday.
pc_businessweek.WednesdayBusinessDay = Is Wednesday a business day.
pc_businessweek.WednesdayBusinessEnd = End of business day on Wednesday.
pc_businessweek.WednesdayBusinessStart = Start of business day on Wednesday.
pc_businessweek.BusinessWeekZones = The zones that observe this businessweek.

pc_businessweek_zone = A zone that observes a certain businessweek.

pc_businessweek_zone.ID = Internally managed primary key
pc_businessweek_zone.BusinessWeek = The businessweek.
pc_businessweek_zone.Code = The code for this zone, this is the value that should be used for zone lookups.
pc_businessweek_zone.Country = Country of this zone.
pc_businessweek_zone.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_businessweek_zone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_businessweek_zone.ZoneType = Type of this zone.

pc_bizweek_nam_l10n = null

pc_bizweek_nam_l10n.ID = Internally managed primary key
pc_bizweek_nam_l10n.Language = 
pc_bizweek_nam_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_bizweek_nam_l10n.Owner = 
pc_bizweek_nam_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_bizweek_nam_l10n.Value = 

pc_cpblanket = Commercial Property Blanket for combining CP coverages into a blanket

pc_cpblanket.ID = Internally managed primary key
pc_cpblanket.BlanketGroupType = For Direct Loss or Time Element.
pc_cpblanket.BlanketType = Identifies the combinations used in the blanket
pc_cpblanket.BranchValue = Link to root of effdated tree
pc_cpblanket.ChangeType = Type of change made to this row
pc_cpblanket.CPBlanketDescription = Description of the blanket
pc_cpblanket.CPBlanketNum = The blanket number
pc_cpblanket.CPBuildingCovName = Name of the Building Coverage Pattern when BlanketType is single coverage
pc_cpblanket.CPLine = 
pc_cpblanket.CPLocation = 
pc_cpblanket.CreateTime = Timestamp when the object was created
pc_cpblanket.CreateUser = User who created the object
pc_cpblanket.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpblanket.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpblanket.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_cpblanket.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_cpblanket.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_cpblanket.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_cpblanket.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpblanket.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_cpblanket.UpdateTime = Timestamp when the object was last updated
pc_cpblanket.UpdateUser = User who last updated the object
pc_cpblanket.BuildingCoverages = Building coverages that apply directly to this blanket.
pc_cpblanket.Coverages = Blanket coverages that apply directly to this blanket.

pc_cpblanketcov = Blanket Coverage

pc_cpblanketcov.ID = Internally managed primary key
pc_cpblanketcov.BranchValue = Link to root of effdated tree
pc_cpblanketcov.ChangeType = Type of change made to this row
pc_cpblanketcov.CPBlanket = 
pc_cpblanketcov.CreateTime = Timestamp when the object was created
pc_cpblanketcov.CreateUser = User who created the object
pc_cpblanketcov.Currency = Currency associated with the coverage
pc_cpblanketcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpblanketcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpblanketcov.PatternCode = The pattern defining what kind of Coverage this is
pc_cpblanketcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpblanketcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cpblanketcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cpblanketcov.UpdateTime = Timestamp when the object was last updated
pc_cpblanketcov.UpdateUser = User who last updated the object

pc_cpbuilding = CP Building

pc_cpbuilding.ID = Internally managed primary key
pc_cpbuilding.BranchValue = Link to root of effdated tree
pc_cpbuilding.Building = 
pc_cpbuilding.ChangeType = Type of change made to this row
pc_cpbuilding.ClassCode = Class code of building.
pc_cpbuilding.CoverageForm = Defines the set of coverages that are available; also known as coverage parts.
pc_cpbuilding.CPLocation = 
pc_cpbuilding.CreateTime = Timestamp when the object was created
pc_cpbuilding.CreateUser = User who created the object
pc_cpbuilding.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpbuilding.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpbuilding.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_cpbuilding.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_cpbuilding.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_cpbuilding.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_cpbuilding.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpbuilding.RateType = Rate using a table or specific value.
pc_cpbuilding.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_cpbuilding.UpdateTime = Timestamp when the object was last updated
pc_cpbuilding.UpdateUser = User who last updated the object
pc_cpbuilding.AdditionalInterests = Additional interests on this building
pc_cpbuilding.Coverages = All coverages that apply directly to this building.

pc_cpbuildingcov = A building-level coverage for Commercial Property

pc_cpbuildingcov.ID = Internally managed primary key
pc_cpbuildingcov.BranchValue = Link to root of effdated tree
pc_cpbuildingcov.ChangeType = Type of change made to this row
pc_cpbuildingcov.CPBlanket = 
pc_cpbuildingcov.CPBuilding = 
pc_cpbuildingcov.CreateTime = Timestamp when the object was created
pc_cpbuildingcov.CreateUser = User who created the object
pc_cpbuildingcov.Currency = Currency associated with the coverage
pc_cpbuildingcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpbuildingcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpbuildingcov.PatternCode = The pattern defining what kind of Coverage this is
pc_cpbuildingcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpbuildingcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cpbuildingcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cpbuildingcov.UpdateTime = Timestamp when the object was last updated
pc_cpbuildingcov.UpdateUser = User who last updated the object
pc_cpbuildingcov.Costs = 

pc_cpcededpremium = A CommercialProperty implementation of the RICededPremium delegate

pc_cpcededpremium.ID = Internally managed primary key
pc_cpcededpremium.CPCost = 
pc_cpcededpremium.CreateTime = Timestamp when the object was created
pc_cpcededpremium.CreateUser = User who created the object
pc_cpcededpremium.EffectiveDate = Effective date of this row.
pc_cpcededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_cpcededpremium.PolicyTerm = The policy term to which this ceding applies
pc_cpcededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpcededpremium.RiskDate = Effective date of the associated risk
pc_cpcededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_cpcededpremium.UpdateTime = Timestamp when the object was last updated
pc_cpcededpremium.UpdateUser = User who last updated the object
pc_cpcededpremium.CedingHistory = 
pc_cpcededpremium.CedingTransactions = 

pc_cpcededpremiumhistory = A CommercialProperty implementation of the RICededPremiumHistory delegate

pc_cpcededpremiumhistory.ID = Internally managed primary key
pc_cpcededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_cpcededpremiumhistory.CPCededPremium = 
pc_cpcededpremiumhistory.CreateTime = Timestamp when the object was created
pc_cpcededpremiumhistory.CreateUser = User who created the object
pc_cpcededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_cpcededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpcededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_cpcededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_cpcededpremiumhistory.UpdateUser = User who last updated the object

pc_cpcededpremiumtransaction = A CommercialProperty implementation of the RICededPremiumTransaction delegate

pc_cpcededpremiumtransaction.ID = Internally managed primary key
pc_cpcededpremiumtransaction.Agreement = The agreement being ceded to
pc_cpcededpremiumtransaction.BasisGNP_amt = 
pc_cpcededpremiumtransaction.BasisGNP_cur = 
pc_cpcededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_cpcededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_cpcededpremiumtransaction.CededPremium_amt = 
pc_cpcededpremiumtransaction.CededPremium_cur = 
pc_cpcededpremiumtransaction.CededPremiumMarkup_amt = 
pc_cpcededpremiumtransaction.CededPremiumMarkup_cur = 
pc_cpcededpremiumtransaction.CededRiskAmount_amt = 
pc_cpcededpremiumtransaction.CededRiskAmount_cur = 
pc_cpcededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_cpcededpremiumtransaction.Commission_amt = 
pc_cpcededpremiumtransaction.Commission_cur = 
pc_cpcededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_cpcededpremiumtransaction.CPCededPremium = 
pc_cpcededpremiumtransaction.CPCededPremiumHistory = 
pc_cpcededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_cpcededpremiumtransaction.CreateUser = User who created the object
pc_cpcededpremiumtransaction.DatePosted = The date the transaction was created
pc_cpcededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_cpcededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_cpcededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_cpcededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_cpcededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_cpcededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_cpcededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpcededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_cpcededpremiumtransaction.UpdateUser = User who last updated the object

pc_cpclasscode = Commercial property building class codes.  Premium calculations are driven by class codes and both premium and losses are reported by class codes to rating bureaus.

pc_cpclasscode.ID = Internally managed primary key
pc_cpclasscode.Classification = The Classification of the code (essentially a short description)
pc_cpclasscode.ClassIndicator = The Class Indicator for the class code
pc_cpclasscode.Code = The Class Code for a building in a line of insurance
pc_cpclasscode.CreateTime = Timestamp when the object was created
pc_cpclasscode.CreateUser = User who created the object
pc_cpclasscode.EffectiveDate = Effective date of this row.
pc_cpclasscode.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_cpclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpclasscode.UpdateTime = Timestamp when the object was last updated
pc_cpclasscode.UpdateUser = User who last updated the object

pc_cpclcode_class = null

pc_cpclcode_class.ID = Internally managed primary key
pc_cpclcode_class.Language = 
pc_cpclcode_class.Owner = 
pc_cpclcode_class.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpclcode_class.Value = 

pc_cpcost = A CommercialProperty unit of price for a period of time, not to be broken up any further

pc_cpcost.ID = Internally managed primary key
pc_cpcost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_cpcost.ActualAmount_amt = 
pc_cpcost.ActualAmount_cur = 
pc_cpcost.ActualAmountBilling_amt = 
pc_cpcost.ActualAmountBilling_cur = 
pc_cpcost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_cpcost.ActualTermAmount_amt = 
pc_cpcost.ActualTermAmount_cur = 
pc_cpcost.ActualTermAmountBilling_amt = 
pc_cpcost.ActualTermAmountBilling_cur = 
pc_cpcost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_cpcost.BranchValue = Link to root of effdated tree
pc_cpcost.ChangeType = Type of change made to this row
pc_cpcost.ChargeGroup = Custom group name to group charges together
pc_cpcost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_cpcost.CommercialPropertyLine = 
pc_cpcost.CreateTime = Timestamp when the object was created
pc_cpcost.CreateUser = User who created the object
pc_cpcost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpcost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpcost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_cpcost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_cpcost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_cpcost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_cpcost.OverrideAmount_amt = 
pc_cpcost.OverrideAmount_cur = 
pc_cpcost.OverrideAmountBilling_amt = 
pc_cpcost.OverrideAmountBilling_cur = 
pc_cpcost.OverrideBaseRate = The user-specified override for the base rate.
pc_cpcost.OverrideReason = Why the override is being applied.
pc_cpcost.OverrideSource = Source of override, or null if none
pc_cpcost.OverrideTermAmount_amt = 
pc_cpcost.OverrideTermAmount_cur = 
pc_cpcost.OverrideTermAmountBilling_amt = 
pc_cpcost.OverrideTermAmountBilling_cur = 
pc_cpcost.PolicyFXRate = 
pc_cpcost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_cpcost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpcost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_cpcost.RateBook = 
pc_cpcost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_cpcost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_cpcost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_cpcost.StandardAmount_amt = 
pc_cpcost.StandardAmount_cur = 
pc_cpcost.StandardAmountBilling_amt = 
pc_cpcost.StandardAmountBilling_cur = 
pc_cpcost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_cpcost.StandardTermAmount_amt = 
pc_cpcost.StandardTermAmount_cur = 
pc_cpcost.StandardTermAmountBilling_amt = 
pc_cpcost.StandardTermAmountBilling_cur = 
pc_cpcost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_cpcost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cpcost.UpdateTime = Timestamp when the object was last updated
pc_cpcost.UpdateUser = User who last updated the object
pc_cpcost.CPBuildingCov = 
pc_cpcost.TaxState = Jurisdiction tax that applies

pc_cplocation = CP Location

pc_cplocation.ID = Internally managed primary key
pc_cplocation.BranchValue = Link to root of effdated tree
pc_cplocation.ChangeType = Type of change made to this row
pc_cplocation.CPLine = 
pc_cplocation.CreateTime = Timestamp when the object was created
pc_cplocation.CreateUser = User who created the object
pc_cplocation.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cplocation.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cplocation.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_cplocation.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_cplocation.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_cplocation.Location = Location of business exposure, e.g., one or more buildings.
pc_cplocation.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_cplocation.PrincipalOpsDesc = Principle operations and occupancy.
pc_cplocation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cplocation.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_cplocation.UpdateTime = Timestamp when the object was last updated
pc_cplocation.UpdateUser = User who last updated the object
pc_cplocation.Buildings = Buildings on this location
pc_cplocation.Coverages = All coverages that apply directly to this location.

pc_cplocationcov = A location-level coverage for Commercial Property

pc_cplocationcov.ID = Internally managed primary key
pc_cplocationcov.BranchValue = Link to root of effdated tree
pc_cplocationcov.ChangeType = Type of change made to this row
pc_cplocationcov.CPLocation = 
pc_cplocationcov.CreateTime = Timestamp when the object was created
pc_cplocationcov.CreateUser = User who created the object
pc_cplocationcov.Currency = Currency associated with the coverage
pc_cplocationcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cplocationcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cplocationcov.PatternCode = The pattern defining what kind of Coverage this is
pc_cplocationcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cplocationcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cplocationcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cplocationcov.UpdateTime = Timestamp when the object was last updated
pc_cplocationcov.UpdateUser = User who last updated the object

pc_cpmodifier = A line-level modifier for Commercial Property

pc_cpmodifier.ID = Internally managed primary key
pc_cpmodifier.BooleanModifier = Boolean modifier
pc_cpmodifier.BranchValue = Link to root of effdated tree
pc_cpmodifier.ChangeType = Type of change made to this row
pc_cpmodifier.CPLine = 
pc_cpmodifier.CreateTime = Timestamp when the object was created
pc_cpmodifier.CreateUser = User who created the object
pc_cpmodifier.DateModifier = Date modifier
pc_cpmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpmodifier.Eligible = Whether this modifier is eligible or not
pc_cpmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpmodifier.Justification = Additional comment to justify the value of this modifier
pc_cpmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_cpmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_cpmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cpmodifier.State = The state to attach rating information to.
pc_cpmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cpmodifier.TypeKeyModifier = Typekey modifier
pc_cpmodifier.UpdateTime = Timestamp when the object was last updated
pc_cpmodifier.UpdateUser = User who last updated the object
pc_cpmodifier.ValueFinal = Whether this modifier's value is final or not
pc_cpmodifier.CPRateFactors = Individual components of the rating factor

pc_cpratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_cpratefactor.ID = Internally managed primary key
pc_cpratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_cpratefactor.BranchValue = Link to root of effdated tree
pc_cpratefactor.ChangeType = Type of change made to this row
pc_cpratefactor.CPModifier = 
pc_cpratefactor.CreateTime = Timestamp when the object was created
pc_cpratefactor.CreateUser = User who created the object
pc_cpratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cpratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cpratefactor.Justification = Additional comment to justify this rate factor
pc_cpratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_cpratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cpratefactor.UpdateTime = Timestamp when the object was last updated
pc_cpratefactor.UpdateUser = User who last updated the object

pc_cptransaction = A transaction for the Commercial Property line

pc_cptransaction.ID = Internally managed primary key
pc_cptransaction.Amount_amt = 
pc_cptransaction.Amount_cur = 
pc_cptransaction.AmountBilling_amt = 
pc_cptransaction.AmountBilling_cur = 
pc_cptransaction.BranchValue = Link to root of effdated tree
pc_cptransaction.ChangeType = Type of change made to this row
pc_cptransaction.Charged = Whether or not this transaction amount should be charged.
pc_cptransaction.CPCost = The cost this transaction modifies.
pc_cptransaction.CreateTime = Timestamp when the object was created
pc_cptransaction.CreateUser = User who created the object
pc_cptransaction.EffDate = The date on which the transaction becomes effective.
pc_cptransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cptransaction.ExpDate = The date on which the transaction expires.
pc_cptransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cptransaction.PolicyFXRate = 
pc_cptransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_cptransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cptransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_cptransaction.UpdateTime = Timestamp when the object was last updated
pc_cptransaction.UpdateUser = User who last updated the object
pc_cptransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_cptransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_cachestatsrollupsnap = Rollup snapshot for the global cache for a particular time slice

pc_cachestatsrollupsnap.ID = Internally managed primary key
pc_cachestatsrollupsnap.AverageNumHits = Average number of hits for this time slice
pc_cachestatsrollupsnap.AverageNumMisses = Average number of misses for this time slice
pc_cachestatsrollupsnap.AverageNumMissesWhenCacheFull = Average number of misses because the item was evicted when the cache was full for this time slice
pc_cachestatsrollupsnap.AverageSpaceRetained = Average space retained in bytes for this time slice
pc_cachestatsrollupsnap.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cachestatsrollupsnap.ServerId = ServerId of the host that generated the statistics
pc_cachestatsrollupsnap.SliceTimestamp = Lower end of this time slice, i.e 00:00:00,000 for the range 00:00:00,000 to 00:29:59,999

pc_calcroutinedefinition = Define the rating calculation of a coverable

pc_calcroutinedefinition.ID = Internally managed primary key
pc_calcroutinedefinition.Code = The unique code for this calculation routine
pc_calcroutinedefinition.CreateTime = Timestamp when the object was created
pc_calcroutinedefinition.CreateUser = User who created the object
pc_calcroutinedefinition.Description = Describes the purpose and usage of this calculation routine
pc_calcroutinedefinition.Jurisdiction = The Jurisdiction, if any, of this CalcRoutineDefinition.
pc_calcroutinedefinition.Name = A short descriptive name of this calculation routine
pc_calcroutinedefinition.ParameterSet = 
pc_calcroutinedefinition.PolicyLinePatternCode = The pattern defining what kind of PolicyLine this CalcRoutine was written for
pc_calcroutinedefinition.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcroutinedefinition.UpdateTime = Timestamp when the object was last updated
pc_calcroutinedefinition.UpdateUser = User who last updated the object
pc_calcroutinedefinition.Version = Version Number of this calculation routine
pc_calcroutinedefinition.RateBookCalcRoutines = Which rate books reference this routine
pc_calcroutinedefinition.Steps = List of calculation steps

pc_fcr_desc_l10n = null

pc_fcr_desc_l10n.ID = Internally managed primary key
pc_fcr_desc_l10n.Language = 
pc_fcr_desc_l10n.Owner = 
pc_fcr_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_fcr_desc_l10n.Value = 

pc_fcr_name_l10n = null

pc_fcr_name_l10n.ID = Internally managed primary key
pc_fcr_name_l10n.Language = 
pc_fcr_name_l10n.Owner = 
pc_fcr_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_fcr_name_l10n.Value = 

pc_calcroutineparam = Calculation routine parameter

pc_calcroutineparam.ID = Internally managed primary key
pc_calcroutineparam.CalcRoutineParameterSet = The calculation routine parameter set
pc_calcroutineparam.Code = The code associated with the parameter
pc_calcroutineparam.CoveragePattern = If param is a coverage, this is the Pattern code otherwise it should be null
pc_calcroutineparam.CreateTime = Timestamp when the object was created
pc_calcroutineparam.CreateUser = User who created the object
pc_calcroutineparam.ParamType = Type of this parameter
pc_calcroutineparam.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcroutineparam.UpdateTime = Timestamp when the object was last updated
pc_calcroutineparam.UpdateUser = User who last updated the object
pc_calcroutineparam.Writable = True if this parameter should be exposed as writable in rate routines

pc_calcroutineparamset = Calculation routine parameter set

pc_calcroutineparamset.ID = Internally managed primary key
pc_calcroutineparamset.Code = The unique code for this calculation routine parameter set
pc_calcroutineparamset.CreateTime = Timestamp when the object was created
pc_calcroutineparamset.CreateUser = User who created the object
pc_calcroutineparamset.Name = The name for this calculation routine parameter set
pc_calcroutineparamset.PolicyLinePatternCode = The pattern defining what kind of PolicyLine this CalcRoutine was written for
pc_calcroutineparamset.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcroutineparamset.UpdateTime = Timestamp when the object was last updated
pc_calcroutineparamset.UpdateUser = User who last updated the object
pc_calcroutineparamset.Parameters = List of calculation routine parameters

pc_pscol_label_l10n = null

pc_pscol_label_l10n.ID = Internally managed primary key
pc_pscol_label_l10n.Language = 
pc_pscol_label_l10n.Owner = 
pc_pscol_label_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pscol_label_l10n.Value = 

pc_calcstepdef = Definition for calculation step

pc_calcstepdef.ID = Internally managed primary key
pc_calcstepdef.CalcRoutineDefinition = The calculation routine definition
pc_calcstepdef.CreateTime = Timestamp when the object was created
pc_calcstepdef.CreateUser = User who created the object
pc_calcstepdef.InScopeParam = The rate routine param that forms the first part of the in scope value
pc_calcstepdef.InScopeValue = A gosu expression ('dot path') that describes how to access the desired value when the assignment is to an in-scope object (InScopeParam != null)
pc_calcstepdef.Notes = Line comment for the step
pc_calcstepdef.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcstepdef.SectionComment = Section comment for the step
pc_calcstepdef.SortOrder = Sort order of the Calculation Step
pc_calcstepdef.StepType = The step type for this step.
pc_calcstepdef.StoreLocation = If this does a store, the destination of the variable
pc_calcstepdef.StoreType = For assignment steps, this holds the inscope/store target's type
pc_calcstepdef.UpdateTime = Timestamp when the object was last updated
pc_calcstepdef.UpdateUser = User who last updated the object
pc_calcstepdef.Operands = The operands that are being calculated by the step

pc_calcstepdefarg = holds argument value

pc_calcstepdefarg.ID = Internally managed primary key
pc_calcstepdefarg.ConstantValue = Represents constant value 
pc_calcstepdefarg.CovTermCode = Cov term pattern code if value represents a cov term.
pc_calcstepdefarg.CreateTime = Timestamp when the object was created
pc_calcstepdefarg.CreateUser = User who created the object
pc_calcstepdefarg.InScopeParam = The rate routine param that forms the first part of the in scope value
pc_calcstepdefarg.InScopeValue = A gosu expression ('dot path') that describes how to access the desired value
pc_calcstepdefarg.InScopeValueIsModifier = A flag to indicate if the in scope value is a modifier
pc_calcstepdefarg.InScopeValueType = The desired data type for an in-scope value
pc_calcstepdefarg.Operand = 
pc_calcstepdefarg.OperandType = Type of operand
pc_calcstepdefarg.OverrideSource = If true, take argument source from here instead of rate table definition.
pc_calcstepdefarg.Parameter = The value of this argument
pc_calcstepdefarg.ParameterType = The type of this argument
pc_calcstepdefarg.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcstepdefarg.UpdateTime = Timestamp when the object was last updated
pc_calcstepdefarg.UpdateUser = User who last updated the object
pc_calcstepdefarg.VariableFieldName = Used to denote field selection for a complex variable
pc_calcstepdefarg.VariableName = Local Variable Name

pc_calcstepdefoperand = Operand for a calculation step

pc_calcstepdefoperand.ID = Internally managed primary key
pc_calcstepdefoperand.ArgumentSourceSetCode = If this does a table lookup, code for the argument source set used
pc_calcstepdefoperand.CalcStep = The calculation step definition
pc_calcstepdefoperand.ConstantValue = Represents constant value 
pc_calcstepdefoperand.CovTermCode = Cov term pattern code if value represents a cov term.
pc_calcstepdefoperand.CreateTime = Timestamp when the object was created
pc_calcstepdefoperand.CreateUser = User who created the object
pc_calcstepdefoperand.FunctionName = If this does a function call, name of the function called
pc_calcstepdefoperand.InScopeParam = The rate routine param that forms the first part of the in scope value
pc_calcstepdefoperand.InScopeValue = A gosu expression ('dot path') that describes how to access the desired value
pc_calcstepdefoperand.InScopeValueIsModifier = A flag to indicate if the in scope value is a modifier
pc_calcstepdefoperand.InScopeValueType = The desired data type for an in-scope value
pc_calcstepdefoperand.LeftParenthesisGroup = Left Parenthesis String Group
pc_calcstepdefoperand.LogicalNot = A flag that indicates logical negation if the operand is boolean
pc_calcstepdefoperand.OperandOrder = The sort order.  Only used for conditionals, because they are the only thing that uses multiple operands
pc_calcstepdefoperand.OperandType = Type of operand
pc_calcstepdefoperand.OperatorType = The operator used during calculation routine.
pc_calcstepdefoperand.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcstepdefoperand.RightParenthesisGroup = Right Parenthesis String Group
pc_calcstepdefoperand.RoundingScaleType = The rounding level of the operand, if any.
pc_calcstepdefoperand.TableCode = If this does a table lookup, code for the table used for the lookup
pc_calcstepdefoperand.UpdateTime = Timestamp when the object was last updated
pc_calcstepdefoperand.UpdateUser = User who last updated the object
pc_calcstepdefoperand.VariableFieldName = Used to denote field selection for a complex variable
pc_calcstepdefoperand.VariableName = Local Variable Name
pc_calcstepdefoperand.ArgumentSources = The Argument Sources being used for this operand
pc_calcstepdefoperand.ReturnFactorColumns = The set of factor column names to return for a rate table operand.  An empty array implies returning the factor with the highest priority

pc_calcstepdefratefac = Rate factor for a calc step definition rate table operand

pc_calcstepdefratefac.ID = Internally managed primary key
pc_calcstepdefratefac.ColumnName = Rate factor column name
pc_calcstepdefratefac.CreateTime = Timestamp when the object was created
pc_calcstepdefratefac.CreateUser = User who created the object
pc_calcstepdefratefac.Operand = 
pc_calcstepdefratefac.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_calcstepdefratefac.UpdateTime = Timestamp when the object was last updated
pc_calcstepdefratefac.UpdateUser = User who last updated the object

pc_cancelrefund = Lookup table for refund calculation for cancellation base on reason supplied by user

pc_cancelrefund.ID = Internally managed primary key
pc_cancelrefund.CalculationMethod = Refund calculation method
pc_cancelrefund.CreateTime = Timestamp when the object was created
pc_cancelrefund.CreateUser = User who created the object
pc_cancelrefund.EffectiveDate = Effective date of this row.
pc_cancelrefund.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_cancelrefund.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cancelrefund.ReasonCode = Reason for cancellation
pc_cancelrefund.UpdateTime = Timestamp when the object was last updated
pc_cancelrefund.UpdateUser = User who last updated the object

pc_classcodebasis = Measurement basis associated with a classcode (e.g. per 100 payroll; 1000 sales; 100 sqft area)

pc_classcodebasis.ID = Internally managed primary key
pc_classcodebasis.Auditable = Defines whether the basis is considered a fixed number (like square feet of office space) or a variable (auditable) value that will only be known after the policy period is completed (like total sales or total payroll). True indicates a variable value. The system will treat variable values differently from fixed values. Most notably, when splitting an exposure in General Liability or Workers Comp, the system will divide variable amounts pro rata between the 2 split pieces (i.e. dividing payroll between the 2 date ranges). For a fixed basis, the system will copy the same basis to both split pieces (i.e. the office space is usually the same size during both date ranges).
pc_classcodebasis.Code = Code number of the Basis Type
pc_classcodebasis.CreateTime = Timestamp when the object was created
pc_classcodebasis.CreateUser = User who created the object
pc_classcodebasis.Description = Description
pc_classcodebasis.Name = Name of the Basis Type
pc_classcodebasis.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_classcodebasis.RateFactor = Rating Factor Multiplier
pc_classcodebasis.UpdateTime = Timestamp when the object was last updated
pc_classcodebasis.UpdateUser = User who last updated the object

pc_classbasis_desc = null

pc_classbasis_desc.ID = Internally managed primary key
pc_classbasis_desc.Language = 
pc_classbasis_desc.Owner = 
pc_classbasis_desc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_classbasis_desc.Value = 

pc_classbasis_name = null

pc_classbasis_name.ID = Internally managed primary key
pc_classbasis_name.Language = 
pc_classbasis_name.Owner = 
pc_classbasis_name.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_classbasis_name.Value = 

pc_clobcoldatadist = Stores bean version data distributions.

pc_clobcoldatadist.ID = Internally managed primary key
pc_clobcoldatadist.AverageLength = Average length of blob values.
pc_clobcoldatadist.ClobColName = Clob column name.
pc_clobcoldatadist.MaximumLength = Maximum length of blob values.
pc_clobcoldatadist.MinimumLength = Minimum length of blob values.
pc_clobcoldatadist.NumNonNull = Count of # of non null values.
pc_clobcoldatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_clobcoldatadist.TableDataDist = TableDataDist for this object.

pc_clustermemberdata = null

pc_clustermemberdata.ID = Internally managed primary key
pc_clustermemberdata.ConnectionStarted = Time connection started
pc_clustermemberdata.ConnectionStopped = Time connection stopped
pc_clustermemberdata.LastUpdate = Last update
pc_clustermemberdata.LogicalName = Node logical name
pc_clustermemberdata.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_clustermemberdata.RunLevel = Run level
pc_clustermemberdata.ServerId = Server ID
pc_clustermemberdata.ServerStarted = Time server started
pc_clustermemberdata.Uuid = UUID

pc_commercialdriver = A driver on a Commercial Auto policy.

pc_commercialdriver.ID = Internally managed primary key
pc_commercialdriver.BranchValue = Link to root of effdated tree
pc_commercialdriver.BusinessAutoLine = 
pc_commercialdriver.ChangeType = Type of change made to this row
pc_commercialdriver.CreateTime = Timestamp when the object was created
pc_commercialdriver.CreateUser = User who created the object
pc_commercialdriver.DateOfBirth = Date of Birth
pc_commercialdriver.DriverTraining = Has this driver completed a driver training class?
pc_commercialdriver.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_commercialdriver.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_commercialdriver.FirstName = First name.
pc_commercialdriver.FirstNameKanji = First name in Kanji
pc_commercialdriver.Gender = Gender.
pc_commercialdriver.GoodDriverDiscount = Indicates whether this driver qualifies for a Good Driver discount
pc_commercialdriver.HireDate = When this contact was hired.
pc_commercialdriver.LastName = Last name.
pc_commercialdriver.LastNameKanji = Last name in Kanji.
pc_commercialdriver.LicenseNumber = Driver's license number.
pc_commercialdriver.LicenseState = Driver's license state.
pc_commercialdriver.MaritalStatus = Marital status.
pc_commercialdriver.MatureDriverTraining = Has the driver completed a mature driver training class?
pc_commercialdriver.NumberofAccidents = Number of Accidents
pc_commercialdriver.NumberofViolations = Number of Violations
pc_commercialdriver.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_commercialdriver.SeqNumber = The driver's sequence number used to order the drivers within a policy.
pc_commercialdriver.Student = Is this driver a student?
pc_commercialdriver.UpdateTime = Timestamp when the object was last updated
pc_commercialdriver.UpdateUser = User who last updated the object
pc_commercialdriver.YearLicensed = The year that this contact first acquired a driver's license.
pc_commercialdriver.YearsExperience = The number of years of driving experience this contact has.

pc_cplinecond = A line-level condition for Commercial Property

pc_cplinecond.ID = Internally managed primary key
pc_cplinecond.BranchValue = Link to root of effdated tree
pc_cplinecond.ChangeType = Type of change made to this row
pc_cplinecond.CPLine = 
pc_cplinecond.CreateTime = Timestamp when the object was created
pc_cplinecond.CreateUser = User who created the object
pc_cplinecond.Currency = Currency associated with the policy condition
pc_cplinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cplinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cplinecond.PatternCode = The pattern defining what kind of Condition this is
pc_cplinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cplinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cplinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cplinecond.UpdateTime = Timestamp when the object was last updated
pc_cplinecond.UpdateUser = User who last updated the object

pc_commercialpropertycov = A line-level coverage for Commercial Property

pc_commercialpropertycov.ID = Internally managed primary key
pc_commercialpropertycov.BranchValue = Link to root of effdated tree
pc_commercialpropertycov.ChangeType = Type of change made to this row
pc_commercialpropertycov.CPLine = 
pc_commercialpropertycov.CreateTime = Timestamp when the object was created
pc_commercialpropertycov.CreateUser = User who created the object
pc_commercialpropertycov.Currency = Currency associated with the coverage
pc_commercialpropertycov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_commercialpropertycov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_commercialpropertycov.PatternCode = The pattern defining what kind of Coverage this is
pc_commercialpropertycov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_commercialpropertycov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_commercialpropertycov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_commercialpropertycov.UpdateTime = Timestamp when the object was last updated
pc_commercialpropertycov.UpdateUser = User who last updated the object

pc_cplineexcl = A line-level exclusion for Commercial Property

pc_cplineexcl.ID = Internally managed primary key
pc_cplineexcl.BranchValue = Link to root of effdated tree
pc_cplineexcl.ChangeType = Type of change made to this row
pc_cplineexcl.CPLine = 
pc_cplineexcl.CreateTime = Timestamp when the object was created
pc_cplineexcl.CreateUser = User who created the object
pc_cplineexcl.Currency = Currency associated with the Exclusion
pc_cplineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_cplineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_cplineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_cplineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_cplineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_cplineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_cplineexcl.UpdateTime = Timestamp when the object was last updated
pc_cplineexcl.UpdateUser = User who last updated the object

pc_producercodecurrency = Commission plans configured for a particular producer code

pc_producercodecurrency.ID = Internally managed primary key
pc_producercodecurrency.CommissionPlanID = Commission Plan Public ID in Billing System
pc_producercodecurrency.Currency = The allowed Currency of this producer code.
pc_producercodecurrency.ProducerCode = The ProducerCode.
pc_producercodecurrency.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_condlookup = An availability lookup for condition patterns.

pc_condlookup.ID = Internally managed primary key
pc_condlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_condlookup.ConditionPatternCode = 
pc_condlookup.CreateTime = Timestamp when the object was created
pc_condlookup.CreateUser = User who created the object
pc_condlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_condlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_condlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_condlookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_condlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_condlookup.SourceFile = The source file in which the entity is defined
pc_condlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_condlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_condlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_condlookup.UpdateTime = Timestamp when the object was last updated
pc_condlookup.UpdateUser = User who last updated the object
pc_condlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company
pc_condlookup.PolicyType = The policy type of this lookup

pc_checkerworkitem = Queue of Consistency Checks to run. This is a system-internal entity.

pc_checkerworkitem.ID = Internally managed primary key
pc_checkerworkitem.Attempts = 
pc_checkerworkitem.CheckedOutBy = 
pc_checkerworkitem.CheckType = 
pc_checkerworkitem.CreationTime = 
pc_checkerworkitem.Exception = Stack trace of the exception
pc_checkerworkitem.Fingerprint = Fingerprint of SQL, if not null
pc_checkerworkitem.LastUpdateTime = 
pc_checkerworkitem.Priority = 
pc_checkerworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_checkerworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_checkerworkitem.Status = Status of this workitem.
pc_checkerworkitem.TableName = The table on which to run consistency checks

pc_contact = 
        Represents a generic contact like a person or a business. The Contact is a primary object in the
        ClaimCenter system that is used in the management of your company's vendors and the
        participants in a Claim. Contact is an abstract supertype with subtypes such as Person, Company, and Place.
        Guidewire provides an initial hierarchy of Contact types that you can extend.
        From a Contact entity you can reach the expected Contact data such as physical address, phone, and fax
        information. (In general, only the Primary Address is used for location-based functionality like
        Assignment and Geocoding/Proximity Search.) Contact and its subtypes can also contain management-related
        information such as social security number, tax ID, organization type , and so forth.
        Within ClaimCenter, users create Contacts that are associated only with a particular Claim. For example,
        an injured party is a typical claim contact. ClaimCenter does not attempt to determine if a contact
        associated with one claim appears elsewhere on another claim. Thus, any claim contact that users create,
        like an auto body shop, can be a duplicate of one or more other claim contacts associated with different
        claims.
        If ClaimCenter is integrated with Guidewire's ContactManager application, your users can create contacts
        and then access them centrally through the linking feature.Your company can have both centrally
        managed contacts, such as a vendor business, and locally managed contacts, such as an injured
        party.
        To support this behavior, ContactManager and ClaimCenter have matching hierarchies of Contact
        entities, which they can keep synchronized. So, for example, an extension made to a ClaimCenter Contact
        entity should also be made to a ContactManager ABContact entity. See the Contact Management Guide
        for more information about the integration between ClaimCenter and ContactManager.
    

pc_contact.ID = Internally managed primary key
pc_contact.AccountHolderCount = Number of Accounts on which this Contact is the AccountHolder.
pc_contact.AddressBookUID = Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.
pc_contact.AutoSync = A status code to indicate whether this entity allows auto-sync or not. Null means disallow.
pc_contact.CityDenorm = Primary Address City, this is searchColumn for City on Address entity
pc_contact.CityKanjiDenorm = Primary Address City Kanji, this is searchColumn for City Kanji on Address entity
pc_contact.Country = Primary Address Country, this is denormalized column for Country on Address entity
pc_contact.CreateTime = Timestamp when the object was created
pc_contact.CreateUser = User who created the object
pc_contact.EmailAddress1 = Primary email address associated with the contact.
pc_contact.EmailAddress2 = Secondary email address associated with the contact.
pc_contact.ExternalID = Application assigned ID used as ABUID when ABUID is null
pc_contact.ExternalVersion = The version number of this contact in external contact system
pc_contact.FaxPhone = Fax number associated with the contact.
pc_contact.FaxPhoneCountry = Fax phone country.
pc_contact.FaxPhoneExtension = Fax phone extension.
pc_contact.HomePhone = Home phone number associated with the contact.
pc_contact.HomePhoneCountry = Home phone country.
pc_contact.HomePhoneExtension = Home phone extension.
pc_contact.LastUpdateTime = Date and time of last update
pc_contact.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contact.LoadRelatedContacts = This field is deprecated. It was formerly used to determine whether related contacts should be loaded from the Address Book.
pc_contact.Name = This contact's name.
pc_contact.NameKanji = This contact's name in kanji (used only for Japanese names and will be null otherwise)
pc_contact.Notes = Notes on this contact.
pc_contact.PostalCodeDenorm = Primary Address Postal code, this is searchColumn for Postal code on Address entity
pc_contact.Preferred = Whether the vendor is a preferred vendor.
pc_contact.PreferredCurrency = The contact's preferred currency.
pc_contact.PreferredSettlementCurrency = Preferred Settlement Currency
pc_contact.PrimaryAddress = Primary address associated with the contact.
pc_contact.PrimaryLanguage = The account's preferred language
pc_contact.PrimaryLocale = The account's preferred locale
pc_contact.PrimaryPhone = Primary phone number type for the contact.
pc_contact.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contact.Score = Overall review Score for this Contact
pc_contact.State = Primary Address State, this is denormalized column for State on Address entity
pc_contact.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_contact.TaxID = Tax ID for the contact (SSN or EIN).
pc_contact.TaxStatus = Status of the contact's tax ID; whether it is known or unknown.
pc_contact.UpdateTime = Timestamp when the object was last updated
pc_contact.UpdateUser = User who last updated the object
pc_contact.ValidationLevel = Validation level that this object passed (if any) before it was stored.
pc_contact.VendorNumber = Vendor number for the contact.
pc_contact.VendorType = The company's vendor type.
pc_contact.WithholdingRate = The contact's backup withholding rate, or null if backup withholding is not required or is not known to be required.
pc_contact.WorkPhone = Business phone number associated with the contact.
pc_contact.WorkPhoneCountry = Work phone country.
pc_contact.WorkPhoneExtension = Business phone extension.
pc_contact.AccountContacts = All the accountcontacts related to this contact.
pc_contact.CategoryScores = List of categories and their average scores, associated with this Contact.
pc_contact.ContactAddresses = Secondary addresses associated with the contact.
pc_contact.OfficialIDs = TaxIDs associated with this contact
pc_contact.SourceRelatedContacts = Contacts that point to this contact.
pc_contact.Tags = List of ContactTags.
pc_contact.TargetRelatedContacts = Contacts that this Contact points to.
pc_contact.AdjudicatorLicense = Adjudicator's business license number.
pc_contact.VenueType = Type of court.
pc_contact.CellPhone = Mobile phone number associated with the contact.
pc_contact.CellPhoneCountry = Mobile phone country.
pc_contact.CellPhoneExtension = Mobile phone extension.
pc_contact.DateOfBirth = Date of birth.
pc_contact.FirstName = First name.
pc_contact.FirstNameKanji = First name in kanji (used only for Japanese names and will be null otherwise)
pc_contact.FormerName = Person's former name, if any.
pc_contact.Gender = Gender.
pc_contact.LastName = Last name.
pc_contact.LastNameKanji = Last name in kanji (used only for Japanese names and will be null otherwise)
pc_contact.LicenseNumber = Driver's license number.
pc_contact.LicenseState = Driver's license jurisdiction.
pc_contact.MaritalStatus = Marital status.
pc_contact.MiddleName = Middle name or initial.
pc_contact.NumDependents = Number of dependents the employee has.
pc_contact.NumDependentsU18 = Number of dependents under 18.
pc_contact.NumDependentsU25 = Number of dependents over 18 and under 25.
pc_contact.Occupation = Occupation.
pc_contact.Particle = Particle, such as 'de', 'von' (used for French names and will be null otherwise)
pc_contact.Prefix = Prefix for the person's name.
pc_contact.Suffix = Suffix for the person's name.
pc_contact.TaxFilingStatus = State-specific field.
pc_contact.EmployeeNumber = Employee ID number. Applies to user contacts.

pc_contactaddress = <p/>
      This is represented as a many-to-many relationship, although addresses created through the UI will always
      belong uniquely to only one contact.
    

pc_contactaddress.ID = Internally managed primary key
pc_contactaddress.Address = Associated address.
pc_contactaddress.AddressBookUID = Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.
pc_contactaddress.Contact = Associated contact.
pc_contactaddress.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contactaddress.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_autosyncworkitem = Queue of Contact AddressBookUID to be auto synced. This is a system-internal entity.
     

pc_autosyncworkitem.ID = Internally managed primary key
pc_autosyncworkitem.AddressBookUID = Represents the AddressBookUID to be synced.
pc_autosyncworkitem.Attempts = 
pc_autosyncworkitem.CheckedOutBy = 
pc_autosyncworkitem.CreationTime = 
pc_autosyncworkitem.Exception = Stack trace of the exception
pc_autosyncworkitem.LastUpdateTime = 
pc_autosyncworkitem.MaxContactRef = The upper bound for the ID value in the Contact table for this work item
pc_autosyncworkitem.MinContactRef = The lower bound for the ID value in the Contact table for this work item
pc_autosyncworkitem.NewAddressBookUID = Represents the AddressBookUID to replace the contact AddressBookUID with
pc_autosyncworkitem.Priority = 
pc_autosyncworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_autosyncworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_autosyncworkitem.Skip = Should work item be skipped
pc_autosyncworkitem.Status = Status of this workitem.

pc_contactcatsScore = Table linking Contacts to Category Scores

pc_contactcatsScore.ID = Internally managed primary key
pc_contactcatsScore.AddressBookUID = Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.
pc_contactcatsScore.Contact = Associated Contact.
pc_contactcatsScore.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contactcatsScore.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contactcatsScore.ReviewCategory = Category of this Score.
pc_contactcatsScore.Score = 

pc_contactcontact = <p>
      Links <code>Contact</code> objects to other contacts. Each link has a specific relationship. See the <code>ContactRel</code> typelist for
      a list of the possible link relationships. The purpose of this table is to avoid a self-referencing foreign key on
      <code>Contact</code>, and to allow contacts to relate to one another in different ways.</p>
      <p>For example, imagine a <code>ContactContact</code> entity with the following values:</p>
      <ul><li>SourceContactID: ID of Person A</li>
          <li>Relationship: Employer</li>
          <li>RelatedContactID: ID of Company B</li>
      </ul>
      <p>
      Then the relationship between A and B is: Company B is the Employer of Person A.</p>
    

pc_contactcontact.ID = Internally managed primary key
pc_contactcontact.AddressBookUID = Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.
pc_contactcontact.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contactcontact.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contactcontact.RelatedContact = "RelatedContactID" is the "Relationship" of "SourceContactID".
pc_contactcontact.Relationship = Relationship between the two contacts.
pc_contactcontact.SourceContact = "SourceContactID" has "RelatedContactID" as "Relationship".

pc_contactfingerprint = ContactFingerprint

pc_contactfingerprint.ID = Internally managed primary key
pc_contactfingerprint.Contact = 
pc_contactfingerprint.CreateTime = Timestamp when the object was created
pc_contactfingerprint.CreateUser = User who created the object
pc_contactfingerprint.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contactfingerprint.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contactfingerprint.UpdateTime = Timestamp when the object was last updated
pc_contactfingerprint.UpdateUser = User who last updated the object

pc_contacttag = ContactTag

pc_contacttag.ID = Internally managed primary key
pc_contacttag.AddressBookUID = Represents the ID of the associated object in Address Book.  Null if the object is not linked to Address Book.
pc_contacttag.Contact = Contact
pc_contacttag.CreateTime = Timestamp when the object was created
pc_contacttag.CreateUser = User who created the object
pc_contacttag.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_contacttag.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contacttag.Type = Type of this ContactTag.
pc_contacttag.UpdateTime = Timestamp when the object was last updated
pc_contacttag.UpdateUser = User who last updated the object

pc_imcontractorsequipcond = A Contractors' Equipment part-level condition for Inland Marine

pc_imcontractorsequipcond.ID = Internally managed primary key
pc_imcontractorsequipcond.BranchValue = Link to root of effdated tree
pc_imcontractorsequipcond.ChangeType = Type of change made to this row
pc_imcontractorsequipcond.ContractorsEquipPart = 
pc_imcontractorsequipcond.CreateTime = Timestamp when the object was created
pc_imcontractorsequipcond.CreateUser = User who created the object
pc_imcontractorsequipcond.Currency = Currency associated with the policy condition
pc_imcontractorsequipcond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imcontractorsequipcond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imcontractorsequipcond.PatternCode = The pattern defining what kind of Condition this is
pc_imcontractorsequipcond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcontractorsequipcond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imcontractorsequipcond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imcontractorsequipcond.UpdateTime = Timestamp when the object was last updated
pc_imcontractorsequipcond.UpdateUser = User who last updated the object

pc_contrequippartcov = A Contractors' Equipment part-level coverage for Inland Marine

pc_contrequippartcov.ID = Internally managed primary key
pc_contrequippartcov.BranchValue = Link to root of effdated tree
pc_contrequippartcov.ChangeType = Type of change made to this row
pc_contrequippartcov.ContractorsEquipPart = 
pc_contrequippartcov.CreateTime = Timestamp when the object was created
pc_contrequippartcov.CreateUser = User who created the object
pc_contrequippartcov.Currency = Currency associated with the coverage
pc_contrequippartcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_contrequippartcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_contrequippartcov.PatternCode = The pattern defining what kind of Coverage this is
pc_contrequippartcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contrequippartcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_contrequippartcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_contrequippartcov.UpdateTime = Timestamp when the object was last updated
pc_contrequippartcov.UpdateUser = User who last updated the object
pc_contrequippartcov.Costs = 

pc_imcontrequippartexcl = A Contractors' Equipment part-level exclusion for Inland Marine

pc_imcontrequippartexcl.ID = Internally managed primary key
pc_imcontrequippartexcl.BranchValue = Link to root of effdated tree
pc_imcontrequippartexcl.ChangeType = Type of change made to this row
pc_imcontrequippartexcl.ContractorsEquipPart = 
pc_imcontrequippartexcl.CreateTime = Timestamp when the object was created
pc_imcontrequippartexcl.CreateUser = User who created the object
pc_imcontrequippartexcl.Currency = Currency associated with the Exclusion
pc_imcontrequippartexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imcontrequippartexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imcontrequippartexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_imcontrequippartexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcontrequippartexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imcontrequippartexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imcontrequippartexcl.UpdateTime = Timestamp when the object was last updated
pc_imcontrequippartexcl.UpdateUser = User who last updated the object

pc_contractorsequipcov = A Contractors' Equipment item-level coverage for Inland Marine

pc_contractorsequipcov.ID = Internally managed primary key
pc_contractorsequipcov.BranchValue = Link to root of effdated tree
pc_contractorsequipcov.ChangeType = Type of change made to this row
pc_contractorsequipcov.ContractorsEquipment = 
pc_contractorsequipcov.CreateTime = Timestamp when the object was created
pc_contractorsequipcov.CreateUser = User who created the object
pc_contractorsequipcov.Currency = Currency associated with the coverage
pc_contractorsequipcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_contractorsequipcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_contractorsequipcov.PatternCode = The pattern defining what kind of Coverage this is
pc_contractorsequipcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contractorsequipcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_contractorsequipcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_contractorsequipcov.UpdateTime = Timestamp when the object was last updated
pc_contractorsequipcov.UpdateUser = User who last updated the object
pc_contractorsequipcov.Costs = 

pc_contractorsequipment = A scheduled item of equipment on the Inland Marine Contractors' Equipment coverage part

pc_contractorsequipment.ID = Internally managed primary key
pc_contractorsequipment.BranchValue = Link to root of effdated tree
pc_contractorsequipment.ChangeType = Type of change made to this row
pc_contractorsequipment.ContractorsEquipmentID = ID of Contractors Equipment.
pc_contractorsequipment.ContractorsEquipmentNumber = Contractors equipment number
pc_contractorsequipment.ContractorsEquipPart = 
pc_contractorsequipment.CreateTime = Timestamp when the object was created
pc_contractorsequipment.CreateUser = User who created the object
pc_contractorsequipment.Description = Description of Contractors Equipment.
pc_contractorsequipment.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_contractorsequipment.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_contractorsequipment.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_contractorsequipment.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_contractorsequipment.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_contractorsequipment.Manufacturer = Manufacturer of the equipment.
pc_contractorsequipment.Model = Model of the equipment.
pc_contractorsequipment.ModelYear = Model year of the equipment
pc_contractorsequipment.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_contractorsequipment.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_contractorsequipment.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_contractorsequipment.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_contractorsequipment.UpdateTime = Timestamp when the object was last updated
pc_contractorsequipment.UpdateUser = User who last updated the object
pc_contractorsequipment.YearBought = Year the equipment was bought
pc_contractorsequipment.AdditionalInterests = Additional interests on this piece of equipment
pc_contractorsequipment.Coverages = All coverages that apply directly to this contractors equipment.

pc_covtermlookup = The base coverage term availability lookup type.

pc_covtermlookup.ID = Internally managed primary key
pc_covtermlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_covtermlookup.CovTermPatternCode = 
pc_covtermlookup.CreateTime = Timestamp when the object was created
pc_covtermlookup.CreateUser = User who created the object
pc_covtermlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_covtermlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_covtermlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_covtermlookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_covtermlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covtermlookup.SourceFile = The source file in which the entity is defined
pc_covtermlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_covtermlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_covtermlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_covtermlookup.UpdateTime = Timestamp when the object was last updated
pc_covtermlookup.UpdateUser = User who last updated the object
pc_covtermlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_covtermoptlookup = The base coverage term availability lookup type.

pc_covtermoptlookup.ID = Internally managed primary key
pc_covtermoptlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_covtermoptlookup.CovTermOptCode = 
pc_covtermoptlookup.CovTermPatternCode = The covterm pattern code for which this lookup applies
pc_covtermoptlookup.CreateTime = Timestamp when the object was created
pc_covtermoptlookup.CreateUser = User who created the object
pc_covtermoptlookup.Currency = The currency for which this lookup applies, or null if the lookup is not restricted by currency.
pc_covtermoptlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_covtermoptlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_covtermoptlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_covtermoptlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covtermoptlookup.SourceFile = The source file in which the entity is defined
pc_covtermoptlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_covtermoptlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_covtermoptlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_covtermoptlookup.UpdateTime = Timestamp when the object was last updated
pc_covtermoptlookup.UpdateUser = User who last updated the object
pc_covtermoptlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_covtermpacklookup = The base coverage term availability lookup type.

pc_covtermpacklookup.ID = Internally managed primary key
pc_covtermpacklookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_covtermpacklookup.CovTermPackCode = 
pc_covtermpacklookup.CovTermPatternCode = The covterm pattern code for which this lookup applies
pc_covtermpacklookup.CreateTime = Timestamp when the object was created
pc_covtermpacklookup.CreateUser = User who created the object
pc_covtermpacklookup.Currency = The currency for which this lookup applies, or null if the lookup is not restricted by currency.
pc_covtermpacklookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_covtermpacklookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_covtermpacklookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_covtermpacklookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covtermpacklookup.SourceFile = The source file in which the entity is defined
pc_covtermpacklookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_covtermpacklookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_covtermpacklookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_covtermpacklookup.UpdateTime = Timestamp when the object was last updated
pc_covtermpacklookup.UpdateUser = User who last updated the object
pc_covtermpacklookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_covlookup = An availability lookup for coverage patterns.

pc_covlookup.ID = Internally managed primary key
pc_covlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_covlookup.CoveragePatternCode = 
pc_covlookup.CreateTime = Timestamp when the object was created
pc_covlookup.CreateUser = User who created the object
pc_covlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_covlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_covlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_covlookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_covlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covlookup.SourceFile = The source file in which the entity is defined
pc_covlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_covlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_covlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_covlookup.UpdateTime = Timestamp when the object was last updated
pc_covlookup.UpdateUser = User who last updated the object
pc_covlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company
pc_covlookup.PolicyType = The policy type of this lookup
pc_covlookup.VehicleType = 
pc_covlookup.CoverageForm = 
pc_covlookup.VehicleType = 

pc_covratefactor = Coverage-related factors

pc_covratefactor.ID = Internally managed primary key
pc_covratefactor.CovCode = Coverage Code
pc_covratefactor.CovTermCode = Coverage Term Code
pc_covratefactor.CovTermOptCode = Coverage Term Option Code
pc_covratefactor.CreateTime = Timestamp when the object was created
pc_covratefactor.CreateUser = User who created the object
pc_covratefactor.Factor = Factor
pc_covratefactor.Jurisdiction = Jurisdiction
pc_covratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covratefactor.RateTable = Associated logical rate table
pc_covratefactor.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_covratefactor.UpdateTime = Timestamp when the object was last updated
pc_covratefactor.UpdateUser = User who last updated the object

pc_covsymbol = The individual coverage symbol

pc_covsymbol.ID = Internally managed primary key
pc_covsymbol.BranchValue = Link to root of effdated tree
pc_covsymbol.ChangeType = Type of change made to this row
pc_covsymbol.CoverageSymbolGroup = 
pc_covsymbol.CreateTime = Timestamp when the object was created
pc_covsymbol.CreateUser = User who created the object
pc_covsymbol.Description = Description field
pc_covsymbol.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_covsymbol.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_covsymbol.PatternCode = The pattern defining what kind of CoverageSymbol this is
pc_covsymbol.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covsymbol.UpdateTime = Timestamp when the object was last updated
pc_covsymbol.UpdateUser = User who last updated the object

pc_covsymbolgrp = One group of CoverageSymbols on a given PolicyLine

pc_covsymbolgrp.ID = Internally managed primary key
pc_covsymbolgrp.BranchValue = Link to root of effdated tree
pc_covsymbolgrp.ChangeType = Type of change made to this row
pc_covsymbolgrp.CreateTime = Timestamp when the object was created
pc_covsymbolgrp.CreateUser = User who created the object
pc_covsymbolgrp.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_covsymbolgrp.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_covsymbolgrp.PatternCode = The pattern defining what kind of CoverageSymbolGroup this is
pc_covsymbolgrp.PolicyLine = 
pc_covsymbolgrp.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_covsymbolgrp.UpdateTime = Timestamp when the object was last updated
pc_covsymbolgrp.UpdateUser = User who last updated the object
pc_covsymbolgrp.CoverageSymbols = The symbols belonging to this group

pc_credential = 
      Maintains a user's system level-security identification. Each user has a corresponding Credential object. This entity
      maintains information related to authorization and authentication on the system. A Credential holds both the user's
      password and controls whether or not the user is active or not. This entity also tracks login attempts.
      
    

pc_credential.ID = Internally managed primary key
pc_credential.Active = Whether this credential is active. Inactive credentials are not allowed to log in.
pc_credential.CreateTime = Timestamp when the object was created
pc_credential.CreateUser = User who created the object
pc_credential.FailedAttempts = The number of consecutive failed login attempts, or 0 if the last login attempt was successful.
pc_credential.FailedTime = The time the last failed login attempt was made, or null if the last login attempt was successful.
pc_credential.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_credential.LockDate = The time at which this credential was locked, or null if the credential is not locked.  A user cannot log in if their credential was locked within the lockout interval, which is paramaterizeable.
pc_credential.Password = User password.
pc_credential.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_credential.UpdateTime = Timestamp when the object was last updated
pc_credential.UpdateUser = User who last updated the object
pc_credential.UserName = User login name.

pc_crosstermlink = Tracks references from one term to another for use in archiving / retrieve.

pc_crosstermlink.ID = Internally managed primary key
pc_crosstermlink.CreateTime = Timestamp when the object was created
pc_crosstermlink.CreateUser = User who created the object
pc_crosstermlink.LinkType = Type of the from and to entities
pc_crosstermlink.Owner = Public ID of the owner of the cross term link
pc_crosstermlink.OwningBranch = Branch of the link owner
pc_crosstermlink.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_crosstermlink.Target = Public ID of the target of the cross term link
pc_crosstermlink.UpdateTime = Timestamp when the object was last updated
pc_crosstermlink.UpdateUser = User who last updated the object

pc_customddcolumns = Stores ordered column names for custom data distribution request.

pc_customddcolumns.ID = Internally managed primary key
pc_customddcolumns.ColumnName = Column name.
pc_customddcolumns.ColumnOrder = 1-based ordering of columnname with CDDR.
pc_customddcolumns.CustomDataDistRequest = CustomDataDistRequest for this object.
pc_customddcolumns.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_customddcolumns.ReturnTypeClassName = Return type class name.

pc_customddresults = Stores results of custom data distribution request.

pc_customddresults.ID = Internally managed primary key
pc_customddresults.ColumnOrder = 1-based ordering of column of result within CDDR results.
pc_customddresults.CustomDataDistRequest = CustomDDRColumnName for this object.
pc_customddresults.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_customddresults.ResultValue = Result value.
pc_customddresults.RowOrder = 1-based ordering of row of result within CDDR results.

pc_customdatadistreq = Stores custom data distribution request.

pc_customdatadistreq.ID = Internally managed primary key
pc_customdatadistreq.Description = Description.
pc_customdatadistreq.DistType = Data distribution type
pc_customdatadistreq.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_customdatadistreq.Query = Query.
pc_customdatadistreq.TableDataDist = TableDataDist for this object.
pc_customdatadistreq.CustomDDColumns = Collection of CustomDDColumns linked to this CustomDataDistRequest.
pc_customdatadistreq.CustomDDResults = Collection of CustomDDResults linked to this CustomDataDistRequest.

pc_customforminference = Associates a FormPattern with a custom form inference class

pc_customforminference.ID = Internally managed primary key
pc_customforminference.CreateTime = Timestamp when the object was created
pc_customforminference.CreateUser = User who created the object
pc_customforminference.FormCode = Code of the FormPattern
pc_customforminference.InferenceClass = Inference class of the FormPattern
pc_customforminference.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_customforminference.UpdateTime = Timestamp when the object was last updated
pc_customforminference.UpdateUser = User who last updated the object

pc_dbconsistcheckqueryexec = Stores instrumented queries from consistency checker.

pc_dbconsistcheckqueryexec.ID = Internally managed primary key
pc_dbconsistcheckqueryexec.ConsistencyCheckType = Type of consistency check
pc_dbconsistcheckqueryexec.DBConsistCheckRun = DBConsistCheckRun for this object.
pc_dbconsistcheckqueryexec.Description = Description.
pc_dbconsistcheckqueryexec.Duration = Elapsed time in seconds
pc_dbconsistcheckqueryexec.EndTime = End time of query execution.
pc_dbconsistcheckqueryexec.Fingerprint = Fingerprint of query, if query-based
pc_dbconsistcheckqueryexec.NumRows = # of rows failing check
pc_dbconsistcheckqueryexec.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dbconsistcheckqueryexec.QueryText = Query.
pc_dbconsistcheckqueryexec.QueryToIdentifyRows = Query to identify rows.
pc_dbconsistcheckqueryexec.SQLFailureMsg = SQL failure stack trace
pc_dbconsistcheckqueryexec.StartTime = Start time of query execution.
pc_dbconsistcheckqueryexec.TableName = Table name

pc_dbconsistcheckrun = Stores consistency checker info in the database.

pc_dbconsistcheckrun.ID = Internally managed primary key
pc_dbconsistcheckrun.Description = Description.
pc_dbconsistcheckrun.Duration = Elapsed time in seconds
pc_dbconsistcheckrun.EndTime = End time of consistency check process.
pc_dbconsistcheckrun.ExtensionsSchemaVersion = Extensions version number at time of check
pc_dbconsistcheckrun.MajorSchemaVersion = Major Schema Version at time of check 
pc_dbconsistcheckrun.MinorSchemaVersion = Minor Schema Version at time of check 
pc_dbconsistcheckrun.NumberOfThreads = Number of threads used to run this job
pc_dbconsistcheckrun.PlatformMajorSchemaVersion = Platform Major Schema Version at time of check 
pc_dbconsistcheckrun.PlatformMinorSchemaVersion = Platform Minor Schema Version at time of check 
pc_dbconsistcheckrun.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dbconsistcheckrun.StartTime = Start time of consistency check process.
pc_dbconsistcheckrun.TotalNumChecks = Total number of checks in this run
pc_dbconsistcheckrun.DBConsistCheckQueryExecs = Collection of DBConsistCheckQueryExecs linked to this DBConsistCheckExec.

pc_dbperfreport = Stores zipped database performance reports in the database.

pc_dbperfreport.ID = Internally managed primary key
pc_dbperfreport.Description = Description.
pc_dbperfreport.EndTime = End time of data distribution process.
pc_dbperfreport.ErrorMessages = 
pc_dbperfreport.PerfDownload = 
pc_dbperfreport.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dbperfreport.StartTime = Start time of data distribution process.
pc_dbperfreport.Status = 0 for STARTED, 1 for SUCCESSFULLY_COMPLETED, 2 for FAILED

pc_dbstatsworkitem = Queue of statistics to run. This is a system-internal entity.

pc_dbstatsworkitem.ID = Internally managed primary key
pc_dbstatsworkitem.Attempts = 
pc_dbstatsworkitem.CheckedOutBy = 
pc_dbstatsworkitem.CreationTime = 
pc_dbstatsworkitem.Exception = Stack trace of the exception
pc_dbstatsworkitem.LastUpdateTime = 
pc_dbstatsworkitem.Priority = 
pc_dbstatsworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_dbstatsworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dbstatsworkitem.Status = Status of this workitem.
pc_dbstatsworkitem.TableName = The table on which to run statistics

pc_territory = A lookup table matching physical addresses to territory codes.

pc_territory.ID = Internally managed primary key
pc_territory.City = City.
pc_territory.Code = Territory Code
pc_territory.County = County.
pc_territory.CreateTime = Timestamp when the object was created
pc_territory.CreateUser = User who created the object
pc_territory.Description = Description of the territory code
pc_territory.EffectiveDate = Effective date of this row.
pc_territory.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_territory.PolicyLinePatternCode = Policy line this code is valid for
pc_territory.PostalCode = The Zip Code
pc_territory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_territory.State = Regulatory jurisdiction for this territory code
pc_territory.UpdateTime = Timestamp when the object was last updated
pc_territory.UpdateUser = User who last updated the object

pc_territory_desc = null

pc_territory_desc.ID = Internally managed primary key
pc_territory_desc.Language = 
pc_territory_desc.Owner = 
pc_territory_desc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_territory_desc.Value = 

pc_datachange = The change to production data.

pc_datachange.ID = Internally managed primary key
pc_datachange.CreateDate = Date the gosu was added.
pc_datachange.CreateUser = The user who created the gosu.
pc_datachange.Description = Description of the change requested.
pc_datachange.ExecuteDate = The time the gosu was executed.
pc_datachange.ExecuteUser = The user who executed the gosu.
pc_datachange.ExternalReference = An external reference for tracking change requests.
pc_datachange.Gosu = The gosu to execute.
pc_datachange.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datachange.Result = The result of executing the gosu.
pc_datachange.Status = 

pc_datadistqueryexec = Stores instrumented queries from data distribution.

pc_datadistqueryexec.ID = Internally managed primary key
pc_datadistqueryexec.DatabaseDataDist = DatabaseDataDist for this object.
pc_datadistqueryexec.Description = Description.
pc_datadistqueryexec.Duration = Elapsed time in seconds
pc_datadistqueryexec.EndTime = End time of query execution.
pc_datadistqueryexec.Fingerprint = Fingerprint of query, if query-based
pc_datadistqueryexec.NumRows = # of rows returned by query
pc_datadistqueryexec.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datadistqueryexec.QueryText = Query.
pc_datadistqueryexec.StartTime = Start time of query execution.
pc_datadistqueryexec.TableName = Table name for query, if query-based
pc_datadistqueryexec.ThreadName = Thread name.

pc_datageninfo = Stores metadata for database generation info.

pc_datageninfo.ID = Internally managed primary key
pc_datageninfo.Action = the action type this data-gen performed
pc_datageninfo.BuildVersion = 
pc_datageninfo.Description = Info logged by the generation process.
pc_datageninfo.PerformDate = Time this generation happened.
pc_datageninfo.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datageninfo.Status = 
pc_datageninfo.Details = Detailed description.

pc_datageninfodetail = Details for data gen.

pc_datageninfodetail.ID = Internally managed primary key
pc_datageninfodetail.DataGenInfo = Parent.
pc_datageninfodetail.Description = Line for detailed description.
pc_datageninfodetail.DisplayOrder = display order within parent
pc_datageninfodetail.NumIndents = # of tabs for readability
pc_datageninfodetail.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_databasedatadist = Stores data distribution info in the database.

pc_databasedatadist.ID = Internally managed primary key
pc_databasedatadist.AdHocDistsCollected = Ad hoc data distributions collected
pc_databasedatadist.AllTablesCollected = All tables data distributions collected.  If false, a subset was specified.
pc_databasedatadist.AppSpecificDistsCollected = Application specific data distributions collected.
pc_databasedatadist.ArrayDistsCollected = Array distributions collected.
pc_databasedatadist.AssignableDistsByDateCollected = Assignable data distributions by date collected.
pc_databasedatadist.AssignableForKeyDistsCollected = Assignable Foreign Key distributions collected.
pc_databasedatadist.BeanDistsCollected = Bean distributions collected.
pc_databasedatadist.BlobDistsCollected = Blob distributions collected.
pc_databasedatadist.BooleanColDistsCollected = Boolean column data distributions collected
pc_databasedatadist.ClobDistsCollected = Clob distributions collected.
pc_databasedatadist.Description = Description.
pc_databasedatadist.EndTime = End time of data distribution process.
pc_databasedatadist.ForKeyDistsCollected = ForeignKey distributions collected.
pc_databasedatadist.MajorSchemaVersion = Major Schema Version at time of collection 
pc_databasedatadist.MinorSchemaVersion = Minor Schema Version at time of collection 
pc_databasedatadist.NumThreads = Number of threads configured to collect data distribution
pc_databasedatadist.PlatformMajorSchemaVersion = Platform Major Schema Version at time of collection 
pc_databasedatadist.PlatformMinorSchemaVersion = Platform Minor Schema Version at time of collection 
pc_databasedatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_databasedatadist.StagingTableDistsCollected = Staging table data distributions collected
pc_databasedatadist.StartTime = Start time of data distribution process.
pc_databasedatadist.TypeKeyDistsCollected = TypeKey  distributions collected.
pc_databasedatadist.TypeListTableDistsCollected = Typelist table data distributions collected
pc_databasedatadist.DataDistQueryExecs = Collection of DataDistQueryExecs linked to this DatabaseDataDist.
pc_databasedatadist.TableDataDists = Collection of TableDataDists linked to this DatabaseDataDist.

pc_databaseupdatestats = Stores update statistics info in the database.

pc_databaseupdatestats.ID = Internally managed primary key
pc_databaseupdatestats.Description = Description.
pc_databaseupdatestats.EndTime = End time of update statistics process.
pc_databaseupdatestats.ExtensionsSchemaVersion = Extensions Schema Version at time of collection 
pc_databaseupdatestats.Incremental = Whether update is incremental.
pc_databaseupdatestats.incrementalThresholdPercent = incremental threshold percent.
pc_databaseupdatestats.MajorSchemaVersion = Major Schema Version at time of collection 
pc_databaseupdatestats.MinorSchemaVersion = Minor Schema Version at time of collection 
pc_databaseupdatestats.PlatformMajorSchemaVersion = Platform Major Schema Version at time of collection 
pc_databaseupdatestats.PlatformMinorSchemaVersion = Platform Minor Schema Version at time of collection 
pc_databaseupdatestats.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_databaseupdatestats.RunnerType = Type of process running the operation.
pc_databaseupdatestats.StartTime = Start time of update statistics process.
pc_databaseupdatestats.updateStatisticsSQL = Query used to determine if threshold exceeded.
pc_databaseupdatestats.TableUpdateStats = Collection of TableUpdateStats linked to this DatabaseUpdateStats.

pc_dateanalysisdatadist = Stores date analysis data distribution.

pc_dateanalysisdatadist.ID = Internally managed primary key
pc_dateanalysisdatadist.AvgRowsPerDate = Average number of rows per date.
pc_dateanalysisdatadist.DatetimeColumnName = Name of datetime column.
pc_dateanalysisdatadist.MaxRowsPerDate = Maximum number of rows per date.
pc_dateanalysisdatadist.MinRowsPerDate = Minimum number of rows per date.
pc_dateanalysisdatadist.mnth = Month
pc_dateanalysisdatadist.NumDistinctDates = Number of distinct non-null dates.
pc_dateanalysisdatadist.NumNonNullNonLoadableDates = Number of non-null, non-loadable rows.
pc_dateanalysisdatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dateanalysisdatadist.TableDataDist = TableDataDist for this object.
pc_dateanalysisdatadist.yr = Year

pc_datebinneddddatebin = Stores value bins and date bin array for date binned distribution.

pc_datebinneddddatebin.ID = Internally managed primary key
pc_datebinneddddatebin.Count = Count of items in this date bin
pc_datebinneddddatebin.EndDays = Last day in days +/- date of distribution for this date bin, must be negative or zero if StartDays is negative
pc_datebinneddddatebin.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datebinneddddatebin.StartDays = First day in days +/- date of distribution for this date bin, must be positive or zero if EndDays is positive
pc_datebinneddddatebin.Value = DateBinnedDDValue for this object.

pc_datebinnedddvalue = Stores value bins and date bin array for date binned distribution.

pc_datebinnedddvalue.ID = Internally managed primary key
pc_datebinnedddvalue.AddlValue = Additional column value.
pc_datebinnedddvalue.DateBinnedDataDist = TypeKeyDataDist for this object.
pc_datebinnedddvalue.MaximumDate = Maximum date and time for this date column and value bin
pc_datebinnedddvalue.MinimumDate = Minimum date and time for this date column and value bin
pc_datebinnedddvalue.NullValues = Count of items in this value bin with null date
pc_datebinnedddvalue.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datebinnedddvalue.Value = Main column value.
pc_datebinnedddvalue.DateBins = Date bins for this value

pc_datebinneddatadist = Stores the distribution of items by date bins sizes for a given value column, date column pair.

pc_datebinneddatadist.ID = Internally managed primary key
pc_datebinneddatadist.AddlColumnName = Additional value column name (optional)
pc_datebinneddatadist.DataType = Data type of primary column in value bins.
pc_datebinneddatadist.DateColumnName = Date column name.
pc_datebinneddatadist.Description = Description.
pc_datebinneddatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datebinneddatadist.TableDataDist = TableDataDist for this object.
pc_datebinneddatadist.ValueColumnName = Main value column name.
pc_datebinneddatadist.ValueBins = Value of MainColumn and Addlcolumn (these must be bounded)

pc_datespandatadist = Stores maximum and minimum dates for each date columnn of a table.

pc_datespandatadist.ID = Internally managed primary key
pc_datespandatadist.DateColName = Date column name.
pc_datespandatadist.MaxDate = Latest date stored.
pc_datespandatadist.MinDate = Earliest date stored.
pc_datespandatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_datespandatadist.TableDataDist = TableDataDist for this object.

pc_dbmsreport = Stores DBMS reports as zipped objects

pc_dbmsreport.ID = Internally managed primary key
pc_dbmsreport.CaptureDate = The datetime this was captured.
pc_dbmsreport.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dbmsreport.ZippedReport = 

pc_defratefactors = This default table which stores the factors used in rating calculations

pc_defratefactors.ID = Internally managed primary key
pc_defratefactors.bit1 = Bit 1
pc_defratefactors.bit2 = Bit 2
pc_defratefactors.CreateTime = Timestamp when the object was created
pc_defratefactors.CreateUser = User who created the object
pc_defratefactors.date1 = Date 1
pc_defratefactors.date2 = Date 2
pc_defratefactors.dec1 = Decimal 1
pc_defratefactors.dec2 = Decimal 2
pc_defratefactors.dec3 = Decimal 3
pc_defratefactors.dec4 = Decimal 4
pc_defratefactors.dec5 = Decimal 5
pc_defratefactors.dec6 = Decimal 6
pc_defratefactors.int1 = Integer 1
pc_defratefactors.int2 = Integer 2
pc_defratefactors.int3 = Integer 3
pc_defratefactors.int4 = Integer 4
pc_defratefactors.int5 = Integer 5
pc_defratefactors.int6 = Integer 6
pc_defratefactors.int7 = Integer 7
pc_defratefactors.int8 = Integer 8
pc_defratefactors.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_defratefactors.RateTable = Logical rate table that contain the factors with these values
pc_defratefactors.str1 = String 1
pc_defratefactors.str2 = String 2
pc_defratefactors.str3 = String 3
pc_defratefactors.str4 = String 4
pc_defratefactors.str5 = String 5
pc_defratefactors.str6 = String 6
pc_defratefactors.str7 = String 7
pc_defratefactors.str8 = String 8
pc_defratefactors.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_defratefactors.UpdateTime = Timestamp when the object was last updated
pc_defratefactors.UpdateUser = User who last updated the object

pc_diagratingworksheetref = A foreign key reference that relates to a diagnostic rating worksheet

pc_diagratingworksheetref.ID = Internally managed primary key
pc_diagratingworksheetref.BranchValue = Link to root of effdated tree
pc_diagratingworksheetref.ChangeType = Type of change made to this row
pc_diagratingworksheetref.CreateTime = Timestamp when the object was created
pc_diagratingworksheetref.CreateUser = User who created the object
pc_diagratingworksheetref.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_diagratingworksheetref.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_diagratingworksheetref.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_diagratingworksheetref.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_diagratingworksheetref.UpdateTime = Timestamp when the object was last updated
pc_diagratingworksheetref.UpdateUser = User who last updated the object
pc_diagratingworksheetref.Worksheet = 
pc_diagratingworksheetref.CalcRoutineParameter = 
pc_diagratingworksheetref.StringValue = string value of non-bean parameters

pc_diagratingworksheet = A rating worksheet for capturing diagnostic data in the case of a problem during rating.

pc_diagratingworksheet.ID = Internally managed primary key
pc_diagratingworksheet.BranchValue = Link to root of effdated tree
pc_diagratingworksheet.ChangeType = Type of change made to this row
pc_diagratingworksheet.CreateTime = Timestamp when the object was created
pc_diagratingworksheet.CreateUser = User who created the object
pc_diagratingworksheet.DiagnosticCapture = Longer text description for capturing cause, e.g. statcktrace
pc_diagratingworksheet.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_diagratingworksheet.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_diagratingworksheet.PolicyLine = 
pc_diagratingworksheet.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_diagratingworksheet.Reason = Short message describing reason this worksheet was created
pc_diagratingworksheet.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_diagratingworksheet.TextData = Contents of the rating worksheet, generally stored as XML.
pc_diagratingworksheet.UpdateTime = Timestamp when the object was last updated
pc_diagratingworksheet.UpdateUser = User who last updated the object
pc_diagratingworksheet.EntityReferences = List of entities related to rating

pc_document = Reference to an external document

pc_document.ID = Internally managed primary key
pc_document.Account = Associated account
pc_document.Author = Name of the person who created the document.
pc_document.CreateTime = Timestamp when the object was created
pc_document.CreateUser = User who created the object
pc_document.DateCreated = Date and time the document was created.
pc_document.DateModified = Date and time the document was last modified.
pc_document.Description = Description of the document.
pc_document.DMS = Whether this document has content stored in a Document Management System.
pc_document.DocUID = The Unique Identifier (UID) for this document.     The format of this UID is specific to the deployed Document Management System (DMS), and is passed to the configured IDocumentContentSource implementation.
pc_document.DocumentIdentifier = Short human-readable identifier for the document, often used as an extra storage location for form codes, when name and documenttype are inadequate.
pc_document.Inbound = Whether the document is an inbound, outbound, or stationary (null) document
pc_document.Job = Associated job.
pc_document.Language = The language in which this document is created.
pc_document.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_document.MimeType = The MIME type of this document; for example, application/msword for a Microsoft Word document.
pc_document.Name = Human-readable name of the document.
pc_document.Obsolete = If true, the information in the document can no longer be relied upon to be up-to-date and relevant. This is often used instead of deletion to preserve history.
pc_document.PendingDocUID = The document is pending, and it's pending storage has Unique Identifier (UID).     The format of this UID is specific to the IDCS implementation.
pc_document.Policy = Associated policy.
pc_document.PolicyPeriod = Associated Policy Period.
pc_document.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_document.Recipient = Name of the intended recipient of the document (if any).
pc_document.Section = The section to which this document belongs, if any.
pc_document.SecurityType = Type of document used for access-restriction purposes, in conjunction with the information in security-config.xml.
pc_document.Status = The current status of the document, if any.
pc_document.Type = The specific type of the document, if any.
pc_document.UpdateTime = Timestamp when the object was last updated
pc_document.UpdateUser = User who last updated the object

pc_dynamic_assign = Information includes what user/group was last assigned work, user/group job loads and user/group review loads

pc_dynamic_assign.ID = Internally managed primary key
pc_dynamic_assign.CreateTime = Timestamp when the object was created
pc_dynamic_assign.CreateUser = User who created the object
pc_dynamic_assign.Fingerprint = The fingerprint this state is tracking.
pc_dynamic_assign.GroupOnly = Flag indicating whether the row represents a Group assignment only, or a Group and User assignment
pc_dynamic_assign.LastAccountGrp = The id of the last group that was assigned an account
pc_dynamic_assign.LastAccountUser = The id of the last user that was assigned an account.
pc_dynamic_assign.LastActivityGrp = The id of the last group that was assigned an activity.
pc_dynamic_assign.LastActivityUser = The id of the last user that was assigned an activity.
pc_dynamic_assign.LastJobGrp = The id of the last group that was assigned a job.
pc_dynamic_assign.LastJobUser = The id of the last user that was assigned a job.
pc_dynamic_assign.LastPolicyGrp = The id of the last group that was assigned a policy for pre-renewal
pc_dynamic_assign.LastPolicyUser = The id of the last user that was assigned a policy for pre-renewal
pc_dynamic_assign.LastReviewGrp = The id of the last group that was assigned an assignment review activity.
pc_dynamic_assign.LastReviewUser = The id of the last user that was assigned an assignment review activity.
pc_dynamic_assign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_dynamic_assign.UpdateTime = Timestamp when the object was last updated
pc_dynamic_assign.UpdateUser = User who last updated the object

pc_effectivedatedfields = A place to put fields that need to change in effective time but do not belong to any specific policy line

pc_effectivedatedfields.ID = Internally managed primary key
pc_effectivedatedfields.BillingContact = The billing contact on the policy.
pc_effectivedatedfields.BranchValue = Link to root of effdated tree
pc_effectivedatedfields.ChangeType = Type of change made to this row
pc_effectivedatedfields.CreateTime = Timestamp when the object was created
pc_effectivedatedfields.CreateUser = User who created the object
pc_effectivedatedfields.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_effectivedatedfields.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_effectivedatedfields.OfferingCode = The product offering selected for this branch
pc_effectivedatedfields.PolicyAddress = The Policy Address of this policy.
pc_effectivedatedfields.PrimaryLocation = The primary Location for this Policy.
pc_effectivedatedfields.PrimaryNamedInsured = The primary named insured on the policy.
pc_effectivedatedfields.ProducerCode = The producer code of the producer that was managing this policy period.
pc_effectivedatedfields.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_effectivedatedfields.SecondaryNamedInsured = The secondary named insured on the policy.  This typically only exists on personal lines.
pc_effectivedatedfields.UpdateTime = Timestamp when the object was last updated
pc_effectivedatedfields.UpdateUser = User who last updated the object
pc_effectivedatedfields.ProductModifiers = Rating info for the policy

pc_encryptedcolumnregistry = Stores metadata for each encrypted column in the database.

pc_encryptedcolumnregistry.ColumnName = Name of the column
pc_encryptedcolumnregistry.TableName = Name of the table.

pc_flowmask = An EntityFlowMaskData is the persistent data object for an EntityFlowMask, which excludes specified columns from import or export for an entity.

pc_flowmask.ID = Internally managed primary key
pc_flowmask.EntityTypeName = The entity type name on which this mask is defined.
pc_flowmask.MaskIdentifiersEncoding = A comma-separated list of paths that identify the columns to be masked out on import or export.
pc_flowmask.Name = The name of this flow mask.
pc_flowmask.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_flowmaskdefault = A join table that specifies a default EntityFlowMask for each entity type.

pc_flowmaskdefault.ID = Internally managed primary key
pc_flowmaskdefault.DefaultMask = 
pc_flowmaskdefault.EntityTypeName = The entity type name for which a default is defined.
pc_flowmaskdefault.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_exchangerate = A rate for converting one currency to another.

pc_exchangerate.ID = Internally managed primary key
pc_exchangerate.BaseCurrency = From Currency. The Currency this ExchangeRate converts from.
pc_exchangerate.CreateTime = Timestamp when the object was created
pc_exchangerate.CreateUser = User who created the object
pc_exchangerate.ExchangeRateSet = The ExchangeRateSet this ExchangeRate belongs to.
pc_exchangerate.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_exchangerate.NormalizedRate = BaseUnits of BaseCurrency = NormalizedRate * 10^-RateScale * PriceUnits of PriceCurrency.
pc_exchangerate.PriceCurrency = To Currency. The Currency this ExchangeRate converts to.
pc_exchangerate.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_exchangerate.RateScale = Amount by which NormalizedRate was scaled. ExchangeRates are stored as a normalized value plus a scale so that exact floating-point exchange rates can be stored in fixed-width database columnns.
pc_exchangerate.UpdateTime = Timestamp when the object was last updated
pc_exchangerate.UpdateUser = User who last updated the object

pc_exchangerateset = A collection of exchange rates.

pc_exchangerateset.ID = Internally managed primary key
pc_exchangerateset.CreateTime = Timestamp when the object was created
pc_exchangerateset.CreateUser = User who created the object
pc_exchangerateset.Description = A longer description of the rate set.
pc_exchangerateset.EffectiveDate = The date and time this rate set becomes effective.
pc_exchangerateset.ExpireDate = The date and time this rate set is no longer effective.
pc_exchangerateset.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_exchangerateset.MarketRates = True if this rate set should be included in search for latest market rates.
pc_exchangerateset.Name = The name of the rate set.
pc_exchangerateset.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_exchangerateset.UpdateTime = Timestamp when the object was last updated
pc_exchangerateset.UpdateUser = User who last updated the object
pc_exchangerateset.ExchangeRates = ExchangeRates in this ExchangeRateSet.

pc_excllookup = An availability lookup for exclusion patterns.

pc_excllookup.ID = Internally managed primary key
pc_excllookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_excllookup.CreateTime = Timestamp when the object was created
pc_excllookup.CreateUser = User who created the object
pc_excllookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_excllookup.ExclusionPatternCode = 
pc_excllookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_excllookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_excllookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_excllookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_excllookup.SourceFile = The source file in which the entity is defined
pc_excllookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_excllookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_excllookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_excllookup.UpdateTime = Timestamp when the object was last updated
pc_excllookup.UpdateUser = User who last updated the object
pc_excllookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company
pc_excllookup.PolicyType = The policy type of this lookup

pc_forkeydatadist = Stores foreign key data distribution.

pc_forkeydatadist.ID = Internally managed primary key
pc_forkeydatadist.ForeignKeyEntityName = Name of foreign key entity
pc_forkeydatadist.ForeignKeyName = Name of foreign key.
pc_forkeydatadist.ForeignKeyTableName = Name of table of foreign key
pc_forkeydatadist.NumNonNull = Count of # of non null values.
pc_forkeydatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_forkeydatadist.RatioFKtoPKValues = Ratio of non-null foreign key values to primary key values.
pc_forkeydatadist.TableDataDist = TableDataDist for this object.

pc_form = 
    Represents an instance of a form on a policy.  Forms can either be inferred by the form inference process based
      on a FormPattern or they can be attached directly to a policy if the forms are calculated by an external system.
      Form objects are eff-dated but don't make use of the EffectiveDate and ExpirationDate fields, as they apply
      to a given Period/Job rather than any particular point in effective time.
  

pc_form.ID = Internally managed primary key
pc_form.BranchValue = Link to root of effdated tree
pc_form.ChangeType = Type of change made to this row
pc_form.CreateTime = Timestamp when the object was created
pc_form.CreateUser = User who created the object
pc_form.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_form.EndorsementNumber = The endorsement number of this form.  This field will be null for non-contract forms.
pc_form.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_form.FormDescription = A short description of what the form should hold.
pc_form.FormNumber = The form number to show in the list of forms.
pc_form.FormPatternCode = The public-id of the FormPattern associated with this form.
pc_form.FormTextData = The text for this form, which is stored independently so it's only loaded when necessary and not every time forms are queried, requested, or displayed.
pc_form.InferenceTime = When the form was inferred.  We track this so that the bind process will only re-infer bind-time forms but will leave quote-time forms alone.
pc_form.InternalFormEffDate = The date on which the form became effective.  This column will be null if the form was effective as of the period start date.
pc_form.InternalFormExpDate = The date on which the form ceases to be effective. This may be superseded by the InternalFormRemovalDate column.  This column will be null if the form expires on the period end date.
pc_form.InternalFormRemovalDate = The date on which the form was removed or superseded.  If the RemovedOrSuperseded field is set to true, a null here means that the form was removed or superseded as of the period start date.
pc_form.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_form.RemovedOrSuperseded = Whether or not the form has been removed or superseded.
pc_form.UpdateTime = Timestamp when the object was last updated
pc_form.UpdateUser = User who last updated the object
pc_form.FormAssociations = The list of associations between this form and entities within the policy graph.  In general, these associations should only be used to in the case where multiple copies of a given form are issued and a way is needed to match up a given Form instance to the entity it's associated with.
pc_form.SupersededForms = An array of size 0 or 1 that links this form to the form it superseded, if any.

pc_formassociation = 
    An entity that can be used to associate a Form to an entity in the policy graph.  The foreign keys on this entity
      should generally only be used for matching purposes to determine if two versions of a Form that have the same
      pattern are associated with the same object, and the fks should never be traversed due to the ambiguity of
      when that traversal will take place in model or effective time.  This entity can either be extended or subclassed
      in order to add in additional foreign keys; the out of the box product chooses the subclassing strategy to allow
      subclasses and their foreign keys to be packaged in LOB-specific files that also contain the entities being
      pointed to.
  

pc_formassociation.ID = Internally managed primary key
pc_formassociation.BranchValue = Link to root of effdated tree
pc_formassociation.ChangeType = Type of change made to this row
pc_formassociation.CreateTime = Timestamp when the object was created
pc_formassociation.CreateUser = User who created the object
pc_formassociation.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_formassociation.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_formassociation.Form = The associated Form.
pc_formassociation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formassociation.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_formassociation.UpdateTime = Timestamp when the object was last updated
pc_formassociation.UpdateUser = User who last updated the object
pc_formassociation.WCWaiverOfSubro = 

pc_formedgetable = 
    This entity exists because we don't currently support edge foreign keys between effdated entities.  This edge
      table is used by the SupersededForms array on Form to link a new Form entity to the old Form that it is replacing.
      An edge table is necessary to avoid circular references in the datamodel.
  

pc_formedgetable.ID = Internally managed primary key
pc_formedgetable.BranchValue = Link to root of effdated tree
pc_formedgetable.ChangeType = Type of change made to this row
pc_formedgetable.CreateTime = Timestamp when the object was created
pc_formedgetable.CreateUser = User who created the object
pc_formedgetable.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_formedgetable.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_formedgetable.OwningForm = The form that is doing the replacing.
pc_formedgetable.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formedgetable.TargetForm = The form that was replaced.
pc_formedgetable.UpdateTime = Timestamp when the object was last updated
pc_formedgetable.UpdateUser = User who last updated the object

pc_formpattern = A FormPattern specifies the conditions for attaching a particular form to a policy.

pc_formpattern.ID = Internally managed primary key
pc_formpattern.ClausePatternCode = The clause pattern associated with this form pattern (used by GenericClauseSelectionForm and GenericCovTermSelectionForm).
pc_formpattern.Code = The Unique ID of the form
pc_formpattern.CoverableType = Fully-qualified name of the Coverable entity type used to infer this form (used by GenericCoverableTypeKeyForm).
pc_formpattern.CoverableTypeKey = Code of the TypeKey value on CoverableTypeList used to infer this form (used by GenericCoverableTypeKeyForm).
pc_formpattern.CoverableTypeKeyExistsOnAll = Must the CoverableTypeKey value be selected on all instances of the coverable on this form's policy line? (used by GenericCoverableTypeKeyForm)
pc_formpattern.CoverableTypeList = Name of the TypeList field on CoverableType used to infer this form (used by GenericCoverableTypeKeyForm).
pc_formpattern.CreateTime = Timestamp when the object was created
pc_formpattern.CreateUser = User who created the object
pc_formpattern.Description = The human-readable name/description of the form
pc_formpattern.Edition = The edition of the form, as the string MM YY
pc_formpattern.EndorsementNumbered = True if the form is endorsement numbered
pc_formpattern.FormNumber = The number of the form, which is set in the FormNumber field of a Form inferred from this pattern
pc_formpattern.GenericInferenceClass = Fully-qualified name of generic form inference class, used if CustomFormInference system table has no entry for this form.
pc_formpattern.InferenceTime = Determines when data related to the form is gathered
pc_formpattern.InternalGroupCode = Unique code that groups a set of forms that, for jurisdictional replacement reasons, need to be processed together.
pc_formpattern.InternalReissueOnChange = Form is reissued when its contents change. If false, could either mean that it is a blanket notice that doesn't require changes or that any changes following the initial form issuance will happen via targeted endorsements.
pc_formpattern.InternalRemovalEndorsement = Form is a removal endorsement, generated for removals or replacements. Removal endorsements must be contract forms and are always processed last so that they can have access to the set of forms that will need to be removed.
pc_formpattern.PatternExistsOnAll = Must the product model pattern exist on all the instances of its parent that exist on the policy? (used by GenericClauseSelectionForm and GenericCovTermSelectionForm)
pc_formpattern.PolicyLinePatternCode = If this is a line-specific form, the Code of the associated PolicyLinePattern.
pc_formpattern.Priority = Determines processing order of form patterns
pc_formpattern.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpattern.RefCode = For customer integration purposes; unused by Guidewire
pc_formpattern.RemovalEndorsementFormNumber = The form number of the removal endorsement that handles this form's removal/replacement.
pc_formpattern.UpdateTime = Timestamp when the object was last updated
pc_formpattern.UpdateUser = User who last updated the object
pc_formpattern.UseInsteadOfCode = Code of another form pattern to be replaced (within the same group) during jurisdictional replacement.
pc_formpattern.FormPatternCoverableProperties = The properties of a coverable associated with this form pattern's selected clause pattern.
pc_formpattern.FormPatternCovTerms = Cov Term patterns associated with this form pattern's selected clause pattern.
pc_formpattern.FormPatternJobs = Jobs associated with this form pattern.
pc_formpattern.FormPatternProducts = Products associated with this form pattern.
pc_formpattern.Lookups = Availability lookups associated with this form pattern.

pc_formpatterncovterm = A covterm pattern associated with a form pattern.

pc_formpatterncovterm.ID = Internally managed primary key
pc_formpatterncovterm.CovTermPatternCode = The code of the covterm pattern associated with the form pattern's selected clause.
pc_formpatterncovterm.CreateTime = Timestamp when the object was created
pc_formpatterncovterm.CreateUser = User who created the object
pc_formpatterncovterm.FormPattern = The form pattern containing this form pattern covterm.
pc_formpatterncovterm.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpatterncovterm.UpdateTime = Timestamp when the object was last updated
pc_formpatterncovterm.UpdateUser = User who last updated the object
pc_formpatterncovterm.SelectedCovTermValues = The codes of selected covterm values for this form pattern covterm.

pc_formpatterncovtermvalue = A covterm value associated with a form pattern covterm.

pc_formpatterncovtermvalue.ID = Internally managed primary key
pc_formpatterncovtermvalue.Code = The code of the covterm value associated with the selected form pattern covterm.
pc_formpatterncovtermvalue.CreateTime = Timestamp when the object was created
pc_formpatterncovtermvalue.CreateUser = User who created the object
pc_formpatterncovtermvalue.FormPatternCovTerm = The form pattern covterm containing this covterm value.
pc_formpatterncovtermvalue.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpatterncovtermvalue.UpdateTime = Timestamp when the object was last updated
pc_formpatterncovtermvalue.UpdateUser = User who last updated the object

pc_formpatterncovprop = A property (datamodel field) of a coverable associated with a form pattern and its selected clause.

pc_formpatterncovprop.ID = Internally managed primary key
pc_formpatterncovprop.CreateTime = Timestamp when the object was created
pc_formpatterncovprop.CreateUser = User who created the object
pc_formpatterncovprop.DataType = The data type of the coverable's property.
pc_formpatterncovprop.FormPattern = The form pattern associated with this coverable property.
pc_formpatterncovprop.Name = The coverable's property name.
pc_formpatterncovprop.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpatterncovprop.UpdateTime = Timestamp when the object was last updated
pc_formpatterncovprop.UpdateUser = User who last updated the object

pc_formpatternjob = A job associated with a form pattern

pc_formpatternjob.ID = Internally managed primary key
pc_formpatternjob.CreateTime = Timestamp when the object was created
pc_formpatternjob.CreateUser = User who created the object
pc_formpatternjob.FormPattern = The form pattern containing this job
pc_formpatternjob.JobType = The job's type
pc_formpatternjob.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpatternjob.UpdateTime = Timestamp when the object was last updated
pc_formpatternjob.UpdateUser = User who last updated the object

pc_formpatternlookup = A lookup entity specifying conditions under which a particular form is attached to a policy.

pc_formpatternlookup.ID = Internally managed primary key
pc_formpatternlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the FormPattern whose availability is being computed
pc_formpatternlookup.CreateTime = Timestamp when the object was created
pc_formpatternlookup.CreateUser = User who created the object
pc_formpatternlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_formpatternlookup.FormPattern = The form pattern containing this lookup
pc_formpatternlookup.Jurisdiction = The jurisdiction for which this lookup applies, or null if the lookup is not restricted by jurisdiction
pc_formpatternlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpatternlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_formpatternlookup.UpdateTime = Timestamp when the object was last updated
pc_formpatternlookup.UpdateUser = User who last updated the object
pc_formpatternlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_formproduct = A product associated with a form pattern

pc_formproduct.ID = Internally managed primary key
pc_formproduct.CreateTime = Timestamp when the object was created
pc_formproduct.CreateUser = User who created the object
pc_formproduct.FormPattern = The form pattern containing this product
pc_formproduct.ProductCode = The product's code
pc_formproduct.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formproduct.UpdateTime = Timestamp when the object was last updated
pc_formproduct.UpdateUser = User who last updated the object

pc_formpat_dsc_l10n = null

pc_formpat_dsc_l10n.ID = Internally managed primary key
pc_formpat_dsc_l10n.Language = 
pc_formpat_dsc_l10n.Owner = 
pc_formpat_dsc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formpat_dsc_l10n.Value = 

pc_formtextdata = 
    The FormTextData table is used to store the XML contents of a Form.  The contents are stored separately from the
      Form itself for performance reasons:  both so it doesn't get copied with every new job and so that we don't load
      the text in unless we actually need it.  Note that
  

pc_formtextdata.ID = Internally managed primary key
pc_formtextdata.CreateTime = Timestamp when the object was created
pc_formtextdata.CreateUser = User who created the object
pc_formtextdata.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_formtextdata.TextData = Contents of the form, generally stored as XML.
pc_formtextdata.UpdateTime = Timestamp when the object was last updated
pc_formtextdata.UpdateUser = User who last updated the object

pc_glcededpremium = A GeneralLiability implementation of the RICededPremium delegate

pc_glcededpremium.ID = Internally managed primary key
pc_glcededpremium.CreateTime = Timestamp when the object was created
pc_glcededpremium.CreateUser = User who created the object
pc_glcededpremium.EffectiveDate = Effective date of this row.
pc_glcededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_glcededpremium.GLCost = 
pc_glcededpremium.PolicyTerm = The policy term to which this ceding applies
pc_glcededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glcededpremium.RiskDate = Effective date of the associated risk
pc_glcededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_glcededpremium.UpdateTime = Timestamp when the object was last updated
pc_glcededpremium.UpdateUser = User who last updated the object
pc_glcededpremium.CedingHistory = 
pc_glcededpremium.CedingTransactions = 

pc_glcededpremiumhistory = A GeneralLiability implementation of the RICededPremiumHistory delegate

pc_glcededpremiumhistory.ID = Internally managed primary key
pc_glcededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_glcededpremiumhistory.CreateTime = Timestamp when the object was created
pc_glcededpremiumhistory.CreateUser = User who created the object
pc_glcededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_glcededpremiumhistory.GLCededPremium = 
pc_glcededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glcededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_glcededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_glcededpremiumhistory.UpdateUser = User who last updated the object

pc_glcededpremiumtransaction = A GeneralLiability implementation of the RICededPremiumTransaction delegate

pc_glcededpremiumtransaction.ID = Internally managed primary key
pc_glcededpremiumtransaction.Agreement = The agreement being ceded to
pc_glcededpremiumtransaction.BasisGNP_amt = 
pc_glcededpremiumtransaction.BasisGNP_cur = 
pc_glcededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_glcededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_glcededpremiumtransaction.CededPremium_amt = 
pc_glcededpremiumtransaction.CededPremium_cur = 
pc_glcededpremiumtransaction.CededPremiumMarkup_amt = 
pc_glcededpremiumtransaction.CededPremiumMarkup_cur = 
pc_glcededpremiumtransaction.CededRiskAmount_amt = 
pc_glcededpremiumtransaction.CededRiskAmount_cur = 
pc_glcededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_glcededpremiumtransaction.Commission_amt = 
pc_glcededpremiumtransaction.Commission_cur = 
pc_glcededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_glcededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_glcededpremiumtransaction.CreateUser = User who created the object
pc_glcededpremiumtransaction.DatePosted = The date the transaction was created
pc_glcededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_glcededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_glcededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_glcededpremiumtransaction.GLCededPremium = 
pc_glcededpremiumtransaction.GLCededPremiumHistory = 
pc_glcededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_glcededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_glcededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_glcededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glcededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_glcededpremiumtransaction.UpdateUser = User who last updated the object

pc_glclasscode = General liability class codes.  Premium calculations are driven by class codes and both premium and losses are reported by class codes to rating bureaus.

pc_glclasscode.ID = Internally managed primary key
pc_glclasscode.Basis = Rating basis for this class code.
pc_glclasscode.Classification = The Classification of the code (essentially a short description)
pc_glclasscode.Code = The Class Code for a line of insurance
pc_glclasscode.CreateTime = Timestamp when the object was created
pc_glclasscode.CreateUser = User who created the object
pc_glclasscode.EffectiveDate = Effective date of this row.
pc_glclasscode.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_glclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glclasscode.UpdateTime = Timestamp when the object was last updated
pc_glclasscode.UpdateUser = User who last updated the object

pc_glclcode_class = null

pc_glclcode_class.ID = Internally managed primary key
pc_glclcode_class.Language = 
pc_glclcode_class.Owner = 
pc_glclcode_class.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glclcode_class.Value = 

pc_glcost = A GeneralLiability unit of price for a period of time that should not be broken up any further.

pc_glcost.ID = Internally managed primary key
pc_glcost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_glcost.ActualAmount_amt = 
pc_glcost.ActualAmount_cur = 
pc_glcost.ActualAmountBilling_amt = 
pc_glcost.ActualAmountBilling_cur = 
pc_glcost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_glcost.ActualTermAmount_amt = 
pc_glcost.ActualTermAmount_cur = 
pc_glcost.ActualTermAmountBilling_amt = 
pc_glcost.ActualTermAmountBilling_cur = 
pc_glcost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_glcost.BranchValue = Link to root of effdated tree
pc_glcost.ChangeType = Type of change made to this row
pc_glcost.ChargeGroup = Custom group name to group charges together
pc_glcost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_glcost.CreateTime = Timestamp when the object was created
pc_glcost.CreateUser = User who created the object
pc_glcost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_glcost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_glcost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_glcost.GeneralLiabilityLine = 
pc_glcost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_glcost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_glcost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_glcost.OverrideAmount_amt = 
pc_glcost.OverrideAmount_cur = 
pc_glcost.OverrideAmountBilling_amt = 
pc_glcost.OverrideAmountBilling_cur = 
pc_glcost.OverrideBaseRate = The user-specified override for the base rate.
pc_glcost.OverrideReason = Why the override is being applied.
pc_glcost.OverrideSource = Source of override, or null if none
pc_glcost.OverrideTermAmount_amt = 
pc_glcost.OverrideTermAmount_cur = 
pc_glcost.OverrideTermAmountBilling_amt = 
pc_glcost.OverrideTermAmountBilling_cur = 
pc_glcost.PolicyFXRate = 
pc_glcost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_glcost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glcost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_glcost.RateBook = 
pc_glcost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_glcost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_glcost.SplitType = The liability limit split type associated with this cost
pc_glcost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_glcost.StandardAmount_amt = 
pc_glcost.StandardAmount_cur = 
pc_glcost.StandardAmountBilling_amt = 
pc_glcost.StandardAmountBilling_cur = 
pc_glcost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_glcost.StandardTermAmount_amt = 
pc_glcost.StandardTermAmount_cur = 
pc_glcost.StandardTermAmountBilling_amt = 
pc_glcost.StandardTermAmountBilling_cur = 
pc_glcost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_glcost.Subline = The subline associated with this cost
pc_glcost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_glcost.UpdateTime = Timestamp when the object was last updated
pc_glcost.UpdateUser = User who last updated the object
pc_glcost.AdditionalInsured = 
pc_glcost.GeneralLiabilityCov = 
pc_glcost.GLExposure = 
pc_glcost.GLState = The jurisdiction that is covered
pc_glcost.StateCostType = The name of the specific cost

pc_glexposure = An exposure that can be covered.

pc_glexposure.ID = Internally managed primary key
pc_glexposure.AuditedBasis = The basis amount deteremined by an auditor.
pc_glexposure.BranchValue = Link to root of effdated tree
pc_glexposure.ChangeType = Type of change made to this row
pc_glexposure.CreateTime = Timestamp when the object was created
pc_glexposure.CreateUser = User who created the object
pc_glexposure.Description = Description of exposure
pc_glexposure.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_glexposure.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_glexposure.FixedBasisAmount = Basis amount of exposure if it's not a scalable amount
pc_glexposure.GLLine = 
pc_glexposure.Location = Location of exposure
pc_glexposure.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glexposure.ScalableBasisAmount = Basis amount of exposure if it's a scalable amount
pc_glexposure.UpdateTime = Timestamp when the object was last updated
pc_glexposure.UpdateUser = User who last updated the object
pc_glexposure.Costs = 

pc_gllineschcovitemcov = GL Line level coverage scheduled item with coverage terms

pc_gllineschcovitemcov.ID = Internally managed primary key
pc_gllineschcovitemcov.BranchValue = Link to root of effdated tree
pc_gllineschcovitemcov.ChangeType = Type of change made to this row
pc_gllineschcovitemcov.CreateTime = Timestamp when the object was created
pc_gllineschcovitemcov.CreateUser = User who created the object
pc_gllineschcovitemcov.Currency = Currency associated with the coverage
pc_gllineschcovitemcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllineschcovitemcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllineschcovitemcov.GLLineScheduleCovItem = 
pc_gllineschcovitemcov.PatternCode = The pattern defining what kind of Coverage this is
pc_gllineschcovitemcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllineschcovitemcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_gllineschcovitemcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllineschcovitemcov.UpdateTime = Timestamp when the object was last updated
pc_gllineschcovitemcov.UpdateUser = User who last updated the object

pc_gllineschedconditem = GL Line level Condition scheduled item

pc_gllineschedconditem.ID = Internally managed primary key
pc_gllineschedconditem.BranchValue = Link to root of effdated tree
pc_gllineschedconditem.ChangeType = Type of change made to this row
pc_gllineschedconditem.CreateTime = Timestamp when the object was created
pc_gllineschedconditem.CreateUser = User who created the object
pc_gllineschedconditem.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllineschedconditem.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllineschedconditem.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_gllineschedconditem.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_gllineschedconditem.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_gllineschedconditem.NamedInsured = NamedInsured
pc_gllineschedconditem.PolicyLocation = Policy Location
pc_gllineschedconditem.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_gllineschedconditem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllineschedconditem.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_gllineschedconditem.Schedule = 
pc_gllineschedconditem.ScheduleNumber = Schedule number
pc_gllineschedconditem.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllineschedconditem.UpdateTime = Timestamp when the object was last updated
pc_gllineschedconditem.UpdateUser = User who last updated the object

pc_gllineschedcovitem = GL Line level coverage scheduled item

pc_gllineschedcovitem.ID = Internally managed primary key
pc_gllineschedcovitem.BranchValue = Link to root of effdated tree
pc_gllineschedcovitem.ChangeType = Type of change made to this row
pc_gllineschedcovitem.CreateTime = Timestamp when the object was created
pc_gllineschedcovitem.CreateUser = User who created the object
pc_gllineschedcovitem.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllineschedcovitem.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllineschedcovitem.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_gllineschedcovitem.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_gllineschedcovitem.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_gllineschedcovitem.NamedInsured = NamedInsured
pc_gllineschedcovitem.PolicyLocation = Policy Location
pc_gllineschedcovitem.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_gllineschedcovitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllineschedcovitem.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_gllineschedcovitem.Schedule = 
pc_gllineschedcovitem.ScheduleNumber = Schedule number
pc_gllineschedcovitem.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllineschedcovitem.UpdateTime = Timestamp when the object was last updated
pc_gllineschedcovitem.UpdateUser = User who last updated the object

pc_gllineschedexclitem = GL Line level exclusion scheduled item

pc_gllineschedexclitem.ID = Internally managed primary key
pc_gllineschedexclitem.BranchValue = Link to root of effdated tree
pc_gllineschedexclitem.ChangeType = Type of change made to this row
pc_gllineschedexclitem.CreateTime = Timestamp when the object was created
pc_gllineschedexclitem.CreateUser = User who created the object
pc_gllineschedexclitem.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllineschedexclitem.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllineschedexclitem.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_gllineschedexclitem.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_gllineschedexclitem.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_gllineschedexclitem.NamedInsured = NamedInsured
pc_gllineschedexclitem.PolicyLocation = Policy Location
pc_gllineschedexclitem.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_gllineschedexclitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllineschedexclitem.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_gllineschedexclitem.Schedule = 
pc_gllineschedexclitem.ScheduleNumber = Schedule number
pc_gllineschedexclitem.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllineschedexclitem.UpdateTime = Timestamp when the object was last updated
pc_gllineschedexclitem.UpdateUser = User who last updated the object

pc_glmodifier = A line-level modifier for General Liability

pc_glmodifier.ID = Internally managed primary key
pc_glmodifier.BooleanModifier = Boolean modifier
pc_glmodifier.BranchValue = Link to root of effdated tree
pc_glmodifier.ChangeType = Type of change made to this row
pc_glmodifier.CreateTime = Timestamp when the object was created
pc_glmodifier.CreateUser = User who created the object
pc_glmodifier.DateModifier = Date modifier
pc_glmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_glmodifier.Eligible = Whether this modifier is eligible or not
pc_glmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_glmodifier.GLLine = 
pc_glmodifier.Justification = Additional comment to justify the value of this modifier
pc_glmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_glmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_glmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_glmodifier.State = The state to attach rating information to.
pc_glmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_glmodifier.TypeKeyModifier = Typekey modifier
pc_glmodifier.UpdateTime = Timestamp when the object was last updated
pc_glmodifier.UpdateUser = User who last updated the object
pc_glmodifier.ValueFinal = Whether this modifier's value is final or not
pc_glmodifier.GLRateFactors = Individual components of the rating factor

pc_glratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_glratefactor.ID = Internally managed primary key
pc_glratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_glratefactor.BranchValue = Link to root of effdated tree
pc_glratefactor.ChangeType = Type of change made to this row
pc_glratefactor.CreateTime = Timestamp when the object was created
pc_glratefactor.CreateUser = User who created the object
pc_glratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_glratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_glratefactor.GLModifier = 
pc_glratefactor.Justification = Additional comment to justify this rate factor
pc_glratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_glratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glratefactor.UpdateTime = Timestamp when the object was last updated
pc_glratefactor.UpdateUser = User who last updated the object

pc_gltransaction = A transaction for the General Liability line

pc_gltransaction.ID = Internally managed primary key
pc_gltransaction.Amount_amt = 
pc_gltransaction.Amount_cur = 
pc_gltransaction.AmountBilling_amt = 
pc_gltransaction.AmountBilling_cur = 
pc_gltransaction.BranchValue = Link to root of effdated tree
pc_gltransaction.ChangeType = Type of change made to this row
pc_gltransaction.Charged = Whether or not this transaction amount should be charged.
pc_gltransaction.CreateTime = Timestamp when the object was created
pc_gltransaction.CreateUser = User who created the object
pc_gltransaction.EffDate = The date on which the transaction becomes effective.
pc_gltransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gltransaction.ExpDate = The date on which the transaction expires.
pc_gltransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gltransaction.GLCost = The cost this transaction modifies.
pc_gltransaction.PolicyFXRate = 
pc_gltransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_gltransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gltransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_gltransaction.UpdateTime = Timestamp when the object was last updated
pc_gltransaction.UpdateUser = User who last updated the object
pc_gltransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_gltransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_gllinecond = A line-level condition for General Liability

pc_gllinecond.ID = Internally managed primary key
pc_gllinecond.BranchValue = Link to root of effdated tree
pc_gllinecond.ChangeType = Type of change made to this row
pc_gllinecond.CreateTime = Timestamp when the object was created
pc_gllinecond.CreateUser = User who created the object
pc_gllinecond.Currency = Currency associated with the policy condition
pc_gllinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllinecond.GLLine = 
pc_gllinecond.PatternCode = The pattern defining what kind of Condition this is
pc_gllinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_gllinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllinecond.UpdateTime = Timestamp when the object was last updated
pc_gllinecond.UpdateUser = User who last updated the object
pc_gllinecond.GLLineScheduledItems = Scheduled Items
pc_gllinecond.ScheduleAutoNumberSeq = Sequence to autonumber schedule items

pc_glcov = A line-level coverage for General Liability

pc_glcov.ID = Internally managed primary key
pc_glcov.BranchValue = Link to root of effdated tree
pc_glcov.ChangeType = Type of change made to this row
pc_glcov.CreateTime = Timestamp when the object was created
pc_glcov.CreateUser = User who created the object
pc_glcov.Currency = Currency associated with the coverage
pc_glcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_glcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_glcov.GLLine = 
pc_glcov.PatternCode = The pattern defining what kind of Coverage this is
pc_glcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_glcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_glcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_glcov.UpdateTime = Timestamp when the object was last updated
pc_glcov.UpdateUser = User who last updated the object
pc_glcov.Costs = 
pc_glcov.GLLineScheduledItems = Scheduled Items
pc_glcov.ScheduleAutoNumberSeq = Sequence to autonumber schedule items

pc_gllineexcl = A line-level exclusion for General Liability

pc_gllineexcl.ID = Internally managed primary key
pc_gllineexcl.BranchValue = Link to root of effdated tree
pc_gllineexcl.ChangeType = Type of change made to this row
pc_gllineexcl.CreateTime = Timestamp when the object was created
pc_gllineexcl.CreateUser = User who created the object
pc_gllineexcl.Currency = Currency associated with the Exclusion
pc_gllineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_gllineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_gllineexcl.GLLine = 
pc_gllineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_gllineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_gllineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_gllineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_gllineexcl.UpdateTime = Timestamp when the object was last updated
pc_gllineexcl.UpdateUser = User who last updated the object
pc_gllineexcl.GLLineScheduledItems = Scheduled Items
pc_gllineexcl.ScheduleAutoNumberSeq = Sequence to autonumber schedule items

pc_genericgroupcolumndatadist = Stores column names for the generic value-group data distribution.

pc_genericgroupcolumndatadist.ID = Internally managed primary key
pc_genericgroupcolumndatadist.ColumnName = Name of column.
pc_genericgroupcolumndatadist.GenericGroupDataDist = GenericGroupDataDist for this object.
pc_genericgroupcolumndatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_genericgroupcountdatadist = Stores value=group size and the number of groups of that size for the generic group data distribution.

pc_genericgroupcountdatadist.ID = Internally managed primary key
pc_genericgroupcountdatadist.GenericGroupDataDist = GenericGroupDataDist for this object.
pc_genericgroupcountdatadist.GroupSize = Size of the group of duplicate values on this this column group and table.
pc_genericgroupcountdatadist.GroupSizeCount = Number of groups for this size for this table.
pc_genericgroupcountdatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_genericgroupdatadist = Stores the distribution of value-group sizes for generic column data.

pc_genericgroupdatadist.ID = Internally managed primary key
pc_genericgroupdatadist.Description = Description.
pc_genericgroupdatadist.ExtendedDescription = Extended description.
pc_genericgroupdatadist.OptionalPredicate = Optional predicate.
pc_genericgroupdatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_genericgroupdatadist.TableDataDist = TableDataDist for this object.
pc_genericgroupdatadist.GenericGroupColumnNameDataDists = Collection of GenericGroupColumnNameDataDists linked to this ArrayDataDist.
pc_genericgroupdatadist.GenericGroupCountDataDists = Collection of GenericGroupCountDataDists linked to this ArrayDataDist.

pc_geocodeworkitem = Queue of Addresses to be geocoded. Work items are recorded as the ID value of Address entities. This is a system-internal entity.
    

pc_geocodeworkitem.ID = Internally managed primary key
pc_geocodeworkitem.Address = Address to be geocoded.
pc_geocodeworkitem.Attempts = 
pc_geocodeworkitem.CheckedOutBy = 
pc_geocodeworkitem.CreationTime = 
pc_geocodeworkitem.Exception = Stack trace of the exception
pc_geocodeworkitem.LastUpdateTime = 
pc_geocodeworkitem.Priority = 
pc_geocodeworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_geocodeworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_geocodeworkitem.Status = Status of this workitem.

pc_group = Groups and related attributes. Attributes include security and visibility zones, parent group, group type and name, branch code (if applicable) and supervisor.

pc_group.ID = Internally managed primary key
pc_group.BranchCode = The code that identifies an internal carrier group as a branch.
pc_group.CreateTime = Timestamp when the object was created
pc_group.CreateUser = User who created the object
pc_group.Description = A description for this group.
pc_group.GroupType = Type of group (describes its function).
pc_group.LoadFactor = Percentage value of normal workload to be given to this group. This is used for round-robin assignment.
pc_group.Name = The group name; this must be unique.
pc_group.NameKanji = The group name in Kanji. Used only for Japanese and will be null otherwise.
pc_group.Organization = The Organization that this group belongs to.
pc_group.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_group.SecurityZone = Security zone to which the group belongs.
pc_group.Supervisor = Supervisor of the group.
pc_group.UpdateTime = Timestamp when the object was last updated
pc_group.UpdateUser = User who last updated the object
pc_group.ValidationLevel = Validation level that this object passed (if any) before it was stored.
pc_group.WorldVisible = If true, this group is visible to all users, regardless of what groups they belong to.
pc_group.AssignableQueues = Assignment queues associated with this group.
pc_group.GroupProducerCodes = Available producer codes to a group.
pc_group.Regions = Regions associated with this group.
pc_group.Users = Users belonging to this group.

pc_group_assign = Information includes what user/group was last assigned work, user/group job loads and user/group review loads

pc_group_assign.ID = Internally managed primary key
pc_group_assign.AccountLoad = The current load of the group for accounts.
pc_group_assign.ActivityLoad = The current load of the group for activities.
pc_group_assign.CreateTime = Timestamp when the object was created
pc_group_assign.CreateUser = User who created the object
pc_group_assign.Group = The group this state is tracking.
pc_group_assign.GroupType = The group type this state is tracking.
pc_group_assign.IncludeSubGroups = Is this assignment state for just this group, or does it include the sub groups as well.
pc_group_assign.JobLoad = The current load of the group for jobs.
pc_group_assign.LastAccountGrp = The id of the last group that was assigned an account
pc_group_assign.LastAccountUser = The id of the last user that was assigned an account.
pc_group_assign.LastActivityGrp = The id of the last group that was assigned an activity.
pc_group_assign.LastActivityUser = The id of the last user that was assigned an activity.
pc_group_assign.LastJobGrp = The id of the last group that was assigned a job.
pc_group_assign.LastJobUser = The id of the last user that was assigned a job.
pc_group_assign.LastPolicyGrp = The id of the last group that was assigned a policy for pre-renewal
pc_group_assign.LastPolicyUser = The id of the last user that was assigned a policy for pre-renewal
pc_group_assign.LastReviewGrp = The id of the last group that was assigned an assignment review activity.
pc_group_assign.LastReviewUser = The id of the last user that was assigned an assignment review activity.
pc_group_assign.PolicyLoad = The current load of the group for policies.
pc_group_assign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_group_assign.ReviewLoad = The current load of the group for assignment review activities.
pc_group_assign.UpdateTime = Timestamp when the object was last updated
pc_group_assign.UpdateUser = User who last updated the object
pc_group_assign.Users = Users belonging to this group.

pc_groupproducercode = The external group to producer code availability relationship.

pc_groupproducercode.ID = Internally managed primary key
pc_groupproducercode.Group = The associated Group.
pc_groupproducercode.ProducerCode = The ProducerCode.
pc_groupproducercode.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_groupregion = Joins a group to one or more regions.

pc_groupregion.ID = Internally managed primary key
pc_groupregion.Group = Associated group.
pc_groupregion.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_groupregion.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_groupregion.Region = Associated region.

pc_groupuser = 
        Links a user to a group. The GroupUser entity also stores data used by the system when making assignments by
        workload. The system creates this object each time a user is added to a group.
        
    

pc_groupuser.ID = Internally managed primary key
pc_groupuser.Group = The associated group.
pc_groupuser.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_groupuser.LoadFactor = Percentage value of normal workload to be given to this user in this group. This is used for round-robin assignment.
pc_groupuser.LoadFactorType = Type of load factor privileges the user has.
pc_groupuser.Manager = Flag indicating whether the user has permission to see activity within the group.
pc_groupuser.Member = Flag indicating whether the user is a working member of the group (for purposes of work assignment, for example), as opposed to simply being associated with the group as a manager or other auxiliary person.
pc_groupuser.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_groupuser.TextField1 = General-purpose text field.
pc_groupuser.TextField2 = General-purpose text field.
pc_groupuser.TextField3 = General-purpose text field.
pc_groupuser.User = The associated user.

pc_groupuser_assign = Links users and managers to groups. Identifies ability of a user/manager to set or view assignment load factors for others. Stores user assignment load values.

pc_groupuser_assign.ID = Internally managed primary key
pc_groupuser_assign.AccountLoad = The current load of the user for accounts.
pc_groupuser_assign.ActivityLoad = The current load of the user for activities.
pc_groupuser_assign.Group = The associated group.   This property is deprecated for its misleading name, please use GroupAssignmentState property
pc_groupuser_assign.JobLoad = The current load of the user for jobs.
pc_groupuser_assign.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_groupuser_assign.PolicyLoad = The current load of the user for policies.
pc_groupuser_assign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_groupuser_assign.ReviewLoad = The current load of the user for assignment review activities.
pc_groupuser_assign.User = The associated user.

pc_group_desc_i18n = null

pc_group_desc_i18n.ID = Internally managed primary key
pc_group_desc_i18n.Language = 
pc_group_desc_i18n.Owner = 
pc_group_desc_i18n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_group_desc_i18n.Value = 

pc_group_name_l10n = null

pc_group_name_l10n.ID = Internally managed primary key
pc_group_name_l10n.Language = 
pc_group_name_l10n.Owner = 
pc_group_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_group_name_l10n.Value = 

pc_history = Events in the claim or exposure audit trail.

pc_history.ID = Internally managed primary key
pc_history.Account = Account associated to the history entry
pc_history.CustomType = Customer-defined history event type. This is used to support rules that execute only once per claim.
pc_history.Description = Description of the history event.
pc_history.EventTimestamp = Timestamp when the event occurred.
pc_history.Job = Job (if any) that generated the history entry
pc_history.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_history.NewValue = New value of an attribute whose change is captured by this history event.
pc_history.OriginalValue = Original value of an attribute whose change is captured by this history event.
pc_history.Policy = Policy (if any) associated to the history entry.
pc_history.PolicyPeriod = Policy period (if any) that generated the history entry
pc_history.PolicyTerm = Policy term (if any) associated to the history entry.
pc_history.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_history.RuleUID = The unique id of the rule that caused this history event to be created. Optional.
pc_history.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_history.Type = Type of claim or exposure event.
pc_history.User = User who created this history event. Optional.

pc_holiday = List of holidays.

pc_holiday.ID = Internally managed primary key
pc_holiday.AppliesToAllZones = True if this holiday applies to all zones (in which case HolidayZones should be empty). If false and HolidayZones has elements, this holiday applies to those zones.  If false and HolidayZones is empty, this holiday doesn't apply anywhere.
pc_holiday.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_holiday.Name = The name of a holiday in the business calendar.
pc_holiday.OccurrenceDate = The date of a holiday in the business calendar.
pc_holiday.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_holiday.HolidayTags = The tags that observe this holiday.
pc_holiday.HolidayZones = The zones that observe this holiday.

pc_holiday_tag = A tag that observes a certain holiday.

pc_holiday_tag.ID = Internally managed primary key
pc_holiday_tag.Holiday = The holiday.
pc_holiday_tag.HolidayTagCode = The code for this holiday tag.
pc_holiday_tag.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_holiday_tag.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_holiday_zone = A zone that observes a certain holiday.

pc_holiday_zone.ID = Internally managed primary key
pc_holiday_zone.Code = The code for this zone, this is the value that should be used for zone lookups.
pc_holiday_zone.Country = Country of this holiday zone.
pc_holiday_zone.Holiday = The holiday.
pc_holiday_zone.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_holiday_zone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_holiday_zone.ZoneType = Type of this holiday zone.

pc_holiday_nam_l10n = null

pc_holiday_nam_l10n.ID = Internally managed primary key
pc_holiday_nam_l10n.Language = 
pc_holiday_nam_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_holiday_nam_l10n.Owner = 
pc_holiday_nam_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_holiday_nam_l10n.Value = 

pc_houranalysisdatadist = Stores hour analysis data distribution.

pc_houranalysisdatadist.ID = Internally managed primary key
pc_houranalysisdatadist.AvgRowsPerHour = Average number of rows per hour.
pc_houranalysisdatadist.DatetimeColumnName = Name of datetime column.
pc_houranalysisdatadist.MaxRowsPerHour = Maximum number of rows per hour.
pc_houranalysisdatadist.MinRowsPerHour = Minimum number of rows per hour.
pc_houranalysisdatadist.mnth = Month
pc_houranalysisdatadist.NumDistinctDates = Number of distinct hours in month.
pc_houranalysisdatadist.NumDistinctHoursInDay = Number of distinct hours in day.
pc_houranalysisdatadist.NumNonNullNonLoadableDates = Number of non-null, non-loadable rows.
pc_houranalysisdatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_houranalysisdatadist.TableDataDist = TableDataDist for this object.
pc_houranalysisdatadist.yr = Year

pc_imaccountsreccov = An Accounts-Receivable item-level coverage for Inland Marine

pc_imaccountsreccov.ID = Internally managed primary key
pc_imaccountsreccov.BranchValue = Link to root of effdated tree
pc_imaccountsreccov.ChangeType = Type of change made to this row
pc_imaccountsreccov.CreateTime = Timestamp when the object was created
pc_imaccountsreccov.CreateUser = User who created the object
pc_imaccountsreccov.Currency = Currency associated with the coverage
pc_imaccountsreccov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imaccountsreccov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imaccountsreccov.IMAccountsReceivable = 
pc_imaccountsreccov.PatternCode = The pattern defining what kind of Coverage this is
pc_imaccountsreccov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imaccountsreccov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imaccountsreccov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imaccountsreccov.UpdateTime = Timestamp when the object was last updated
pc_imaccountsreccov.UpdateUser = User who last updated the object
pc_imaccountsreccov.Costs = 

pc_imaccountsreccond = An Accounts Receivable part-level condition for Inland Marine

pc_imaccountsreccond.ID = Internally managed primary key
pc_imaccountsreccond.BranchValue = Link to root of effdated tree
pc_imaccountsreccond.ChangeType = Type of change made to this row
pc_imaccountsreccond.CreateTime = Timestamp when the object was created
pc_imaccountsreccond.CreateUser = User who created the object
pc_imaccountsreccond.Currency = Currency associated with the policy condition
pc_imaccountsreccond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imaccountsreccond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imaccountsreccond.IMAccountsRecPart = 
pc_imaccountsreccond.PatternCode = The pattern defining what kind of Condition this is
pc_imaccountsreccond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imaccountsreccond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imaccountsreccond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imaccountsreccond.UpdateTime = Timestamp when the object was last updated
pc_imaccountsreccond.UpdateUser = User who last updated the object

pc_accountsrecpartcov = An Accounts Receivable part-level coverage for Inland Marine

pc_accountsrecpartcov.ID = Internally managed primary key
pc_accountsrecpartcov.BranchValue = Link to root of effdated tree
pc_accountsrecpartcov.ChangeType = Type of change made to this row
pc_accountsrecpartcov.CreateTime = Timestamp when the object was created
pc_accountsrecpartcov.CreateUser = User who created the object
pc_accountsrecpartcov.Currency = Currency associated with the coverage
pc_accountsrecpartcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_accountsrecpartcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_accountsrecpartcov.IMAccountsRecPart = 
pc_accountsrecpartcov.PatternCode = The pattern defining what kind of Coverage this is
pc_accountsrecpartcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_accountsrecpartcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_accountsrecpartcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_accountsrecpartcov.UpdateTime = Timestamp when the object was last updated
pc_accountsrecpartcov.UpdateUser = User who last updated the object
pc_accountsrecpartcov.Costs = 

pc_imaccountsrecpartexcl = An Accounts Receivable part-level exclusion for Inland Marine

pc_imaccountsrecpartexcl.ID = Internally managed primary key
pc_imaccountsrecpartexcl.BranchValue = Link to root of effdated tree
pc_imaccountsrecpartexcl.ChangeType = Type of change made to this row
pc_imaccountsrecpartexcl.CreateTime = Timestamp when the object was created
pc_imaccountsrecpartexcl.CreateUser = User who created the object
pc_imaccountsrecpartexcl.Currency = Currency associated with the Exclusion
pc_imaccountsrecpartexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imaccountsrecpartexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imaccountsrecpartexcl.IMAccountsRecPart = 
pc_imaccountsrecpartexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_imaccountsrecpartexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imaccountsrecpartexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imaccountsrecpartexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imaccountsrecpartexcl.UpdateTime = Timestamp when the object was last updated
pc_imaccountsrecpartexcl.UpdateUser = User who last updated the object

pc_imaccountsrec = Inland Marine Accounts Receivable

pc_imaccountsrec.ID = Internally managed primary key
pc_imaccountsrec.AccountsRecNumber = Accounts Receivable number
pc_imaccountsrec.BranchValue = Link to root of effdated tree
pc_imaccountsrec.ChangeType = Type of change made to this row
pc_imaccountsrec.CreateTime = Timestamp when the object was created
pc_imaccountsrec.CreateUser = User who created the object
pc_imaccountsrec.Description = Description of Accounts Receivable.
pc_imaccountsrec.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imaccountsrec.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imaccountsrec.ForwardToHomeOffice = forward to home office
pc_imaccountsrec.IMAccountsRecPart = 
pc_imaccountsrec.IMBuilding = link to the building
pc_imaccountsrec.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_imaccountsrec.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_imaccountsrec.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_imaccountsrec.PercentDuplicated = Percent Duplicated
pc_imaccountsrec.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_imaccountsrec.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imaccountsrec.ReceptacleType = Receptacle Type
pc_imaccountsrec.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_imaccountsrec.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imaccountsrec.UpdateTime = Timestamp when the object was last updated
pc_imaccountsrec.UpdateUser = User who last updated the object
pc_imaccountsrec.Coverages = All coverages that apply directly to this accounts receivable.

pc_imbuilding = IM Building

pc_imbuilding.ID = Internally managed primary key
pc_imbuilding.BranchValue = Link to root of effdated tree
pc_imbuilding.Building = 
pc_imbuilding.ChangeType = Type of change made to this row
pc_imbuilding.CreateTime = Timestamp when the object was created
pc_imbuilding.CreateUser = User who created the object
pc_imbuilding.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imbuilding.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imbuilding.IMLocation = 
pc_imbuilding.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imbuilding.UpdateTime = Timestamp when the object was last updated
pc_imbuilding.UpdateUser = User who last updated the object

pc_imcededpremium = An InlandMarine implementation of the RICededPremium delegate

pc_imcededpremium.ID = Internally managed primary key
pc_imcededpremium.CreateTime = Timestamp when the object was created
pc_imcededpremium.CreateUser = User who created the object
pc_imcededpremium.EffectiveDate = Effective date of this row.
pc_imcededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_imcededpremium.IMCost = 
pc_imcededpremium.PolicyTerm = The policy term to which this ceding applies
pc_imcededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcededpremium.RiskDate = Effective date of the associated risk
pc_imcededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_imcededpremium.UpdateTime = Timestamp when the object was last updated
pc_imcededpremium.UpdateUser = User who last updated the object
pc_imcededpremium.CedingHistory = 
pc_imcededpremium.CedingTransactions = 

pc_imcededpremiumhistory = An InlandMarine implementation of the RICededPremiumHistory delegate

pc_imcededpremiumhistory.ID = Internally managed primary key
pc_imcededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_imcededpremiumhistory.CreateTime = Timestamp when the object was created
pc_imcededpremiumhistory.CreateUser = User who created the object
pc_imcededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_imcededpremiumhistory.IMCededPremium = 
pc_imcededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_imcededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_imcededpremiumhistory.UpdateUser = User who last updated the object

pc_imcededpremiumtransaction = An InlandMarine implementation of the RICededPremiumTransaction delegate

pc_imcededpremiumtransaction.ID = Internally managed primary key
pc_imcededpremiumtransaction.Agreement = The agreement being ceded to
pc_imcededpremiumtransaction.BasisGNP_amt = 
pc_imcededpremiumtransaction.BasisGNP_cur = 
pc_imcededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_imcededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_imcededpremiumtransaction.CededPremium_amt = 
pc_imcededpremiumtransaction.CededPremium_cur = 
pc_imcededpremiumtransaction.CededPremiumMarkup_amt = 
pc_imcededpremiumtransaction.CededPremiumMarkup_cur = 
pc_imcededpremiumtransaction.CededRiskAmount_amt = 
pc_imcededpremiumtransaction.CededRiskAmount_cur = 
pc_imcededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_imcededpremiumtransaction.Commission_amt = 
pc_imcededpremiumtransaction.Commission_cur = 
pc_imcededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_imcededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_imcededpremiumtransaction.CreateUser = User who created the object
pc_imcededpremiumtransaction.DatePosted = The date the transaction was created
pc_imcededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_imcededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_imcededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_imcededpremiumtransaction.IMCededPremium = 
pc_imcededpremiumtransaction.IMCededPremiumHistory = 
pc_imcededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_imcededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_imcededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_imcededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_imcededpremiumtransaction.UpdateUser = User who last updated the object

pc_imcost = A Inland Marine unit of price for a period of time that should not be broken up any further.

pc_imcost.ID = Internally managed primary key
pc_imcost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_imcost.ActualAmount_amt = 
pc_imcost.ActualAmount_cur = 
pc_imcost.ActualAmountBilling_amt = 
pc_imcost.ActualAmountBilling_cur = 
pc_imcost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_imcost.ActualTermAmount_amt = 
pc_imcost.ActualTermAmount_cur = 
pc_imcost.ActualTermAmountBilling_amt = 
pc_imcost.ActualTermAmountBilling_cur = 
pc_imcost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_imcost.BranchValue = Link to root of effdated tree
pc_imcost.ChangeType = Type of change made to this row
pc_imcost.ChargeGroup = Custom group name to group charges together
pc_imcost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_imcost.CreateTime = Timestamp when the object was created
pc_imcost.CreateUser = User who created the object
pc_imcost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imcost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imcost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_imcost.InlandMarineLine = 
pc_imcost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_imcost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_imcost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_imcost.OverrideAmount_amt = 
pc_imcost.OverrideAmount_cur = 
pc_imcost.OverrideAmountBilling_amt = 
pc_imcost.OverrideAmountBilling_cur = 
pc_imcost.OverrideBaseRate = The user-specified override for the base rate.
pc_imcost.OverrideReason = Why the override is being applied.
pc_imcost.OverrideSource = Source of override, or null if none
pc_imcost.OverrideTermAmount_amt = 
pc_imcost.OverrideTermAmount_cur = 
pc_imcost.OverrideTermAmountBilling_amt = 
pc_imcost.OverrideTermAmountBilling_cur = 
pc_imcost.PolicyFXRate = 
pc_imcost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_imcost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_imcost.RateBook = 
pc_imcost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_imcost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_imcost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_imcost.StandardAmount_amt = 
pc_imcost.StandardAmount_cur = 
pc_imcost.StandardAmountBilling_amt = 
pc_imcost.StandardAmountBilling_cur = 
pc_imcost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_imcost.StandardTermAmount_amt = 
pc_imcost.StandardTermAmount_cur = 
pc_imcost.StandardTermAmountBilling_amt = 
pc_imcost.StandardTermAmountBilling_cur = 
pc_imcost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_imcost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imcost.UpdateTime = Timestamp when the object was last updated
pc_imcost.UpdateUser = User who last updated the object
pc_imcost.ContractorsEquipCov = 
pc_imcost.ContractorsEquipPart = 
pc_imcost.ContrEquipPartCov = 
pc_imcost.IMAccountsRecCov = 
pc_imcost.IMAccountsRecPart = 
pc_imcost.IMAccountsRecPartCov = 
pc_imcost.IMSignCov = 
pc_imcost.IMSignPart = 

pc_imcoveragepart = Inland Marine Coverage Part

pc_imcoveragepart.ID = Internally managed primary key
pc_imcoveragepart.BranchValue = Link to root of effdated tree
pc_imcoveragepart.ChangeType = Type of change made to this row
pc_imcoveragepart.CreateTime = Timestamp when the object was created
pc_imcoveragepart.CreateUser = User who created the object
pc_imcoveragepart.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imcoveragepart.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imcoveragepart.InlandMarineLine = 
pc_imcoveragepart.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imcoveragepart.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imcoveragepart.UpdateTime = Timestamp when the object was last updated
pc_imcoveragepart.UpdateUser = User who last updated the object
pc_imcoveragepart.Coinsurance = 
pc_imcoveragepart.ContractorsEquipments = List of Covered Contractors equipment on this Coverage Part.
pc_imcoveragepart.ContractorType = 
pc_imcoveragepart.ContrEqPartAutoNumberSeq = Sequence to autonumber contractors eqiupment part
pc_imcoveragepart.ContrEquipPartConditions = Line-level conditions for Contractors Equipment Coverage Part of Inland Marine.
pc_imcoveragepart.ContrEquipPartCosts = Costs for the part
pc_imcoveragepart.ContrEquipPartCovs = Coverages for Contractors Equipment Coverage Part of Inland Marine.
pc_imcoveragepart.ContrEquipPartExclusions = Line-level exclusions for Contractors Equipment Coverage Part of Inland Marine.
pc_imcoveragepart.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_imcoveragepart.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_imcoveragepart.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_imcoveragepart.PerOccurrenceLimit = The per-occurrence limit
pc_imcoveragepart.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_imcoveragepart.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_imcoveragepart.Reporting = Reporting
pc_imcoveragepart.ARAutoNumberSeq = Sequence to autonumber IMAccountReceivables
pc_imcoveragepart.BusinessClass = 
pc_imcoveragepart.Coinsurance = Coinsurance percentage values
pc_imcoveragepart.Description = Description of Accounts Receivable.
pc_imcoveragepart.IMAccountsReceivables = List of Accounts Receivable on this Coverage Part.
pc_imcoveragepart.IMAccountsRecPartConditions = Line-level conditions for Accounts Receivable Coverage Part of Inland Marine.
pc_imcoveragepart.IMAccountsRecPartCosts = 
pc_imcoveragepart.IMAccountsRecPartCovs = Line-level coverages for Accounts Receivable Coverage Part of Inland Marine.
pc_imcoveragepart.IMAccountsRecPartExclusions = Line-level exclusions for Accounts Receivable Coverage Part of Inland Marine.
pc_imcoveragepart.IMExcludedAccounts = List of Excluded Accounts on this Coverage Part.
pc_imcoveragepart.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_imcoveragepart.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_imcoveragepart.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_imcoveragepart.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_imcoveragepart.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_imcoveragepart.Reporting = Reporting
pc_imcoveragepart.Coinsurance = Coinsurance percentage values
pc_imcoveragepart.IMSignPartCosts = 
pc_imcoveragepart.IMSigns = List of Covered Signs on this Coverage Part.
pc_imcoveragepart.SignAutoNumberSeq = Sequence to autonumber IMSigns

pc_imexcludedaccount = Inland Marine Excluded Account for Account Receivable

pc_imexcludedaccount.ID = Internally managed primary key
pc_imexcludedaccount.AccountNumber = Account Number
pc_imexcludedaccount.BranchValue = Link to root of effdated tree
pc_imexcludedaccount.ChangeType = Type of change made to this row
pc_imexcludedaccount.CreateTime = Timestamp when the object was created
pc_imexcludedaccount.CreateUser = User who created the object
pc_imexcludedaccount.Description = Description
pc_imexcludedaccount.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imexcludedaccount.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imexcludedaccount.IMAccountsRecPart = 
pc_imexcludedaccount.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imexcludedaccount.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imexcludedaccount.UpdateTime = Timestamp when the object was last updated
pc_imexcludedaccount.UpdateUser = User who last updated the object

pc_imlocation = IM Location

pc_imlocation.ID = Internally managed primary key
pc_imlocation.BranchValue = Link to root of effdated tree
pc_imlocation.ChangeType = Type of change made to this row
pc_imlocation.CreateTime = Timestamp when the object was created
pc_imlocation.CreateUser = User who created the object
pc_imlocation.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imlocation.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imlocation.IMLine = 
pc_imlocation.Location = Location of inland marine exposure, e.g., one or more buildings.
pc_imlocation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imlocation.UpdateTime = Timestamp when the object was last updated
pc_imlocation.UpdateUser = User who last updated the object
pc_imlocation.Buildings = Buildings on this location

pc_imsign = Inland Marine Signs

pc_imsign.ID = Internally managed primary key
pc_imsign.BranchValue = Link to root of effdated tree
pc_imsign.ChangeType = Type of change made to this row
pc_imsign.CreateTime = Timestamp when the object was created
pc_imsign.CreateUser = User who created the object
pc_imsign.Description = Description of Sign.
pc_imsign.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imsign.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imsign.IMLocation = IMLocation of Sign.
pc_imsign.IMSignPart = 
pc_imsign.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_imsign.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_imsign.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_imsign.Interior = Is this an interior sign?
pc_imsign.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_imsign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imsign.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_imsign.SignNumber = Sign number
pc_imsign.SignType = Type of Sign
pc_imsign.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imsign.UpdateTime = Timestamp when the object was last updated
pc_imsign.UpdateUser = User who last updated the object
pc_imsign.Coverages = All coverages that apply directly to this sign.

pc_imsigncov = A sign-level coverage for Inland Marine

pc_imsigncov.ID = Internally managed primary key
pc_imsigncov.BranchValue = Link to root of effdated tree
pc_imsigncov.ChangeType = Type of change made to this row
pc_imsigncov.CreateTime = Timestamp when the object was created
pc_imsigncov.CreateUser = User who created the object
pc_imsigncov.Currency = Currency associated with the coverage
pc_imsigncov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imsigncov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imsigncov.IMSign = 
pc_imsigncov.PatternCode = The pattern defining what kind of Coverage this is
pc_imsigncov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imsigncov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_imsigncov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_imsigncov.UpdateTime = Timestamp when the object was last updated
pc_imsigncov.UpdateUser = User who last updated the object
pc_imsigncov.Costs = 

pc_imtransaction = A transaction for the Inland Marine line

pc_imtransaction.ID = Internally managed primary key
pc_imtransaction.Amount_amt = 
pc_imtransaction.Amount_cur = 
pc_imtransaction.AmountBilling_amt = 
pc_imtransaction.AmountBilling_cur = 
pc_imtransaction.BranchValue = Link to root of effdated tree
pc_imtransaction.ChangeType = Type of change made to this row
pc_imtransaction.Charged = Whether or not this transaction amount should be charged.
pc_imtransaction.CreateTime = Timestamp when the object was created
pc_imtransaction.CreateUser = User who created the object
pc_imtransaction.EffDate = The date on which the transaction becomes effective.
pc_imtransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_imtransaction.ExpDate = The date on which the transaction expires.
pc_imtransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_imtransaction.IMCost = The cost this transaction modifies.
pc_imtransaction.PolicyFXRate = 
pc_imtransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_imtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_imtransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_imtransaction.UpdateTime = Timestamp when the object was last updated
pc_imtransaction.UpdateUser = User who last updated the object
pc_imtransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_imtransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_impacttestcaseresult = Result for an impact test case

pc_impacttestcaseresult.ID = Internally managed primary key
pc_impacttestcaseresult.Complete = Complete flag
pc_impacttestcaseresult.CreateTime = Timestamp when the object was created
pc_impacttestcaseresult.CreateUser = User who created the object
pc_impacttestcaseresult.Data = Impact test result data
pc_impacttestcaseresult.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_impacttestcaseresult.UpdateTime = Timestamp when the object was last updated
pc_impacttestcaseresult.UpdateUser = User who last updated the object

pc_impacttestingperiod = The original and test period for a test case

pc_impacttestingperiod.ID = Internally managed primary key
pc_impacttestingperiod.AccountNumber = Denorm field, the account of the original period
pc_impacttestingperiod.BaselinePeriod = The baseline policy period
pc_impacttestingperiod.CreateTime = Timestamp when the object was created
pc_impacttestingperiod.CreateUser = User who created the object
pc_impacttestingperiod.OriginalPeriod = The original policy period
pc_impacttestingperiod.PolicyNumber = Denorm field, the policy number for the original period
pc_impacttestingperiod.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_impacttestingperiod.TestCase = The impact testing test case
pc_impacttestingperiod.TestPeriod = The new policy period being rated for comparison
pc_impacttestingperiod.TestPrepErrorMessage = The error message generated while processing the test prep job
pc_impacttestingperiod.TestPrepProgress = Test prep progress
pc_impacttestingperiod.TestPrepResult = The result of the test prep processing
pc_impacttestingperiod.TestRunErrorMessage = The error message generated while processing the test run job
pc_impacttestingperiod.TestRunProgress = Test run progress
pc_impacttestingperiod.TestRunResult = Processing result of the test run
pc_impacttestingperiod.UpdateTime = Timestamp when the object was last updated
pc_impacttestingperiod.UpdateUser = User who last updated the object

pc_impacttestingratebook = Join table for ImpactTestingTestCase and RateBook

pc_impacttestingratebook.ID = Internally managed primary key
pc_impacttestingratebook.ImpactTestingTestCase = The ImpactTestingTestCase which is related to this RateBook.
pc_impacttestingratebook.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_impacttestingratebook.RateBook = The RateBook which is related to this ImpactTestingTestCase.

pc_impacttestingcase = Test case for impact testing

pc_impacttestingcase.ID = Internally managed primary key
pc_impacttestingcase.CreateTime = Timestamp when the object was created
pc_impacttestingcase.CreateUser = User who created the object
pc_impacttestingcase.Name = Test case name
pc_impacttestingcase.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_impacttestingcase.RequestingUser = The user that initiates a request to export the ImpactTestingPolicyPeriods to Excel.
pc_impacttestingcase.Result = The test case result
pc_impacttestingcase.SearchCriteria = The search criteria associated with this test case
pc_impacttestingcase.Status = The test case status
pc_impacttestingcase.UpdateTime = Timestamp when the object was last updated
pc_impacttestingcase.UpdateUser = User who last updated the object
pc_impacttestingcase.Periods = Set of impact testing policy periods associated with this .
pc_impacttestingcase.Ratebooks = Set of Ratebooks which have been chosen specifically for Impact Testing.

pc_inboundhistory = History of inbound calls: soap and startable plugins

pc_inboundhistory.ID = Internally managed primary key
pc_inboundhistory.CompleteDate = The date this call completed.
pc_inboundhistory.ProfilerData = Raw Profiler data
pc_inboundhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_inboundhistory.StartDate = The date this call started.
pc_inboundhistory.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_inboundhistory.OperationName = The name of the operation.
pc_inboundhistory.ServerName = The name of the server receiving the request.
pc_inboundhistory.ServiceName = The name of the service.
pc_inboundhistory.PluginName = The name of the plugin.

pc_inclusionperson = y who is a resident family member, exclude Jack the family butler in a state where coverage for domestic workers is optional)

pc_inclusionperson.ID = Internally managed primary key
pc_inclusionperson.BranchValue = Link to root of effdated tree
pc_inclusionperson.ChangeType = Type of change made to this row
pc_inclusionperson.CreateTime = Timestamp when the object was created
pc_inclusionperson.CreateUser = User who created the object
pc_inclusionperson.Duties = Duties with the company
pc_inclusionperson.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_inclusionperson.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_inclusionperson.FirstName = First name.
pc_inclusionperson.Inclusion = Inclusion option
pc_inclusionperson.LastName = Last name.
pc_inclusionperson.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_inclusionperson.Relationship = Relationship to named insured
pc_inclusionperson.State = Jurisdiction this person is included or excluded from
pc_inclusionperson.UpdateTime = Timestamp when the object was last updated
pc_inclusionperson.UpdateUser = User who last updated the object
pc_inclusionperson.WCLine = 

pc_industrycode = A standardized code describing operations performed

pc_industrycode.ID = Internally managed primary key
pc_industrycode.Classification = The Classification of the code (essentially a short description)
pc_industrycode.Code = The code value
pc_industrycode.CreateTime = Timestamp when the object was created
pc_industrycode.CreateUser = User who created the object
pc_industrycode.Domain = The type of code (SIC, NAICS, etc)
pc_industrycode.EffectiveDate = Effective date of this row.
pc_industrycode.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_industrycode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_industrycode.UpdateTime = Timestamp when the object was last updated
pc_industrycode.UpdateUser = User who last updated the object

pc_industrycodeclasscode = Lookup table for translating industry codes to class codes.

pc_industrycodeclasscode.ID = Internally managed primary key
pc_industrycodeclasscode.ClassCode = 
pc_industrycodeclasscode.CreateTime = Timestamp when the object was created
pc_industrycodeclasscode.CreateUser = User who created the object
pc_industrycodeclasscode.IndustryCode = 
pc_industrycodeclasscode.PrimaryClass = Is this the primary class code for the industry code?
pc_industrycodeclasscode.PrimaryIndustry = Is this the primary industry code for the class code?
pc_industrycodeclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_industrycodeclasscode.UpdateTime = Timestamp when the object was last updated
pc_industrycodeclasscode.UpdateUser = User who last updated the object

pc_indcode_class = null

pc_indcode_class.ID = Internally managed primary key
pc_indcode_class.Language = 
pc_indcode_class.Owner = 
pc_indcode_class.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_indcode_class.Value = 

pc_instrumentedmessage = Profiler data for each destination

pc_instrumentedmessage.ID = Internally managed primary key
pc_instrumentedmessage.DestinationID = Identifies the message destination.
pc_instrumentedmessage.EndTime = Timestamp when the instance was shutdown.
pc_instrumentedmessage.ProfilerData = Raw Profiler data
pc_instrumentedmessage.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_instrumentedmessage.StartTime = Timestamp when the instance was started.

pc_instrumentedworkexecutor = Instrumentation information for a work queue executor instance.

pc_instrumentedworkexecutor.ID = Internally managed primary key
pc_instrumentedworkexecutor.AppServerName = The app server name.
pc_instrumentedworkexecutor.EndTime = Timestamp when the executor was shutdown.
pc_instrumentedworkexecutor.MaxNumberOfWorkers = Maximum number of parallel workers.
pc_instrumentedworkexecutor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_instrumentedworkexecutor.StartTime = Timestamp when the executor was started.
pc_instrumentedworkexecutor.WorkQueueID = The related writer batch process, identifying this queue.

pc_instrumentedworkertask = Instrumentation information for a run of a distributed worker instance.

pc_instrumentedworkertask.ID = Internally managed primary key
pc_instrumentedworkertask.Cdcs = The number of exceptions caught during workitem processing.
pc_instrumentedworkertask.ConsecutiveExceptions = Count of the number of consecutive work items that resulted in an exception.
pc_instrumentedworkertask.EndTime = Timestamp when the instance was shutdown.
pc_instrumentedworkertask.Exceptions = The number of exceptions caught during workitem processing.
pc_instrumentedworkertask.InstanceNumber = The instance number on this app server.
pc_instrumentedworkertask.InstrumentedWorkExecutorID = Executor instance that created this task.
pc_instrumentedworkertask.ManagementElapsed = The number of milliseconds spent managing the work queue.
pc_instrumentedworkertask.OrphansAdopted = The number of orphaned workitems reclaimed.
pc_instrumentedworkertask.ProcessHistoryID = The writer batch job that created all workitem processed by this run.
pc_instrumentedworkertask.ProfilerData = Raw Profiler data
pc_instrumentedworkertask.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_instrumentedworkertask.RanToCompletion = Whether the worker batch ran to completion, or failed or was interrupted.
pc_instrumentedworkertask.StartTime = Timestamp when the instance was started.
pc_instrumentedworkertask.WorkElapsed = The number of milliseconds spent processing work items.
pc_instrumentedworkertask.WorkitemsCheckedOut = The number of workitems checked out.
pc_instrumentedworkertask.WorkitemsFailed = The number of workitems marked as failed.
pc_instrumentedworkertask.WorkitemsProcessed = The number of workitems processed successfully.
pc_instrumentedworkertask.WorkitemsProcessedAfterCdc = The number of workitems processed after previous attempt failed with CDC.
pc_instrumentedworkertask.WorkitemsProcessedAfterError = The number of workitems processed after previous attempt failed with some kind of error (including CDC).
pc_instrumentedworkertask.WorkitemsSkipped = The number of workitems skipped.

pc_job = Workflow process object relating to one or more versions of a policy

pc_job.ID = Internally managed primary key
pc_job.ArchiveDate = When archiving was attempted on the root. Null if we never attempted to archive it.
pc_job.ArchiveFailure = Short version of the reason for a failure to archive
pc_job.ArchiveFailureDetails = Full details of archive failure
pc_job.ArchiveSchemaInfo = Schema version at which the root was archived or null if it was not archived
pc_job.ArchiveState = The archive state of the graph
pc_job.CloseDate = Date and time when this job was closed.
pc_job.CreateTime = Timestamp when the object was created
pc_job.CreateUser = User who created the object
pc_job.Description = Extended description of this job which may include the reason this job was started.
pc_job.ExcludedFromArchive = Indicate if this entity should be excluded from archiving
pc_job.ExcludeReason = Reason for excluding or skipping the entity from archiving. If the ExcludeFromArchive bit is set, this gives the reason for excluding. Else, if this is not null, it is the reason for skipping.
pc_job.JobGroup = The group to which this job belongs.
pc_job.JobNumber = The unique identifier for this job.
pc_job.NextPurgeCheckDate = The date to next evaluate this Job for purging. If null, purging should be checked at the next opportunity
pc_job.Policy = The Policy this Job applies to.
pc_job.PrimaryInsuredName = The display name of the primary names insured (denormalization).
pc_job.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_job.PurgeStatus = Purge status of the job.
pc_job.SideBySide = True if Side By Side Quoting has been set up for this job.
pc_job.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_job.UpdateTime = Timestamp when the object was last updated
pc_job.UpdateUser = User who last updated the object
pc_job.Notes = Notes associated with this Job.
pc_job.Periods = Set of PolicyPeriods associated with this job.
pc_job.RoleAssignments = Role Assignments for this job.
pc_job.AuditInformation = The audit information pertaining to this audit job
pc_job.PaymentReceived_amt = 
pc_job.PaymentReceived_cur = 
pc_job.CancelProcessDate = Date the cancellation should be processed by the external system
pc_job.CancelReasonCode = Cancellation reason codes
pc_job.InitialNotificationDate = Date of the first time that a cancellation notification was sent to an external system in response to this job
pc_job.LastNotifiedCancellationDate = Date of the last time that a cancellation notification was sent to an external system in response to this job.
pc_job.NotificationAckDate = Date a cancellation notification acknowledgement was received from an external system
pc_job.NotificationDate = Date a cancellation notification was sent to an external system
pc_job.RescindNotificationDate = Date a rescind cancellation notification was sent
pc_job.Source = Party that initiated cancellation (carrier or insures)
pc_job.ReinstateCode = Reinstate reason codes
pc_job.EscalateAfterHoldReleased = Indicates whether a renewal job should be escalated if a policy hold no longer affects it.  If true, creates an activity for the producer to re-examine the renewal. If false, the previously-held renewal is dropped back into automated processing.
pc_job.NonRenewalCode = NonRenewal reason codes
pc_job.NonRenewalNotifDate = Date a non-renewal notification was sent
pc_job.NotTakenNotifDate = Date a not-taken notification was sent
pc_job.RenewalCode = Renewal reason codes
pc_job.RenewalNotifDate = Date a renewal notification was sent
pc_job.ChangePolicyNumber = Whether or not a new policy number should be generated for the rewritten policy upon issuance
pc_job.RewriteType = Type of rewrite
pc_job.BindOption = Indicates how this submision was bound
pc_job.DateQuoteNeeded = Date a quote for this submission is needed
pc_job.QuoteType = What kind of quote is the submission for
pc_job.RejectReason = The reason that this job was rejected
pc_job.RejectReasonText = Text of the letter.
pc_job.SubmissionDate = Date this submission was entered

pc_jobgroup = A job group is a grouping of jobs within a single account.

pc_jobgroup.ID = Internally managed primary key
pc_jobgroup.Account = The account of this job group.
pc_jobgroup.CreateTime = Timestamp when the object was created
pc_jobgroup.CreateUser = User who created the object
pc_jobgroup.Name = The name of this group.
pc_jobgroup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_jobgroup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_jobgroup.UpdateTime = Timestamp when the object was last updated
pc_jobgroup.UpdateUser = User who last updated the object
pc_jobgroup.Renewals = The array of renewals in this renewal group.
pc_jobgroup.Submissions = The array of submissions in this submission group.

pc_jobletter = Referencess one Job referred to in a letter.

pc_jobletter.ID = Internally managed primary key
pc_jobletter.Job = The associated Job.
pc_jobletter.Letter = The associated Letter.
pc_jobletter.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_jobuserroleassign = User role assignments for Jobs.

pc_jobuserroleassign.ID = Internally managed primary key
pc_jobuserroleassign.Active = Indicates whether the user is active in this role assignment.
pc_jobuserroleassign.AssignedByUser = User who assigned this entity.
pc_jobuserroleassign.AssignedGroup = Group to which this entity is assigned; null if none assigned
pc_jobuserroleassign.AssignedQueue = Either the Queue to which this entity is assigned (if AssignmentStatus is 'assigned'), the Queue to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_jobuserroleassign.AssignedUser = Either the User to which this entity is assigned (if AssignmentStatus is 'assigned'), the User to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_jobuserroleassign.AssignmentDate = Time when entity last assigned
pc_jobuserroleassign.AssignmentStatus = Typelist describing assignment status.
pc_jobuserroleassign.CloseDate = Date and time when this entity was closed. (Not applicable to all assignable entities)
pc_jobuserroleassign.Comments = Comments about this role assignment.
pc_jobuserroleassign.CreateTime = Timestamp when the object was created
pc_jobuserroleassign.CreateUser = User who created the object
pc_jobuserroleassign.Job = Associated job.
pc_jobuserroleassign.PreviousGroup = Group to which this entity was previously assigned.
pc_jobuserroleassign.PreviousQueue = Queue to which this entity was previously assigned.
pc_jobuserroleassign.PreviousUser = User to which this entity was previously assigned.
pc_jobuserroleassign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_jobuserroleassign.Role = The role to which the user is assigned.
pc_jobuserroleassign.UpdateTime = Timestamp when the object was last updated
pc_jobuserroleassign.UpdateUser = User who last updated the object

pc_jobpolicyperiod = null

pc_jobpolicyperiod.ID = Internally managed primary key
pc_jobpolicyperiod.ForeignEntity = 
pc_jobpolicyperiod.Owner = 
pc_jobpolicyperiod.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_letter = Record of a business letter that has been sent for one or more Jobs

pc_letter.ID = Internally managed primary key
pc_letter.CreateTime = Timestamp when the object was created
pc_letter.CreateUser = User who created the object
pc_letter.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_letter.Type = What kind of letter
pc_letter.UpdateTime = Timestamp when the object was last updated
pc_letter.UpdateUser = User who last updated the object
pc_letter.JobLetters = What Jobs are associated with this Letter.

pc_licensedstate = The state, policy type and segment a UWCompany is eligible to insure.

pc_licensedstate.ID = Internally managed primary key
pc_licensedstate.CreateTime = Timestamp when the object was created
pc_licensedstate.CreateUser = User who created the object
pc_licensedstate.EffectiveDate = Effective date of this row.
pc_licensedstate.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_licensedstate.PriceFactor = The relative price factor for this state.
pc_licensedstate.ProductCode = Product that the underwriting company is licensed for a particular state.
pc_licensedstate.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_licensedstate.Segment = Market segment for this state and product type.
pc_licensedstate.State = The state where the company has been licensed to sell insurance.
pc_licensedstate.UpdateTime = Timestamp when the object was last updated
pc_licensedstate.UpdateUser = User who last updated the object
pc_licensedstate.UWCompany = Each licensedState belongs to one UWCompany.

pc_linkedaddress = Links addresses, i.e. addresses of all family members

pc_linkedaddress.ID = Internally managed primary key
pc_linkedaddress.CreateTime = Timestamp when the object was created
pc_linkedaddress.CreateUser = User who created the object
pc_linkedaddress.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_linkedaddress.UpdateTime = Timestamp when the object was last updated
pc_linkedaddress.UpdateUser = User who last updated the object
pc_linkedaddress.Addresses = The linked group of addresses

pc_loadcallback = Timed loader callbacks.

pc_loadcallback.ID = Internally managed primary key
pc_loadcallback.Description = Description of loader callback.
pc_loadcallback.EndTime = Timestamp when the timing completed.
pc_loadcallback.ExecutionOrder = Order of execution (1-N).
pc_loadcallback.ExecutionTime = Execution time of LoaderCallback.
pc_loadcallback.LoadCommand = Parent.
pc_loadcallback.LoadOperation = Parent.
pc_loadcallback.Name = Name of loader callback.
pc_loadcallback.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadcallback.StartTime = Timestamp when the timing began.
pc_loadcallback.CallbackResults = Timed loader callback results.

pc_loadcallbackresult = Timed loader callback results.

pc_loadcallbackresult.ID = Internally managed primary key
pc_loadcallbackresult.AffectedRowCount = Number of rows affected.
pc_loadcallbackresult.EndTime = Timestamp when the timing completed.
pc_loadcallbackresult.ExecutionOrder = Order of execution (1-N).
pc_loadcallbackresult.LoadCallback = Parent.
pc_loadcallbackresult.Name = Name of loader callback result.
pc_loadcallbackresult.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadcallbackresult.SQLText = SQL text.
pc_loadcallbackresult.StartTime = Timestamp when the timing began.

pc_loadcommand = Staging table load history.

pc_loadcommand.ID = Internally managed primary key
pc_loadcommand.CallingUser = ID of the user who executed the operation.
pc_loadcommand.CommandType = Type of load command.
pc_loadcommand.Description = Description of the load history event.
pc_loadcommand.EndTime = Timestamp when the timing completed.
pc_loadcommand.ErrorCount = Total number of integrity check errors detected for all affected tables (if applicable).
pc_loadcommand.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadcommand.StartTime = Timestamp when the timing began.
pc_loadcommand.Callbacks = Timed loader callbacks.
pc_loadcommand.EncryptTables = Timed loader table columns encryptions.
pc_loadcommand.InsertSelects = Timed loader insert/selects.
pc_loadcommand.IntegrityChecks = Timed loader integrity checks.
pc_loadcommand.ParameterNameValuePairs = Parameter values for command.
pc_loadcommand.RowCounts = Row counts.
pc_loadcommand.Steps = Steps.
pc_loadcommand.UpdateDBStatisticsCommands = UpdateDBStatisticsCommands.

pc_loadencryptchunk = Timings for each chuck of encyrption updates

pc_loadencryptchunk.ID = Internally managed primary key
pc_loadencryptchunk.ChunkSize = Number of statements executed in this chunk
pc_loadencryptchunk.EndTime = Timestamp when the timing completed.
pc_loadencryptchunk.LoadEncryptTable = Parent load encyrption step
pc_loadencryptchunk.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadencryptchunk.StartTime = Timestamp when the timing began.

pc_loadencrypttable = Encrypt columns in a staging table

pc_loadencrypttable.ID = Internally managed primary key
pc_loadencrypttable.AffectedRowCount = Total rows read and updated
pc_loadencrypttable.ColumnsToEncrypt = Column(s) being encrypted (comma separated)
pc_loadencrypttable.EndTime = Timestamp when the timing completed.
pc_loadencrypttable.LoadCommand = Parent load command
pc_loadencrypttable.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadencrypttable.SelectStmt = Select statement used to read rows
pc_loadencrypttable.SizeOfTimedChuck = Target number of update executions in each chunk
pc_loadencrypttable.StartTime = Timestamp when the timing began.
pc_loadencrypttable.TableName = Name of table being updated
pc_loadencrypttable.UpdateStmt = Update statement used to update rows
pc_loadencrypttable.LoadEncryptChunks = 

pc_loaderror = Errors generated by the loader.

pc_loaderror.ErrorID = Load error ID, to ensure uniqueness.
pc_loaderror.ErrorMessage = Description of the failure.
pc_loaderror.LoadErrorType = Type of load error event.
pc_loaderror.Query = Query run to detect the failure.
pc_loaderror.TableName = Name of the staging table, if applicable.

pc_loaderrorrow = Error rows found by the loader.

pc_loaderrorrow.ErrorID = Virtual foreign key to loaderror table
pc_loaderrorrow.ErrorRowID = Load error row ID, to ensure uniqueness.
pc_loaderrorrow.LUWID = Logical Unit of Work ID, if applicable.
pc_loaderrorrow.RowNumber = Row number, if applicable.

pc_loadexclusion = LUWIDs to be excluded by the loader.

pc_loadexclusion.LUWID = Logical Unit of Work ID

pc_loadinsertselect = Timed loader insert/selects.

pc_loadinsertselect.ID = Internally managed primary key
pc_loadinsertselect.AffectedRowCount = Number of rows affected.
pc_loadinsertselect.EndTime = Timestamp when the timing completed.
pc_loadinsertselect.ExecutionOrder = Order of execution (1-N).
pc_loadinsertselect.LoadCommand = Denorm FK for unique index.
pc_loadinsertselect.LoadOperation = Parent.
pc_loadinsertselect.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadinsertselect.Query = insert/select.
pc_loadinsertselect.StartTime = Timestamp when the timing began.

pc_loadintegritycheck = Timed loader integrity checks.

pc_loadintegritycheck.ID = Internally managed primary key
pc_loadintegritycheck.Description = Description of integrity check.
pc_loadintegritycheck.EndTime = Timestamp when the timing completed.
pc_loadintegritycheck.ExecutionOrder = Order of execution (1-N).
pc_loadintegritycheck.LoadCommand = Denorm FK for unique index.
pc_loadintegritycheck.LoadIntegrityCheckType = Type of loader integrity check.
pc_loadintegritycheck.LoadOperation = Parent.
pc_loadintegritycheck.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadintegritycheck.Query = Query from integrity check.
pc_loadintegritycheck.StartTime = Timestamp when the timing began.

pc_loadoperation = Detail of the staging table load history.

pc_loadoperation.ID = Internally managed primary key
pc_loadoperation.AffectedRowCount = Number of rows affected.
pc_loadoperation.EndTime = Timestamp when the timing completed.
pc_loadoperation.ErrorCount = Number of integrity check errors detected (if applicable).
pc_loadoperation.ExecutionOrder = Order of execution (1-N).
pc_loadoperation.HighestID = If associated with a idsgenerated step, contains the end of the id range for the rows being loaded.
pc_loadoperation.LoadStep = Parent step.
pc_loadoperation.LowestID = If associated with a idsgenerated step, contains the start of the id range for the rows being loaded.
pc_loadoperation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadoperation.StartTime = Timestamp when the timing began.
pc_loadoperation.TableName = Affected staging table.
pc_loadoperation.Callbacks = Timed loader callbacks.
pc_loadoperation.InsertSelects = Timed loader insert/selects.
pc_loadoperation.IntegrityChecks = Timed loader integrity checks.
pc_loadoperation.UpdateStatisticsSelects = db update statistics loader selects.

pc_loadparameter = (parameter, value) pairs for load commands.

pc_loadparameter.ID = Internally managed primary key
pc_loadparameter.LoadCommand = Parent.
pc_loadparameter.ParameterName = Parameter name.
pc_loadparameter.ParameterValue = Parameter value.
pc_loadparameter.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_loadrowcount = Row counts for load history.

pc_loadrowcount.ID = Internally managed primary key
pc_loadrowcount.LoadCommand = Parent.
pc_loadrowcount.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadrowcount.SourceBlockCount = Number of blocks in source table.
pc_loadrowcount.SourceRowCount = Number of rows in source table.
pc_loadrowcount.SourceTableName = Name of source table.
pc_loadrowcount.StagingBlockCount = Number of blocks in staging table.
pc_loadrowcount.StagingRowCount = Number of rows in staging table.
pc_loadrowcount.StagingTableName = Name of staging table.

pc_loadstep = Steps within a load command.

pc_loadstep.ID = Internally managed primary key
pc_loadstep.EndTime = Timestamp when the timing completed.
pc_loadstep.ExecutionOrder = Order of execution (1-N).
pc_loadstep.LoadCommand = Parent.
pc_loadstep.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadstep.StartTime = Timestamp when the timing began.
pc_loadstep.StepType = Type of load step.
pc_loadstep.Operations = Detailed operations.

pc_loadupdatestatisticsselect = Timed loader update statistics selects.

pc_loadupdatestatisticsselect.ID = Internally managed primary key
pc_loadupdatestatisticsselect.EndTime = Timestamp when the timing completed.
pc_loadupdatestatisticsselect.ExecutionOrder = Order of execution (1-N).
pc_loadupdatestatisticsselect.LoadCommand = Denorm FK for unique index.
pc_loadupdatestatisticsselect.LoadOperation = Parent.
pc_loadupdatestatisticsselect.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loadupdatestatisticsselect.Query = insert/select.
pc_loadupdatestatisticsselect.StartTime = Timestamp when the timing began.
pc_loadupdatestatisticsselect.TableName = Affected staging table.

pc_loadparentstep = null

pc_loadparentstep.ID = Internally managed primary key
pc_loadparentstep.ForeignEntity = 
pc_loadparentstep.Owner = 
pc_loadparentstep.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_locationanswer = Links location and answer references - answers are persisted text responses to questions in the location ui. Specific to PolicyCenter.

pc_locationanswer.ID = Internally managed primary key
pc_locationanswer.BooleanAnswer = Yes / no component of answer.
pc_locationanswer.BranchValue = Link to root of effdated tree
pc_locationanswer.ChangeType = Type of change made to this row
pc_locationanswer.ChoiceAnswerCode = Choice of the answer.
pc_locationanswer.CreateTime = Timestamp when the object was created
pc_locationanswer.CreateUser = User who created the object
pc_locationanswer.DateAnswer = The answer in date form.
pc_locationanswer.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_locationanswer.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_locationanswer.IntegerAnswer = Numeric component of answer.
pc_locationanswer.PolicyLocation = 
pc_locationanswer.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_locationanswer.QuestionCode = Question that this answer answers
pc_locationanswer.TextAnswer = Either the answer's text.
pc_locationanswer.UpdateTime = Timestamp when the object was last updated
pc_locationanswer.UpdateUser = User who last updated the object

pc_locationnamedinsured = An named insured on a location on a policy.

pc_locationnamedinsured.ID = Internally managed primary key
pc_locationnamedinsured.BranchValue = Link to root of effdated tree
pc_locationnamedinsured.ChangeType = Type of change made to this row
pc_locationnamedinsured.CreateTime = Timestamp when the object was created
pc_locationnamedinsured.CreateUser = User who created the object
pc_locationnamedinsured.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_locationnamedinsured.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_locationnamedinsured.Location = 
pc_locationnamedinsured.NamedInsured = 
pc_locationnamedinsured.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_locationnamedinsured.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_locationnamedinsured.UpdateTime = Timestamp when the object was last updated
pc_locationnamedinsured.UpdateUser = User who last updated the object

pc_losshistentry = Prior loss financial and policy line detail, status and description

pc_losshistentry.ID = Internally managed primary key
pc_losshistentry.AmountPaid_amt = 
pc_losshistentry.AmountPaid_cur = 
pc_losshistentry.AmountResv_amt = 
pc_losshistentry.AmountResv_cur = 
pc_losshistentry.CreateTime = Timestamp when the object was created
pc_losshistentry.CreateUser = User who created the object
pc_losshistentry.Description = Description of the loss
pc_losshistentry.LossCause = Cause of loss
pc_losshistentry.LossStatus = The status of the claim
pc_losshistentry.OccurrenceDate = The date of the loss event
pc_losshistentry.Policy = The policy with which this is associated
pc_losshistentry.PolicyLinePatternCode = The applicable policy line for the loss
pc_losshistentry.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_losshistentry.TotalIncurred_amt = 
pc_losshistentry.TotalIncurred_cur = 
pc_losshistentry.UpdateTime = Timestamp when the object was last updated
pc_losshistentry.UpdateUser = User who last updated the object

pc_mvr = A Motor Vehicle Record for the driver including the order information.

pc_mvr.ID = Internally managed primary key
pc_mvr.AdditionalDrivers = Any additional drivers associated with this MVR report.
pc_mvr.Address = Driver's Address - received from MVR provider
pc_mvr.CreateTime = Timestamp when the object was created
pc_mvr.CreateUser = User who created the object
pc_mvr.DateOfBirth = Driver's date of birth - received from MVR provider.
pc_mvr.Donor = Whether the driver is an organ donor - received from MVR provider.
pc_mvr.Eyes = Eye color of the driver - received from MVR provider.
pc_mvr.FirstName = Driver's first name - received from MVR provider.
pc_mvr.Gender = Gender - received from MVR provider.
pc_mvr.Hair = Hair color of the driver - received from MVR provider.
pc_mvr.Height = Height of the driver - received from MVR provider.
pc_mvr.LastName = Driver's last name - received from MVR provider.
pc_mvr.MiddleName = Driver's middle name or initial - received from MVR provider.
pc_mvr.Miscellaneous = Miscellaneous and state specific information.
pc_mvr.MVROrder = Order used to request this Motor Vehicle Record.
pc_mvr.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_mvr.Race = Race of the driver - received from MVR provider.
pc_mvr.ReportDate = Date and Time when the report was processed.
pc_mvr.ReportNumber = Identifies the report when multiple MVR reports are received for one License. Default value=1
pc_mvr.SSN = Social Security Number - received from MVR provider.
pc_mvr.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_mvr.UpdateTime = Timestamp when the object was last updated
pc_mvr.UpdateUser = User who last updated the object
pc_mvr.Weight = Weight of the driver - received from MVR provider.
pc_mvr.YearsRequested = The MVR report can be requested base on 3, 5, 7 or 10 years depending on the State
pc_mvr.IncidentEntities = Incidents in this record.
pc_mvr.LicenseEntities = Licenses in this record.

pc_mvrconfig = Lookup table used to find the number of years to request and the stale days when requesting Motor Vehicle Record data

pc_mvrconfig.ID = Internally managed primary key
pc_mvrconfig.CreateTime = Timestamp when the object was created
pc_mvrconfig.CreateUser = User who created the object
pc_mvrconfig.Jurisdiction = The state or jurisdiction where the company has been licensed to sell insurance.
pc_mvrconfig.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_mvrconfig.StaleDays = Calendar days after which the MVR is considered stale (default 90)
pc_mvrconfig.UpdateTime = Timestamp when the object was last updated
pc_mvrconfig.UpdateUser = User who last updated the object
pc_mvrconfig.UWCompanyCode = Code of the underwriting company
pc_mvrconfig.YearsToRequest = Number of years to request (3, 5, 7, 10)

pc_mvrincident = Incident in the Motor Vehicle Record for a driver.

pc_mvrincident.ID = Internally managed primary key
pc_mvrincident.Accident = Whether an accident was part of this incident
pc_mvrincident.CarrierViolationCode = The insurance carrier specific code that can be used for standard processing or reporting.
pc_mvrincident.ConvictionDate = Date of conviction or reinstatement of license.
pc_mvrincident.Court = The court or agency of conviction.
pc_mvrincident.CreateTime = Timestamp when the object was created
pc_mvrincident.CreateUser = User who created the object
pc_mvrincident.Description = State Department of Motor Vehicle (DMV) description.
pc_mvrincident.Disposition = The verdict on the violation
pc_mvrincident.EligibleDate = The date the driver becomes eligible based on the imposed restriction on a violation such as date driver is eligible to driver after a suspension.
pc_mvrincident.IncidentNumber = An unique identifier for incidents of the same mvr
pc_mvrincident.IncidentType = Type of incident.
pc_mvrincident.Location = City or location of the incident.
pc_mvrincident.Misc = Any other information not captured in the defined fields
pc_mvrincident.MotorVehicleRecord = Motor Vehicle Record containing this incident.
pc_mvrincident.OrderNumber = The tracking number for the order or violation
pc_mvrincident.Points = Total points assigned by the Department of Motor Vehicle (DMV) to the driver.
pc_mvrincident.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_mvrincident.Speed = The speed of the vehicle when the incident occurred
pc_mvrincident.SpeedZone = The Zone speed limit where the incident occurred
pc_mvrincident.State = State or county of the incident.
pc_mvrincident.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_mvrincident.UpdateTime = Timestamp when the object was last updated
pc_mvrincident.UpdateUser = User who last updated the object
pc_mvrincident.ViolationCode = The state specific violation or incident code as returned by Department of Motor Vehicles (DMV).
pc_mvrincident.ViolationDate = Date of violation or suspension of license.

pc_mvrlicense = Licenses in the Motor Vehicle Record for a driver.

pc_mvrlicense.ID = Internally managed primary key
pc_mvrlicense.BoatClass = Boat Class
pc_mvrlicense.CreateTime = Timestamp when the object was created
pc_mvrlicense.CreateUser = User who created the object
pc_mvrlicense.Endorsements = Several endorsements per license (Hazardous Material, 01/23/96 Duplicated License Issued, etc.)
pc_mvrlicense.ExpireDate = Expire Date for the current License
pc_mvrlicense.IssuedDate = Issued Date for the current License
pc_mvrlicense.LicenseClass = Driver License Class
pc_mvrlicense.LicenseNumber = Driver License Number
pc_mvrlicense.LicenseState = Driver License State
pc_mvrlicense.LicenseStatus = Status (e.g. Duplicate, Valid, Suspended,etc.)
pc_mvrlicense.LicenseType = Driver License Type (Standard, Commercial)
pc_mvrlicense.MotorVehicleRecord = Motor Vehicle Record containing this license.
pc_mvrlicense.NonResidentMilitary = Indicates if this license belong to a non resident military
pc_mvrlicense.OriginallyIssued = Date when the License was issued for the first time
pc_mvrlicense.Points = Total points assigned by the Department of Motor Vehicle (DMV) to the driver.
pc_mvrlicense.PrimaryLicense = Indicates if this is the primary license
pc_mvrlicense.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_mvrlicense.ReinstateDate = Date when the license was reinstated
pc_mvrlicense.Restrictions = Several restriction per license (Daylight hours only, Corrective Lenses, etc.)
pc_mvrlicense.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_mvrlicense.UpdateTime = Timestamp when the object was last updated
pc_mvrlicense.UpdateUser = User who last updated the object

pc_mvrorder = Motor Vehicle Record Order

pc_mvrorder.ID = Internally managed primary key
pc_mvrorder.CreateTime = Timestamp when the object was created
pc_mvrorder.CreateUser = User who created the object
pc_mvrorder.DateOfBirthSC = Driver's date of birth used to request the MVR.
pc_mvrorder.FirstNameSC = Driver's first name used to request the MVR.
pc_mvrorder.InternalRequestID = Internal Request unique identifier.
pc_mvrorder.LastNameSC = Driver's last name used to request the MVR.
pc_mvrorder.LicenseNumberSC = Driver's license number used to request the MVR.
pc_mvrorder.LicenseStateSC = Driver's license state used to request the MVR.
pc_mvrorder.MiddleNameSC = Driver's middle name or initial used to request the MVR.
pc_mvrorder.MVRResponse = MVR Response sent by the Provider (Clear, Hit, No Hit, Delay, etc)
pc_mvrorder.OrderStatus = Order status
pc_mvrorder.ProviderRequestID = Provider Request/order identifier.
pc_mvrorder.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_mvrorder.ReportRequestedDate = Date when the report was requested.
pc_mvrorder.StatusDate = Date of the last status change.
pc_mvrorder.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_mvrorder.UpdateTime = Timestamp when the object was last updated
pc_mvrorder.UpdateUser = User who last updated the object
pc_mvrorder.MVREntities = MVR report received for this order.

pc_maxkey = Maximum keys for each keyable entity type, used by key generator.

pc_maxkey.EntityTableName = Name of table for keyable entity type
pc_maxkey.MaxKey = Current maximum key for the entity type

pc_message = Active messages generated by events.

pc_message.ID = Internally managed primary key
pc_message.Account = Associated account, if applicable.  If null, then the associated object is a cross-policy object.
pc_message.AckCode = Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
pc_message.AckCount = Number of acks received.
pc_message.AfterSendTime = Time of completion of afterSend method.
pc_message.BeforeSendLockedTime = Time of after acquired lock before the call to beforeSend transformations.
pc_message.BeforeSendLockTime = Time of attempting to get lock before the call to beforeSend transformations.
pc_message.BeforeSendTime = Time of completion of beforeSend transformations.
pc_message.Contact = Associated contact, if applicable.
pc_message.CreationTime = Time of creating the message.
pc_message.Description = Short description of the message.
pc_message.DestinationID = Identifies the destination to send this message to.
pc_message.DuplicateCount = Number of duplicate errors received.  This field is obsolete, it is not applicable to active messages.
pc_message.ErrorCategory = Type of error if the message is in error.
pc_message.ErrorDescription = Detailed description of error condition (set in the destination).
pc_message.EventName = Name of the event.
pc_message.LateBound = Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
pc_message.MessageCode = Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
pc_message.OptionalInt = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_message.OptionalMoney = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_message.OptionalString = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_message.Payload = Contents of the message.
pc_message.Policy = Associated policy, if applicable. This field is deprecated and is no longer populated, use PolicyPeriod instead.
pc_message.PolicyPeriod = Associated policy period, if applicable.
pc_message.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_message.QueryTime = Time of of query selecting message to be processed.
pc_message.RetryCount = Number of times message has been retried.
pc_message.RetryTime = Time in the future at which to retry the message in error, applicable only to retryable error messages.
pc_message.SenderRefID = Optional sender reference set at message send time.
pc_message.SendLockedTime = Time of after acquired lock lock before the sending the message.
pc_message.SendLockTime = Time of attempting to lock before the sending the message.
pc_message.SendOrder = Order in which to send messages.
pc_message.SendTime = Time of completion of sending the message.
pc_message.Status = Message status: 1-Pending send; 2-Pending ack; 3-Error; 4-Retryable error
pc_message.User = The user who created this message.

pc_messagehistory = Completed messages generated by events.

pc_messagehistory.ID = Internally managed primary key
pc_messagehistory.Account = Associated account, if applicable.  If null, then the associated object is a cross-policy object.
pc_messagehistory.AckCode = Custom field that may be defined when acknowledging.  This field is deprecated, please define a new custom extension field instead.
pc_messagehistory.AckCount = Number of acks received.
pc_messagehistory.AckedTime = Time of ack.
pc_messagehistory.AfterSendTime = Time of completion of afterSend method.
pc_messagehistory.BeforeSendLockedTime = Time of after acquired lock before the call to beforeSend transformations.
pc_messagehistory.BeforeSendLockTime = Time of attempting to get lock before the call to beforeSend transformations.
pc_messagehistory.BeforeSendTime = Time of completion of beforeSend transformations.
pc_messagehistory.Contact = Associated contact, if applicable.
pc_messagehistory.CreationTime = Time of creating the message.
pc_messagehistory.Description = Short description of the message.
pc_messagehistory.DestinationID = Identifies the message destination to send this message to.
pc_messagehistory.DuplicateCount = Number of duplicate errors received.
pc_messagehistory.ErrorCategory = Type of error if the message is in error.
pc_messagehistory.ErrorDescription = Detailed description of error condition (set in the message destination).
pc_messagehistory.EventName = Name of the event.
pc_messagehistory.LateBound = Whether the payload contains late-bound fields.  This field is obsolete and no longer set/used.
pc_messagehistory.MessageCode = Custom field that may be defined during message creation.  This field is deprecated, please define a new custom extension field instead.
pc_messagehistory.OptionalInt = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_messagehistory.OptionalMoney = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_messagehistory.OptionalString = Custom field that may be set at message creation time.  This field is deprecated, please define a new custom extension field instead.
pc_messagehistory.OrigMsgId = Identifies the id of the original message.
pc_messagehistory.Payload = Contents of the message.
pc_messagehistory.Policy = Associated policy, if applicable. This field is deprecated and is no longer populated.
pc_messagehistory.PolicyPeriod = Associated policy period, if applicable.
pc_messagehistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_messagehistory.QueryTime = Time of of query selecting message to be processed.
pc_messagehistory.RetryCount = Number of times message has been retried.
pc_messagehistory.RetryTime = Time in the future at which to retry the message in error, applicable only to retryable error messages.
pc_messagehistory.SenderRefID = Optional sender reference set at message send time.
pc_messagehistory.SendLockedTime = Time of after acquired lock lock before the sending the message.
pc_messagehistory.SendLockTime = Time of attempting to lock before the sending the message.
pc_messagehistory.SendOrder = Order in which to send messages.
pc_messagehistory.SendTime = Time of completion of sending the message.
pc_messagehistory.Status = Message status: 10-Acked; 11-Error cleared; 12-Error retried; 13-Skipped
pc_messagehistory.User = The user who created this message.

pc_minimumpremium = The minimum premium for some piece of a policy.

pc_minimumpremium.ID = Internally managed primary key
pc_minimumpremium.Amount = The amount of minimum premium.
pc_minimumpremium.CreateTime = Timestamp when the object was created
pc_minimumpremium.CreateUser = User who created the object
pc_minimumpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_minimumpremium.UpdateTime = Timestamp when the object was last updated
pc_minimumpremium.UpdateUser = User who last updated the object

pc_modifierlookup = The modifier lookup type.

pc_modifierlookup.ID = Internally managed primary key
pc_modifierlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_modifierlookup.CreateTime = Timestamp when the object was created
pc_modifierlookup.CreateUser = User who created the object
pc_modifierlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_modifierlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_modifierlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_modifierlookup.ModifierPatternCode = 
pc_modifierlookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_modifierlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_modifierlookup.SourceFile = The source file in which the entity is defined
pc_modifierlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_modifierlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_modifierlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_modifierlookup.UpdateTime = Timestamp when the object was last updated
pc_modifierlookup.UpdateUser = User who last updated the object
pc_modifierlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company
pc_modifierlookup.PolicyType = The policy type of this lookup
pc_modifierlookup.VehicleType = The vehicle type of this lookup
pc_modifierlookup.VehicleType = 

pcx_motorvehiclerecord = Motor vehicle records for the driver

pcx_motorvehiclerecord.ID = Internally managed primary key
pcx_motorvehiclerecord.Category = Deprecated in PC 7.0 - More detailed categorization of records
pcx_motorvehiclerecord.Code = Deprecated in PC 7.0 - Cited code or statute for the violation
pcx_motorvehiclerecord.ConvictionDate = Deprecated in PC 7.0 - Date of conviction or reinstatement of license
pcx_motorvehiclerecord.CreateTime = Timestamp when the object was created
pcx_motorvehiclerecord.CreateUser = User who created the object
pcx_motorvehiclerecord.Description = Deprecated in PC 7.0 - Short description of the motor vehicle record
pcx_motorvehiclerecord.Driver = Deprecated in PC 7.0 - The Driver to which this report belongs
pcx_motorvehiclerecord.Points = Deprecated in PC 7.0 - The number of points added to the driver's record for this violation
pcx_motorvehiclerecord.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_motorvehiclerecord.RecordType = Deprecated in PC 7.0 - Broad category of motor vehicle record
pcx_motorvehiclerecord.UpdateTime = Timestamp when the object was last updated
pcx_motorvehiclerecord.UpdateUser = User who last updated the object
pcx_motorvehiclerecord.ViolationDate = Deprecated in PC 7.0 - Date of violation or suspension of license

pc_nonrenewalexplanation = The non-renewal explanation chosen

pc_nonrenewalexplanation.ID = Internally managed primary key
pc_nonrenewalexplanation.Body = Explanation for the non-renewal
pc_nonrenewalexplanation.Code = The concise name of the non-renewal explanation pattern
pc_nonrenewalexplanation.CreateTime = Timestamp when the object was created
pc_nonrenewalexplanation.CreateUser = User who created the object
pc_nonrenewalexplanation.PolicyTerm = The policy term to which this non-renewal explanation belongs
pc_nonrenewalexplanation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_nonrenewalexplanation.UpdateTime = Timestamp when the object was last updated
pc_nonrenewalexplanation.UpdateUser = User who last updated the object

pc_nonrenewalexppattern = Lookup table for non-renewal explanation templates.  This table stores the templates available to choose from, and from these templates, a new non-renewal explanation entity is minted

pc_nonrenewalexppattern.ID = Internally managed primary key
pc_nonrenewalexppattern.Body = Explanation for the non-renewal
pc_nonrenewalexppattern.Code = The concise name of the non-renewal explanation pattern
pc_nonrenewalexppattern.CreateTime = Timestamp when the object was created
pc_nonrenewalexppattern.CreateUser = User who created the object
pc_nonrenewalexppattern.EffectiveDate = Effective date of this row.
pc_nonrenewalexppattern.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_nonrenewalexppattern.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_nonrenewalexppattern.UpdateTime = Timestamp when the object was last updated
pc_nonrenewalexppattern.UpdateUser = User who last updated the object

pc_note = Notes added by users

pc_note.ID = Internally managed primary key
pc_note.Account = Associated account
pc_note.Activity = The activity associated with the note.
pc_note.Author = User who wrote the note.
pc_note.AuthoringDate = Date on which the note was originally authored.  If null, the CreateTime seves this purpose.
pc_note.Body = Body of the note.
pc_note.Confidential = Whether the note is confidential.
pc_note.CreateTime = Timestamp when the object was created
pc_note.CreateUser = User who created the object
pc_note.Job = Associated job.
pc_note.Language = The language in which this note is created.
pc_note.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_note.Policy = Associated policy.
pc_note.PolicyPeriod = Associated Policy Period.
pc_note.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_note.SecurityType = Type of note; used for access-restriction purposes
pc_note.Subject = Subject or summary of the note.
pc_note.Topic = Topic to which the note belongs.
pc_note.UpdateTime = Timestamp when the object was last updated
pc_note.UpdateUser = User who last updated the object

pc_notificationconfig = Lookup table for determining state specific configuration information (i.e. notification period for cancellation or renewal)

pc_notificationconfig.ID = Internally managed primary key
pc_notificationconfig.ActionType = The notification action type to which this configuration applies
pc_notificationconfig.Category = The notification category to which this configuration applies
pc_notificationconfig.CreateTime = Timestamp when the object was created
pc_notificationconfig.CreateUser = User who created the object
pc_notificationconfig.EffectiveDate = Effective date of this row.
pc_notificationconfig.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_notificationconfig.Jurisdiction = The jurisdiction this configuration applies to
pc_notificationconfig.LeadTime = Value for this notification configuration in days
pc_notificationconfig.LineOfBusiness = Policy line pattern this applies to
pc_notificationconfig.PremiumIncreaseThreshold = Premium increase threshold percentage
pc_notificationconfig.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_notificationconfig.RateIncreaseThreshold = Rate increase threshold percentage
pc_notificationconfig.UpdateTime = Timestamp when the object was last updated
pc_notificationconfig.UpdateUser = User who last updated the object

pc_nullablecolumndatadist = Stores row count information for selected nullable columns.

pc_nullablecolumndatadist.ID = Internally managed primary key
pc_nullablecolumndatadist.NullableColName = Nullable column name.
pc_nullablecolumndatadist.NumNonnullValues = Number of non-null values.
pc_nullablecolumndatadist.NumValues = Total number of rows. We have this because column could be on a subtype
pc_nullablecolumndatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_nullablecolumndatadist.TableDataDist = TableDataDist for this object.

pc_offeringlookup = The Offering availability lookup type.

pc_offeringlookup.ID = Internally managed primary key
pc_offeringlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_offeringlookup.CreateTime = Timestamp when the object was created
pc_offeringlookup.CreateUser = User who created the object
pc_offeringlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_offeringlookup.IndustryCode = The industry code for which this lookup applies, or null if the lookup is not restricted by industry code
pc_offeringlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_offeringlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_offeringlookup.OfferingCode = 
pc_offeringlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_offeringlookup.SourceFile = The source file in which the entity is defined
pc_offeringlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_offeringlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_offeringlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_offeringlookup.UpdateTime = Timestamp when the object was last updated
pc_offeringlookup.UpdateUser = User who last updated the object

pc_officialid = 
      Represents the pairing of a given official ID number and a jurisdiction.  Examples of these would
      include the pairing of a state and a drivers license number or state tax ID number.  Multiple OfficialIDs
      can be associated with a given Contact.
    

pc_officialid.ID = Internally managed primary key
pc_officialid.Contact = 
pc_officialid.CreateTime = Timestamp when the object was created
pc_officialid.CreateUser = User who created the object
pc_officialid.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_officialid.OfficialIDType = The type of this official id.
pc_officialid.OfficialIDValue = This official id's value, such as a social security number or drivers' license number.
pc_officialid.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_officialid.State = Jurisdiction.
pc_officialid.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_officialid.UpdateTime = Timestamp when the object was last updated
pc_officialid.UpdateUser = User who last updated the object
pc_officialid.PatternCode = The pattern defining what kind of OfficialID this is

pc_officialidvalidationinfo = Entity for storing the state-specific validation information for BureauID/RiskID

pc_officialidvalidationinfo.ID = Internally managed primary key
pc_officialidvalidationinfo.CreateTime = Timestamp when the object was created
pc_officialidvalidationinfo.CreateUser = User who created the object
pc_officialidvalidationinfo.EffectiveDate = Effective date of this row.
pc_officialidvalidationinfo.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_officialidvalidationinfo.IDFormat = Regular expression that defines the valid format for this ID
pc_officialidvalidationinfo.IDFormatError = Error to display when format is violated
pc_officialidvalidationinfo.OfficialIdRequiredType = Is ID required, or optional
pc_officialidvalidationinfo.OfficialIDType = Official ID type
pc_officialidvalidationinfo.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_officialidvalidationinfo.State = State
pc_officialidvalidationinfo.UpdateTime = Timestamp when the object was last updated
pc_officialidvalidationinfo.UpdateUser = User who last updated the object

pc_organization = Defines an organization that has a hierarchy of groups

pc_organization.ID = Internally managed primary key
pc_organization.Carrier = Flag indicating whether this organization corresponds to the carrier itself.
pc_organization.Contact = Contact entry related to the organization.
pc_organization.CreateTime = Timestamp when the object was created
pc_organization.CreateUser = User who created the object
pc_organization.MasterAdmin = Flag indicating whether this organization is the superuser organization with admin powers over all organizations.
pc_organization.Name = The name of the organization.
pc_organization.NameKanji = The kanji name of the organization. Used only for Japanese and will be null otherwise.
pc_organization.ProducerStatus = The status of the external producer organization.
pc_organization.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_organization.Tier = The tier of the external producer organization.
pc_organization.Type = The type of the organization.
pc_organization.UpdateTime = Timestamp when the object was last updated
pc_organization.UpdateUser = User who last updated the object
pc_organization.AgencyBillPlans = Associated agency bill plans, one per currency
pc_organization.ZonesToAdmin = Link to joiner table for zones to admin.

pc_organizationunderwriter = Organizations (insurer, producers, etc) associated with an underwriter

pc_organizationunderwriter.ID = Internally managed primary key
pc_organizationunderwriter.Organization = Organization.
pc_organizationunderwriter.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_organizationunderwriter.Underwriter = Underwriter.

pc_OrganizationZoneAdmin = Join table between the organization and the zone, to see which zones an organization can admin over.

pc_OrganizationZoneAdmin.ID = Internally managed primary key
pc_OrganizationZoneAdmin.Country = The country to which the zone belongs.
pc_OrganizationZoneAdmin.CreateTime = Timestamp when the object was created
pc_OrganizationZoneAdmin.CreateUser = User who created the object
pc_OrganizationZoneAdmin.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_OrganizationZoneAdmin.Organization = Fk to the Organization
pc_OrganizationZoneAdmin.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_OrganizationZoneAdmin.UpdateTime = Timestamp when the object was last updated
pc_OrganizationZoneAdmin.UpdateUser = User who last updated the object
pc_OrganizationZoneAdmin.ZoneCode = Code of the zone
pc_OrganizationZoneAdmin.ZoneType = Type of zone.

pc_orggroup = null

pc_orggroup.ID = Internally managed primary key
pc_orggroup.ForeignEntity = 
pc_orggroup.Owner = 
pc_orggroup.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_pacededpremium = A PersonalAuto implementation of the RICededPremium delegate

pc_pacededpremium.ID = Internally managed primary key
pc_pacededpremium.CreateTime = Timestamp when the object was created
pc_pacededpremium.CreateUser = User who created the object
pc_pacededpremium.EffectiveDate = Effective date of this row.
pc_pacededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_pacededpremium.PACost = 
pc_pacededpremium.PolicyTerm = The policy term to which this ceding applies
pc_pacededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pacededpremium.RiskDate = Effective date of the associated risk
pc_pacededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_pacededpremium.UpdateTime = Timestamp when the object was last updated
pc_pacededpremium.UpdateUser = User who last updated the object
pc_pacededpremium.CedingHistory = 
pc_pacededpremium.CedingTransactions = 

pc_pacededpremiumhistory = A PersonalAuto implementation of the RICededPremiumHistory delegate

pc_pacededpremiumhistory.ID = Internally managed primary key
pc_pacededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_pacededpremiumhistory.CreateTime = Timestamp when the object was created
pc_pacededpremiumhistory.CreateUser = User who created the object
pc_pacededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_pacededpremiumhistory.PACededPremium = 
pc_pacededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pacededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_pacededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_pacededpremiumhistory.UpdateUser = User who last updated the object

pc_pacededpremiumtransaction = A PersonalAuto implementation of the RICededPremiumTransaction delegate

pc_pacededpremiumtransaction.ID = Internally managed primary key
pc_pacededpremiumtransaction.Agreement = The agreement being ceded to
pc_pacededpremiumtransaction.BasisGNP_amt = 
pc_pacededpremiumtransaction.BasisGNP_cur = 
pc_pacededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_pacededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_pacededpremiumtransaction.CededPremium_amt = 
pc_pacededpremiumtransaction.CededPremium_cur = 
pc_pacededpremiumtransaction.CededPremiumMarkup_amt = 
pc_pacededpremiumtransaction.CededPremiumMarkup_cur = 
pc_pacededpremiumtransaction.CededRiskAmount_amt = 
pc_pacededpremiumtransaction.CededRiskAmount_cur = 
pc_pacededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_pacededpremiumtransaction.Commission_amt = 
pc_pacededpremiumtransaction.Commission_cur = 
pc_pacededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_pacededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_pacededpremiumtransaction.CreateUser = User who created the object
pc_pacededpremiumtransaction.DatePosted = The date the transaction was created
pc_pacededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_pacededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_pacededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_pacededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_pacededpremiumtransaction.PACededPremium = 
pc_pacededpremiumtransaction.PACededPremiumHistory = 
pc_pacededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_pacededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_pacededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pacededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_pacededpremiumtransaction.UpdateUser = User who last updated the object

pc_pacost = A PersonalAuto unit of price for a period of time that should not be broken up any further.

pc_pacost.ID = Internally managed primary key
pc_pacost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_pacost.ActualAmount_amt = 
pc_pacost.ActualAmount_cur = 
pc_pacost.ActualAmountBilling_amt = 
pc_pacost.ActualAmountBilling_cur = 
pc_pacost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_pacost.ActualTermAmount_amt = 
pc_pacost.ActualTermAmount_cur = 
pc_pacost.ActualTermAmountBilling_amt = 
pc_pacost.ActualTermAmountBilling_cur = 
pc_pacost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_pacost.BranchValue = Link to root of effdated tree
pc_pacost.ChangeType = Type of change made to this row
pc_pacost.ChargeGroup = Custom group name to group charges together
pc_pacost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_pacost.CreateTime = Timestamp when the object was created
pc_pacost.CreateUser = User who created the object
pc_pacost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_pacost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_pacost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_pacost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_pacost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_pacost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_pacost.OverrideAmount_amt = 
pc_pacost.OverrideAmount_cur = 
pc_pacost.OverrideAmountBilling_amt = 
pc_pacost.OverrideAmountBilling_cur = 
pc_pacost.OverrideBaseRate = The user-specified override for the base rate.
pc_pacost.OverrideReason = Why the override is being applied.
pc_pacost.OverrideSource = Source of override, or null if none
pc_pacost.OverrideTermAmount_amt = 
pc_pacost.OverrideTermAmount_cur = 
pc_pacost.OverrideTermAmountBilling_amt = 
pc_pacost.OverrideTermAmountBilling_cur = 
pc_pacost.PersonalAutoLine = 
pc_pacost.PolicyFXRate = 
pc_pacost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_pacost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pacost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_pacost.RateBook = 
pc_pacost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_pacost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_pacost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_pacost.StandardAmount_amt = 
pc_pacost.StandardAmount_cur = 
pc_pacost.StandardAmountBilling_amt = 
pc_pacost.StandardAmountBilling_cur = 
pc_pacost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_pacost.StandardTermAmount_amt = 
pc_pacost.StandardTermAmount_cur = 
pc_pacost.StandardTermAmountBilling_amt = 
pc_pacost.StandardTermAmountBilling_cur = 
pc_pacost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_pacost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_pacost.UpdateTime = Timestamp when the object was last updated
pc_pacost.UpdateUser = User who last updated the object
pc_pacost.PersonalAutoCov = 
pc_pacost.PersonalVehicle = 
pc_pacost.PAPIPCovCostType = The type of PIP coverage where this cost applies
pc_pacost.PersonalVehicleCov = 

pc_pamodifier = A line-level modifier for Personal Auto

pc_pamodifier.ID = Internally managed primary key
pc_pamodifier.BooleanModifier = Boolean modifier
pc_pamodifier.BranchValue = Link to root of effdated tree
pc_pamodifier.ChangeType = Type of change made to this row
pc_pamodifier.CreateTime = Timestamp when the object was created
pc_pamodifier.CreateUser = User who created the object
pc_pamodifier.DateModifier = Date modifier
pc_pamodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_pamodifier.Eligible = Whether this modifier is eligible or not
pc_pamodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_pamodifier.Justification = Additional comment to justify the value of this modifier
pc_pamodifier.PALine = 
pc_pamodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_pamodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pamodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_pamodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_pamodifier.State = The state to attach rating information to.
pc_pamodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_pamodifier.TypeKeyModifier = Typekey modifier
pc_pamodifier.UpdateTime = Timestamp when the object was last updated
pc_pamodifier.UpdateUser = User who last updated the object
pc_pamodifier.ValueFinal = Whether this modifier's value is final or not
pc_pamodifier.PARateFactors = Individual components of the rating factor

pc_paratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_paratefactor.ID = Internally managed primary key
pc_paratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_paratefactor.BranchValue = Link to root of effdated tree
pc_paratefactor.ChangeType = Type of change made to this row
pc_paratefactor.CreateTime = Timestamp when the object was created
pc_paratefactor.CreateUser = User who created the object
pc_paratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_paratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_paratefactor.Justification = Additional comment to justify this rate factor
pc_paratefactor.PAModifier = 
pc_paratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_paratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_paratefactor.UpdateTime = Timestamp when the object was last updated
pc_paratefactor.UpdateUser = User who last updated the object

pc_patransaction = A transaction for the Personal Auto line

pc_patransaction.ID = Internally managed primary key
pc_patransaction.Amount_amt = 
pc_patransaction.Amount_cur = 
pc_patransaction.AmountBilling_amt = 
pc_patransaction.AmountBilling_cur = 
pc_patransaction.BranchValue = Link to root of effdated tree
pc_patransaction.ChangeType = Type of change made to this row
pc_patransaction.Charged = Whether or not this transaction amount should be charged.
pc_patransaction.CreateTime = Timestamp when the object was created
pc_patransaction.CreateUser = User who created the object
pc_patransaction.EffDate = The date on which the transaction becomes effective.
pc_patransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_patransaction.ExpDate = The date on which the transaction expires.
pc_patransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_patransaction.PACost = 
pc_patransaction.PolicyFXRate = 
pc_patransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_patransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_patransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_patransaction.UpdateTime = Timestamp when the object was last updated
pc_patransaction.UpdateUser = User who last updated the object
pc_patransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_patransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_pavehmodifier = A vehicle-level modifier for Personal Auto

pc_pavehmodifier.ID = Internally managed primary key
pc_pavehmodifier.BooleanModifier = Boolean modifier
pc_pavehmodifier.BranchValue = Link to root of effdated tree
pc_pavehmodifier.ChangeType = Type of change made to this row
pc_pavehmodifier.CreateTime = Timestamp when the object was created
pc_pavehmodifier.CreateUser = User who created the object
pc_pavehmodifier.DateModifier = Date modifier
pc_pavehmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_pavehmodifier.Eligible = Whether this modifier is eligible or not
pc_pavehmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_pavehmodifier.Justification = Additional comment to justify the value of this modifier
pc_pavehmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_pavehmodifier.PAVehicle = 
pc_pavehmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pavehmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_pavehmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_pavehmodifier.State = The state to attach rating information to.
pc_pavehmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_pavehmodifier.TypeKeyModifier = Typekey modifier
pc_pavehmodifier.UpdateTime = Timestamp when the object was last updated
pc_pavehmodifier.UpdateUser = User who last updated the object
pc_pavehmodifier.ValueFinal = Whether this modifier's value is final or not
pc_pavehmodifier.PAVehicleRateFactors = Individual components of the rating factor

pc_pavehratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_pavehratefactor.ID = Internally managed primary key
pc_pavehratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_pavehratefactor.BranchValue = Link to root of effdated tree
pc_pavehratefactor.ChangeType = Type of change made to this row
pc_pavehratefactor.CreateTime = Timestamp when the object was created
pc_pavehratefactor.CreateUser = User who created the object
pc_pavehratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_pavehratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_pavehratefactor.Justification = Additional comment to justify this rate factor
pc_pavehratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_pavehratefactor.PAVehicleModifier = 
pc_pavehratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pavehratefactor.UpdateTime = Timestamp when the object was last updated
pc_pavehratefactor.UpdateUser = User who last updated the object

pc_pmlockedentity = Stores the information necessary to verify the presence in the product model of a particula pattern or entity.

pc_pmlockedentity.ID = Internally managed primary key
pc_pmlockedentity.CreateTime = Timestamp when the object was created
pc_pmlockedentity.CreateUser = User who created the object
pc_pmlockedentity.EntityPublicID = The PublicID (i.e. code) of the entity
pc_pmlockedentity.EntityType = The entity (pattern) type
pc_pmlockedentity.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pmlockedentity.UpdateTime = Timestamp when the object was last updated
pc_pmlockedentity.UpdateUser = User who last updated the object
pc_pmlockedentity.Fields = The array of locked fields

pc_pmlockedfield = Stores the information necessary to verify that a certain field is set to a specified value.

pc_pmlockedfield.ID = Internally managed primary key
pc_pmlockedfield.CreateTime = Timestamp when the object was created
pc_pmlockedfield.CreateUser = User who created the object
pc_pmlockedfield.FieldName = The name of the field
pc_pmlockedfield.FieldValue = The required value of the field
pc_pmlockedfield.PMLockedEntity = 
pc_pmlockedfield.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pmlockedfield.UpdateTime = Timestamp when the object was last updated
pc_pmlockedfield.UpdateUser = User who last updated the object

pc_PRActiveWorkflow = null

pc_PRActiveWorkflow.ID = Internally managed primary key
pc_PRActiveWorkflow.ForeignEntity = 
pc_PRActiveWorkflow.Owner = 
pc_PRActiveWorkflow.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_parameter = For internal Guidewire use only.

pc_parameter.ID = Internally managed primary key
pc_parameter.BooleanValue = For a boolean parameter, the parameter value.
pc_parameter.ComponentType = Component defining the parameter, or null if it is a system-wide parameter.
pc_parameter.CreateTime = Timestamp when the object was created
pc_parameter.CreateUser = User who created the object
pc_parameter.DateValue = For a date or time parameter, the parameter value.
pc_parameter.IntValue = For an integer parameter, the parameter value.
pc_parameter.LongTextValue = For a long text parameter (clob), the parameter value.
pc_parameter.ParameterName = Name of the parameter
pc_parameter.ParameterType = Identifies the value type (string, longtext, integer, boolean, or date).
pc_parameter.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_parameter.StringValue = For a string parameter, the parameter value.
pc_parameter.UpdateTime = Timestamp when the object was last updated
pc_parameter.UpdateUser = User who last updated the object

pc_parentgroup = null

pc_parentgroup.ID = Internally managed primary key
pc_parentgroup.ForeignEntity = 
pc_parentgroup.Owner = 
pc_parentgroup.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_paymentplansummary = Payment plan summary info from billing system

pc_paymentplansummary.ID = Internally managed primary key
pc_paymentplansummary.BillingId = Stores the billing system's Public ID for this Payment Plan
pc_paymentplansummary.CreateTime = Timestamp when the object was created
pc_paymentplansummary.CreateUser = User who created the object
pc_paymentplansummary.DownPayment_amt = 
pc_paymentplansummary.DownPayment_cur = 
pc_paymentplansummary.Installment_amt = 
pc_paymentplansummary.Installment_cur = 
pc_paymentplansummary.InvoiceFrequency = The frequency of invoicing (weekly, every two weeks, monthly, etc.)
pc_paymentplansummary.Name = Name of this payment plan (only for Installments plans)
pc_paymentplansummary.Notes = Notes
pc_paymentplansummary.PaymentPlanType = The type of this payment plan (typically either Installments or Reporting)
pc_paymentplansummary.PolicyPeriod = Policy period where the plan summary resides
pc_paymentplansummary.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_paymentplansummary.ReportingPatternCode = The code of the pattern to use for creating and scheduling premium reports
pc_paymentplansummary.Total_amt = 
pc_paymentplansummary.Total_cur = 
pc_paymentplansummary.UpdateTime = Timestamp when the object was last updated
pc_paymentplansummary.UpdateUser = User who last updated the object

pc_pendingacctcontactroleupd = A pending update to an AccountContactRole.

pc_pendingacctcontactroleupd.ID = Internally managed primary key
pc_pendingacctcontactroleupd.CreateTime = Timestamp when the object was created
pc_pendingacctcontactroleupd.CreateUser = User who created the object
pc_pendingacctcontactroleupd.Job = 
pc_pendingacctcontactroleupd.PendingUpdateTime = The time when this pending update should be applied to the target entity.
pc_pendingacctcontactroleupd.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pendingacctcontactroleupd.RelationshipTitle = The relationship for an OwnerOfficer.
pc_pendingacctcontactroleupd.RelationshipTitleIsNull = True if the RelationshipTitle field should be set to null.
pc_pendingacctcontactroleupd.TargetAccountContactRole = The account contact to write these values to.
pc_pendingacctcontactroleupd.UpdateTime = Timestamp when the object was last updated
pc_pendingacctcontactroleupd.UpdateUser = User who last updated the object

pc_pendingaddressupd = A pending update to an Address.

pc_pendingaddressupd.ID = Internally managed primary key
pc_pendingaddressupd.AddressLine1 = Address Line 1.
pc_pendingaddressupd.AddressLine1IsNull = True if Address Line 1 should be overwritten with null.
pc_pendingaddressupd.AddressLine1Kanji = Address Line 1 Kanji.
pc_pendingaddressupd.AddressLine1KanjiIsNull = True if Address Line 1 Kanji should be overwritten with null.
pc_pendingaddressupd.AddressLine2 = Address Line 2
pc_pendingaddressupd.AddressLine2IsNull = True if Address Line 2 should be overwritten with null.
pc_pendingaddressupd.AddressLine2Kanji = Address Line 2 Kanji.
pc_pendingaddressupd.AddressLine2KanjiIsNull = True if Address Line 2 Kanji should be overwritten with null.
pc_pendingaddressupd.AddressLine3 = Address Line 3
pc_pendingaddressupd.AddressLine3IsNull = True if Address Line 3 should be overwritten with null.
pc_pendingaddressupd.AddressType = Type of this address record.
pc_pendingaddressupd.AddressTypeIsNull = True if AddressType should be overwritten with null.
pc_pendingaddressupd.CEDEX = CEDEX: Special business mail delivery flag (France)
pc_pendingaddressupd.CEDEXBureau = CEDEX: Special business mail delivery bureau (France)
pc_pendingaddressupd.CEDEXBureauIsNull = True if CEDEX Bureau should be overwritten with null.
pc_pendingaddressupd.CEDEXIsNull = True if CEDEX should be overwritten with null.
pc_pendingaddressupd.City = City.
pc_pendingaddressupd.CityIsNull = True if City should be overwritten with null.
pc_pendingaddressupd.CityKanji = City Kanji
pc_pendingaddressupd.CityKanjiIsNull = True if City Kanji should be overwritten with null.
pc_pendingaddressupd.Country = Country.
pc_pendingaddressupd.CountryIsNull = True if Country should be overwritten with null.
pc_pendingaddressupd.County = County.
pc_pendingaddressupd.CountyIsNull = True if County should be overwritten with null.
pc_pendingaddressupd.CreateTime = Timestamp when the object was created
pc_pendingaddressupd.CreateUser = User who created the object
pc_pendingaddressupd.Description = Address Description
pc_pendingaddressupd.DescriptionIsNull = True if Description should be overwritten with null.
pc_pendingaddressupd.Job = 
pc_pendingaddressupd.PendingUpdateTime = The time when this pending update should be applied to the target entity.
pc_pendingaddressupd.PostalCode = Postal code; string to handle Zip+4 and international codes.
pc_pendingaddressupd.PostalCodeIsNull = True if PostalCode should be overwritten with null.
pc_pendingaddressupd.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pendingaddressupd.State = State.
pc_pendingaddressupd.StateIsNull = True if the State should be overwritten with null.
pc_pendingaddressupd.TargetAddress = 
pc_pendingaddressupd.UpdateTime = Timestamp when the object was last updated
pc_pendingaddressupd.UpdateUser = User who last updated the object

pc_pendingcontactupd = A pending update to an entity.Contact.

pc_pendingcontactupd.ID = Internally managed primary key
pc_pendingcontactupd.CompanyName = The role's name, if it is a company, null otherwise.
pc_pendingcontactupd.CompanyNameIsNull = True if the CompanyName should be overwritten with null.
pc_pendingcontactupd.CompanyNameKanji = The role's kanji name, if it is a company, null otherwise.
pc_pendingcontactupd.CompanyNameKanjiIsNull = True if the CompanyNameKanji should be overwritten with null.
pc_pendingcontactupd.CreateTime = Timestamp when the object was created
pc_pendingcontactupd.CreateUser = User who created the object
pc_pendingcontactupd.DateOfBirth = Date of birth.
pc_pendingcontactupd.DateOfBirthIsNull = True if the DateOfBirth should be overwritten with null.
pc_pendingcontactupd.FirstName = The role's first name, if it is a person, null otherwise.
pc_pendingcontactupd.FirstNameIsNull = True if the FirstName should be overwritten with null.
pc_pendingcontactupd.FirstNameKanji = The role's first name kanji, if it is a person, null otherwise.
pc_pendingcontactupd.FirstNameKanjiIsNull = True if the FirstNameKanji should be overwritten with null.
pc_pendingcontactupd.Job = 
pc_pendingcontactupd.LastName = The role's last name, if it is a person, null otherwise.
pc_pendingcontactupd.LastNameIsNull = True if the LastName should be overwritten with null.
pc_pendingcontactupd.LastNameKanji = The role's last name kanji, if it is a person, null otherwise.
pc_pendingcontactupd.LastNameKanjiIsNull = True if the LastNameKanji should be overwritten with null.
pc_pendingcontactupd.LicenseNumber = Driver's license number.
pc_pendingcontactupd.LicenseNumberIsNull = True if the LicenseNumber should be overwritten with null.
pc_pendingcontactupd.LicenseState = Driver's license state.
pc_pendingcontactupd.LicenseStateIsNull = True if the LicenseState should be overwritten with null.
pc_pendingcontactupd.MaritalStatus = Marital status.
pc_pendingcontactupd.MaritalStatusIsNull = True if the MaritalStatus should be overwritten with null.
pc_pendingcontactupd.Particle = Particle for (French) name
pc_pendingcontactupd.ParticleIsNull = True if the Particle should be overwritten with null.
pc_pendingcontactupd.PendingUpdateTime = The time when this pending update should be applied to the target entity.
pc_pendingcontactupd.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_pendingcontactupd.TargetContact = The contact to write these values to.
pc_pendingcontactupd.UpdateTime = Timestamp when the object was last updated
pc_pendingcontactupd.UpdateUser = User who last updated the object

pc_periodanswer = Links policy period and answer references - answers are persisted text responses to questions in the UI. Specific to PolicyCenter.

pc_periodanswer.ID = Internally managed primary key
pc_periodanswer.BooleanAnswer = Yes / no component of answer.
pc_periodanswer.BranchValue = Link to root of effdated tree
pc_periodanswer.ChangeType = Type of change made to this row
pc_periodanswer.ChoiceAnswerCode = Choice of the answer.
pc_periodanswer.CreateTime = Timestamp when the object was created
pc_periodanswer.CreateUser = User who created the object
pc_periodanswer.DateAnswer = The answer in date form.
pc_periodanswer.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_periodanswer.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_periodanswer.IntegerAnswer = Numeric component of answer.
pc_periodanswer.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_periodanswer.QuestionCode = Question that this answer answers
pc_periodanswer.TextAnswer = Either the answer's text.
pc_periodanswer.UpdateTime = Timestamp when the object was last updated
pc_periodanswer.UpdateUser = User who last updated the object

pc_palinecond = A line-level condition for Personal Auto

pc_palinecond.ID = Internally managed primary key
pc_palinecond.BranchValue = Link to root of effdated tree
pc_palinecond.ChangeType = Type of change made to this row
pc_palinecond.CreateTime = Timestamp when the object was created
pc_palinecond.CreateUser = User who created the object
pc_palinecond.Currency = Currency associated with the policy condition
pc_palinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_palinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_palinecond.PALine = 
pc_palinecond.PatternCode = The pattern defining what kind of Condition this is
pc_palinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_palinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_palinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_palinecond.UpdateTime = Timestamp when the object was last updated
pc_palinecond.UpdateUser = User who last updated the object

pc_personalautocov = A line-level coverage for Personal Auto

pc_personalautocov.ID = Internally managed primary key
pc_personalautocov.BranchValue = Link to root of effdated tree
pc_personalautocov.ChangeType = Type of change made to this row
pc_personalautocov.CreateTime = Timestamp when the object was created
pc_personalautocov.CreateUser = User who created the object
pc_personalautocov.Currency = Currency associated with the coverage
pc_personalautocov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_personalautocov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_personalautocov.PALine = 
pc_personalautocov.PatternCode = The pattern defining what kind of Coverage this is
pc_personalautocov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_personalautocov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_personalautocov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_personalautocov.UpdateTime = Timestamp when the object was last updated
pc_personalautocov.UpdateUser = User who last updated the object
pc_personalautocov.Costs = 

pc_palineexcl = A line-level exclusion for Personal Auto

pc_palineexcl.ID = Internally managed primary key
pc_palineexcl.BranchValue = Link to root of effdated tree
pc_palineexcl.ChangeType = Type of change made to this row
pc_palineexcl.CreateTime = Timestamp when the object was created
pc_palineexcl.CreateUser = User who created the object
pc_palineexcl.Currency = Currency associated with the Exclusion
pc_palineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_palineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_palineexcl.PALine = 
pc_palineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_palineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_palineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_palineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_palineexcl.UpdateTime = Timestamp when the object was last updated
pc_palineexcl.UpdateUser = User who last updated the object

pc_personalvehicle = Personal Vehicle

pc_personalvehicle.ID = Internally managed primary key
pc_personalvehicle.AnnualMileage = Annual miles for this vehicle
pc_personalvehicle.BasisAmount = Basis Amount
pc_personalvehicle.BodyType = Body type of the vehicle.
pc_personalvehicle.BranchValue = Link to root of effdated tree
pc_personalvehicle.ChangeType = Type of change made to this row
pc_personalvehicle.Color = Color of the vehicle.
pc_personalvehicle.CommutingMiles = Daily one-way commuting mileage
pc_personalvehicle.CostNew_amt = 
pc_personalvehicle.CostNew_cur = 
pc_personalvehicle.CreateTime = Timestamp when the object was created
pc_personalvehicle.CreateUser = User who created the object
pc_personalvehicle.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_personalvehicle.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_personalvehicle.GarageLocation = Location of vehicle.
pc_personalvehicle.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_personalvehicle.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_personalvehicle.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_personalvehicle.LeaseOrRent = If this vehicle is leased or rented.
pc_personalvehicle.LengthOfLease = The lease period of a leased or a rented vehicle.
pc_personalvehicle.LicensePlate = License plate of the vehicle.
pc_personalvehicle.LicenseState = State in which the vehicle is licensed.
pc_personalvehicle.Make = Make of the vehicle.
pc_personalvehicle.Model = Model of the vehicle.
pc_personalvehicle.PALine = 
pc_personalvehicle.PipCovered = Indicate how PIP should be rated
pc_personalvehicle.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_personalvehicle.PrimaryUse = Primary use of the vehicle
pc_personalvehicle.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_personalvehicle.QuickQuoteNumber = The vehicle number for quick quote
pc_personalvehicle.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_personalvehicle.StatedValue_amt = 
pc_personalvehicle.StatedValue_cur = 
pc_personalvehicle.UpdateTime = Timestamp when the object was last updated
pc_personalvehicle.UpdateUser = User who last updated the object
pc_personalvehicle.VehicleNumber = Vehicle number
pc_personalvehicle.VehicleType = Type of the vehicle.
pc_personalvehicle.Vin = VIN (vehicle identification number) of the vehicle.
pc_personalvehicle.Year = Vehicle model year
pc_personalvehicle.AdditionalInterests = Third parties with an additional interest in the vehicle
pc_personalvehicle.Costs = 
pc_personalvehicle.Coverages = All coverages that apply directly to this vehicle.
pc_personalvehicle.Drivers = All drivers associated with this vehicle
pc_personalvehicle.PAVehicleModifiers = Rating info for the vehicle

pc_personalvehiclecov = A vehicle-level coverage for Personal Auto

pc_personalvehiclecov.ID = Internally managed primary key
pc_personalvehiclecov.BranchValue = Link to root of effdated tree
pc_personalvehiclecov.ChangeType = Type of change made to this row
pc_personalvehiclecov.CreateTime = Timestamp when the object was created
pc_personalvehiclecov.CreateUser = User who created the object
pc_personalvehiclecov.Currency = Currency associated with the coverage
pc_personalvehiclecov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_personalvehiclecov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_personalvehiclecov.PatternCode = The pattern defining what kind of Coverage this is
pc_personalvehiclecov.PersonalVehicle = 
pc_personalvehiclecov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_personalvehiclecov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_personalvehiclecov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_personalvehiclecov.UpdateTime = Timestamp when the object was last updated
pc_personalvehiclecov.UpdateUser = User who last updated the object
pc_personalvehiclecov.Costs = 

pc_phonenormalizerworkitem = Phone Normalizer WorkItem implementation. This should work for most work queues.

pc_phonenormalizerworkitem.ID = Internally managed primary key
pc_phonenormalizerworkitem.Attempts = 
pc_phonenormalizerworkitem.CheckedOutBy = 
pc_phonenormalizerworkitem.CreationTime = 
pc_phonenormalizerworkitem.EntityTypeName = Entity name for the associated ID
pc_phonenormalizerworkitem.Exception = Stack trace of the exception
pc_phonenormalizerworkitem.LastUpdateTime = 
pc_phonenormalizerworkitem.Priority = 
pc_phonenormalizerworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_phonenormalizerworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_phonenormalizerworkitem.QueueType = The queue.
pc_phonenormalizerworkitem.Status = Status of this workitem.

pc_policy = Policy attributes including account, group and user assignment, product and policy type

pc_policy.ID = Internally managed primary key
pc_policy.Account = The Account to which this policy belongs.  Note that getting the value of this foreign key may result in the Account being re-retrieved if it is a non-SOR account.
pc_policy.ArchiveDate = When archiving was attempted on the root. Null if we never attempted to archive it.
pc_policy.ArchiveFailure = Short version of the reason for a failure to archive
pc_policy.ArchiveFailureDetails = Full details of archive failure
pc_policy.ArchiveSchemaInfo = Schema version at which the root was archived or null if it was not archived
pc_policy.ArchiveState = The archive state of the graph
pc_policy.CreateTime = Timestamp when the object was created
pc_policy.CreateUser = User who created the object
pc_policy.DoNotArchive = Do not archive any of the terms for this Policy. Terms that are already archived will not be automatically retrieved.
pc_policy.DoNotPurge = Do not purge any jobs or policy periods for this policy.
pc_policy.ExcludedFromArchive = Indicate if this entity should be excluded from archiving
pc_policy.ExcludeReason = Reason for excluding or skipping the entity from archiving. If the ExcludeFromArchive bit is set, this gives the reason for excluding. Else, if this is not null, it is the reason for skipping.
pc_policy.IssueDate = The date on which this policy was issued by the issuing job.
pc_policy.LossHistoryType = How the loss history is described for this policy
pc_policy.MovedPolicySourceAccount = The Account to which this policy comes from.  This field is populated if the policy is moved from other account.
pc_policy.NumPriorLosses = The number of losses. Only applicable for a loss history type of 'attached'.
pc_policy.OriginalEffectiveDate = The date on which this policy was originally issued or bound.
pc_policy.PackageRisk = Package Risk Type
pc_policy.PrimaryLanguage = The policy's preferred language
pc_policy.PrimaryLocale = The policy's preferred locale
pc_policy.PriorPremiums_amt = 
pc_policy.PriorPremiums_cur = 
pc_policy.PriorTotalIncurred_amt = 
pc_policy.PriorTotalIncurred_cur = 
pc_policy.ProducerCodeOfService = The producer code that manages this policy and can modify it.  If external user use producer code security, the user must have this producer code.
pc_policy.ProductCode = The Product defining what kind of Policy this is
pc_policy.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policy.UpdateTime = Timestamp when the object was last updated
pc_policy.UpdateUser = User who last updated the object
pc_policy.IssueHistories = History of changes to all UW issues associated with this policy
pc_policy.Jobs = Jobs of this policy.
pc_policy.Periods = Periods of this policy.
pc_policy.PriorLosses = Loss history detail entries. Only applicable for a loss history type of 'manually entered'.
pc_policy.PriorPolicies = Prior policy information for this policyholder.
pc_policy.RoleAssignments = Role Assignments for this bean.
pc_policy.UWReferralReasons = Referral reasons of the policy

pc_policyaddlinsureddetail = A type of Policy Additional Insured on a Line.

pc_policyaddlinsureddetail.ID = Internally managed primary key
pc_policyaddlinsureddetail.AdditionalInsuredType = Insured Type
pc_policyaddlinsureddetail.BranchValue = Link to root of effdated tree
pc_policyaddlinsureddetail.ChangeType = Type of change made to this row
pc_policyaddlinsureddetail.CreateTime = Timestamp when the object was created
pc_policyaddlinsureddetail.CreateUser = User who created the object
pc_policyaddlinsureddetail.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policyaddlinsureddetail.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policyaddlinsureddetail.PolicyAddlInsured = The policy additional insured this policy additional insured type is associated with.
pc_policyaddlinsureddetail.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyaddlinsureddetail.UpdateTime = Timestamp when the object was last updated
pc_policyaddlinsureddetail.UpdateUser = User who last updated the object

pc_policyaddress = Policy address specific information.

pc_policyaddress.ID = Internally managed primary key
pc_policyaddress.Address = The address this policy address may be synced with.  While the policy address contains policy contract information, the address contains shared role information.
pc_policyaddress.BranchValue = Link to root of effdated tree
pc_policyaddress.CEDEXBureauInternal = CEDEX: Special business mail delivery bureau (France)
pc_policyaddress.CEDEXInternal = CEDEX: Special business mail delivery flag (France)
pc_policyaddress.ChangeType = Type of change made to this row
pc_policyaddress.CreateTime = Timestamp when the object was created
pc_policyaddress.CreateUser = User who created the object
pc_policyaddress.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policyaddress.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policyaddress.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyaddress.UpdateTime = Timestamp when the object was last updated
pc_policyaddress.UpdateUser = User who last updated the object

pc_policycontactrole = A role that a contact plays within a policy period.

pc_policycontactrole.ID = Internally managed primary key
pc_policycontactrole.AccountContactRole = The account contact role this policy contact role may be synced with.  While the policy contact role contains policy contract information, the account contact role contains shared role information.
pc_policycontactrole.BranchValue = Link to root of effdated tree
pc_policycontactrole.ChangeType = Type of change made to this row
pc_policycontactrole.ContactDenorm = The PolicyContactRole.AccountContactRole.AccountContact.Contact (denormalization).
pc_policycontactrole.CreateTime = Timestamp when the object was created
pc_policycontactrole.CreateUser = User who created the object
pc_policycontactrole.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policycontactrole.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policycontactrole.ParticleInternal = Particle for (French) name
pc_policycontactrole.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policycontactrole.SeqNumber = The contact sequence number
pc_policycontactrole.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_policycontactrole.UpdateTime = Timestamp when the object was last updated
pc_policycontactrole.UpdateUser = User who last updated the object
pc_policycontactrole.BusinessAutoLine = The Commercial Auto policy line this contact role is associated with.
pc_policycontactrole.BusinessOwnersLine = The Business Owners policy line this contact role is associated with.
pc_policycontactrole.CommercialPropertyLine = The Commercial Property policy line this contact role is associated with.
pc_policycontactrole.GeneralLiabilityLine = The General Liability policy line this contact role is associated with.
pc_policycontactrole.InlandMarineLine = The Inland Marine policy line this contact role is associated with.
pc_policycontactrole.PersonalAutoLine = The Personal Auto policy line this contact role is associated with.
pc_policycontactrole.Relationship = The relationship to the primary named insured.
pc_policycontactrole.PolicyAdditionalInsuredDetails = 
pc_policycontactrole.PolicyLine = The policy line this policy additional insured role is associated with.
pc_policycontactrole.AdditionalInterestDetails = Details of how this Additional Interest relates to items of interest on the Policy (e.g., a PAVehicle
pc_policycontactrole.ApplicableGoodDriverDiscount = Indicates whether this driver qualifies for a Good Driver discount
pc_policycontactrole.DoNotOrderMVR = Indicates whether MVR records can be ordered for this driver
pc_policycontactrole.NumberOfAccidents = Number of accidents updated by the Agent
pc_policycontactrole.NumberOfViolations = Number of violations updated by the Agent
pc_policycontactrole.QuickQuoteNumber = The driver number for quick quote
pc_policycontactrole.VehicleDrivers = The Vehicles that this Driver drives
pc_policycontactrole.LocationNamedInsureds = The named insured covered at this location.
pc_policycontactrole.ClassCode = Class Code of this contact
pc_policycontactrole.Included = Is this contact included in this policy?
pc_policycontactrole.OwnershipPct = Ownership percentage
pc_policycontactrole.State = The state in which this contact is definied
pc_policycontactrole.Details = 
pc_policycontactrole.WorkersCompLine = The workers comp policy line this contact role is associated with.

pc_policydrivermvr = The Motor Vehicle Record summary data for this policy driver.

pc_policydrivermvr.ID = Internally managed primary key
pc_policydrivermvr.BranchValue = Link to root of effdated tree
pc_policydrivermvr.ChangeType = Type of change made to this row
pc_policydrivermvr.CreateTime = Timestamp when the object was created
pc_policydrivermvr.CreateUser = User who created the object
pc_policydrivermvr.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policydrivermvr.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policydrivermvr.InternalRequestID = Internal Request identifier.
pc_policydrivermvr.NumberOfAccidents = Number of accidents in the Motor Vehicle Record.
pc_policydrivermvr.NumberOfViolations = Number of violations in the Motor Vehicle Record.
pc_policydrivermvr.OrderStatus = Order status
pc_policydrivermvr.PersonalAutoLine = The policy line
pc_policydrivermvr.Points = Total points assigned by the DMV to the driver
pc_policydrivermvr.PolicyDriver = The driver.
pc_policydrivermvr.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policydrivermvr.StatusDate = Date of the last status change.
pc_policydrivermvr.UpdateTime = Timestamp when the object was last updated
pc_policydrivermvr.UpdateUser = User who last updated the object

pc_policyregistry = null

pc_policyregistry.ID = Internally managed primary key
pc_policyregistry.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyregistry.TableName = 

pc_policyexception = 
    Records the action of the policy exception monitor. Each PolicyPeriod in the system has, at most, one PolicyException instance
        indicating the last time we ran policy exception rules ran on the PolicyPeriod.
  

pc_policyexception.ID = Internally managed primary key
pc_policyexception.ExCheckTime = The last time at which policy exception rules were run on the PolicyPeriod.
pc_policyexception.PolicyPeriod = A foreign key to the PolicyPeriod.
pc_policyexception.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_policyfxrate = Policy Foreign Exchange Rate

pc_policyfxrate.ID = Internally managed primary key
pc_policyfxrate.CreateTime = Timestamp when the object was created
pc_policyfxrate.CreateUser = User who created the object
pc_policyfxrate.FromCurrency = Base currency or first currency in currency pair
pc_policyfxrate.Market = The FXRateMarket for which the rate applies
pc_policyfxrate.MarketTime = The point in time when the market indicated the rate was applicable
pc_policyfxrate.PolicyPeriod = The policy period to which this foreign exchange rate belongs.
pc_policyfxrate.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyfxrate.Rate = The exchange spot rate at which a currency pair can be bought or sold
pc_policyfxrate.RetrievedAt = The point in time when the quotation was obtained from an external source
pc_policyfxrate.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_policyfxrate.ToCurrency = quote currency or second currency in currency pair
pc_policyfxrate.UpdateTime = Timestamp when the object was last updated
pc_policyfxrate.UpdateUser = User who last updated the object

pc_policyhold = Policy hold definition (rules, regions, etc.)

pc_policyhold.ID = Internally managed primary key
pc_policyhold.CreateTime = Timestamp when the object was created
pc_policyhold.CreateUser = User who created the object
pc_policyhold.Description = A description of the policy hold.
pc_policyhold.EndDate = The end date for the hold.
pc_policyhold.HoldType = The type of the hold (ie., uw hold or regulatory hold)
pc_policyhold.IssueType = The uw issue that will be raised when the hold conditions are met.
pc_policyhold.PolicyHoldCode = The unique code of the policy hold that will be used to raise uw issues.
pc_policyhold.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyhold.StartDate = The start date for the hold.
pc_policyhold.UpdateTime = Timestamp when the object was last updated
pc_policyhold.UpdateUser = User who last updated the object
pc_policyhold.UWIssueLongDesc = The long description of the selected uw issue.
pc_policyhold.HeldJobs = Jobs that are held by this policy hold along with the last time they were evaluated.
pc_policyhold.PolicyHoldZones = The zones that define this policy hold.
pc_policyhold.Rules = The list of specific rules for this Policy Hold.

pc_policyholdjob = Contains a policy hold and job pair, indicating the last time the job was evaluated against the policy hold.

pc_policyholdjob.ID = Internally managed primary key
pc_policyholdjob.Job = A foreign key to the job.
pc_policyholdjob.LastEvalTime = The last time this job was evaluated against this policy hold.
pc_policyholdjob.Period = A foreign key to the period.
pc_policyholdjob.PolicyHold = A foreign key to the policy hold.
pc_policyholdjob.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_policyholdrule = Rules for a policy hold

pc_policyholdrule.ID = Internally managed primary key
pc_policyholdrule.CovPatternCode = The coverage pattern associated with this rule
pc_policyholdrule.CreateTime = Timestamp when the object was created
pc_policyholdrule.CreateUser = User who created the object
pc_policyholdrule.JobDateType = The date type (effective, written, reference) used to determine whether the job falls within the dates of the hold
pc_policyholdrule.JobType = The type of job associated with this rule
pc_policyholdrule.PolicyHold = The policy hold containing this rule
pc_policyholdrule.PolicyLineType = The type of policy line associated with this rule
pc_policyholdrule.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyholdrule.UpdateTime = Timestamp when the object was last updated
pc_policyholdrule.UpdateUser = User who last updated the object

pc_policyholdzone = A zone of a policy hold. It contains the zone code, the zone type and the country to which the region belongs.

pc_policyholdzone.ID = Internally managed primary key
pc_policyholdzone.Code = The code for this zone, this is the value that should be used for lookups.
pc_policyholdzone.Country = The country to which the zone belongs.
pc_policyholdzone.CreateTime = Timestamp when the object was created
pc_policyholdzone.CreateUser = User who created the object
pc_policyholdzone.PolicyHold = The policy hold containing this zone.
pc_policyholdzone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyholdzone.UpdateTime = Timestamp when the object was last updated
pc_policyholdzone.UpdateUser = User who last updated the object
pc_policyholdzone.ZoneType = Type of zone.

pc_polholddesc_l10n = null

pc_polholddesc_l10n.ID = Internally managed primary key
pc_polholddesc_l10n.Language = 
pc_polholddesc_l10n.Owner = 
pc_polholddesc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_polholddesc_l10n.Value = 

pc_polholdlong_l10n = null

pc_polholdlong_l10n.ID = Internally managed primary key
pc_polholdlong_l10n.Language = 
pc_polholdlong_l10n.Owner = 
pc_polholdlong_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_polholdlong_l10n.Value = 

pc_policyline = A line of insurance (e.g. auto, property, etc.) and selected policy line level attributes (i.e. attributes necessary, but not sufficient to rate)

pc_policyline.ID = Internally managed primary key
pc_policyline.BranchValue = Link to root of effdated tree
pc_policyline.ChangeType = Type of change made to this row
pc_policyline.CreateTime = Timestamp when the object was created
pc_policyline.CreateUser = User who created the object
pc_policyline.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policyline.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policyline.MinimumPremium = The minimum premium required for the policy line.
pc_policyline.NumAddInsured = The number of additional insureds. For Quick Quotes users enter just the number additional insureds instead of all the details
pc_policyline.PatternCode = The pattern defining what kind of PolicyLine this is
pc_policyline.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyline.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_policyline.UpdateTime = Timestamp when the object was last updated
pc_policyline.UpdateUser = User who last updated the object
pc_policyline.AdditionalInsureds = 
pc_policyline.CoverageSymbolGroups = Groups of coverage symbols on this policy line
pc_policyline.DiagnosticRatingWorksheets = A list of DiagnosticRatingWorksheet entities related to this PolicyLine
pc_policyline.LineAnswers = Set of answers for this policyline.
pc_policyline.AutoSymbolsManualEditDate = Date when the selection of auto symbols was last manually edited
pc_policyline.BACosts = 
pc_policyline.BALineConditions = Line-level conditions for Commercial Auto.
pc_policyline.BALineCoverages = Line-level coverages for Commercial Auto.
pc_policyline.BALineExclusions = Line-level exclusions for Commercial Auto.
pc_policyline.BAModifiers = Rating info for the line.
pc_policyline.BusinessVehicleAutoNumberSeq = Sequence to autonumber vehicles
pc_policyline.CustomAutoSymbolDesc = Description of custom covered auto symbol.
pc_policyline.Drivers = Drivers on this policy line.
pc_policyline.Fleet = Vehicle fleet designation.
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.Jurisdictions = 
pc_policyline.PolicyType = Type of Commercial Auto policy.
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.Vehicles = Vehicles on this policy line.
pc_policyline.BlanketType = Blanket Type
pc_policyline.BOPCosts = 
pc_policyline.BOPLineConditions = Line-level conditions for Business Owners.
pc_policyline.BOPLineCoverages = Line-level coverages for Business Owners.
pc_policyline.BOPLineExclusions = Line-level exclusions for Business Owners.
pc_policyline.BOPLocations = Locations on this policy line.
pc_policyline.BOPModifiers = Rating info for the line.
pc_policyline.BOPScheduledEquipments = List of Scheduled Equipment for this policy line.
pc_policyline.EquipmentAutoNumberSeq = Sequence to autonumber tools
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.SmallBusinessType = Small Business Type
pc_policyline.ViewBundledCoverages = Display or hide bundled coverages
pc_policyline.CPBlanketAutoNumberSeq = Sequence to autonumber cp blanket
pc_policyline.CPBlankets = CP Blankets on this policy line.
pc_policyline.CPCosts = 
pc_policyline.CPLineConditions = Line-level conditions for Commercial Property.
pc_policyline.CPLineCoverages = Line-level coverages for Commercial Property.
pc_policyline.CPLineExclusions = Line-level exclusions for Commercial Property.
pc_policyline.CPLocations = Locations on this policy line.
pc_policyline.CPModifiers = Rating inputs for the line.
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.ClaimsMadeOrigEffDate = Claims made original effective date
pc_policyline.Exposures = Exposures covered by this policy line
pc_policyline.GLCosts = 
pc_policyline.GLCoverageForm = Form of coverage (e.g. Occurrence, Claims Made)
pc_policyline.GLLineConditions = Line-level conditions for General Liability.
pc_policyline.GLLineCoverages = Line-level coverages for General Liability.
pc_policyline.GLLineExclusions = Line-level exclusions for General Liability.
pc_policyline.GLModifiers = Rating Modifiers for this policy line
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.LocationLimits = Do limits apply by location/project?
pc_policyline.PollutionCleanupExp = User selection for pollution cleanup expense, associated with Pollution liability coverage
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.RetroactiveDate = Retroactive date for claims made.
pc_policyline.SplitLimits = Do split BI/PD split limits apply?
pc_policyline.IMCosts = 
pc_policyline.IMCoverageParts = Coverage Parts for Inland Marine policy line.
pc_policyline.IMLocations = Locations on this policy line.
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.PACosts = 
pc_policyline.PALineConditions = Line-level conditions for Personal Auto.
pc_policyline.PALineCoverages = Line-level coverages for Personal Auto.
pc_policyline.PALineExclusions = Line-level exclusions for Personal Auto.
pc_policyline.PAModifiers = Rating info for the line.
pc_policyline.PersonalVehicleAutoNumberSeq = Sequence to autonumber vehicles
pc_policyline.PolicyDriverMVRs = MVRs for all the drivers on this policy line.
pc_policyline.PolicyDrivers = Drivers on this policy line.
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.Vehicles = Vehicles on this policy line.
pc_policyline.GoverningClass = Governing Class Code of policy line.
pc_policyline.InclusionPersons = Included/excluded individuals.
pc_policyline.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_policyline.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_policyline.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_policyline.Jurisdictions = 
pc_policyline.ManuscriptOptionDesc = The description of the manuscript endorsement
pc_policyline.ManuscriptPremium_amt = 
pc_policyline.ManuscriptPremium_cur = 
pc_policyline.PolicyLaborClients = Employees that are leased by a company/person from another.
pc_policyline.PolicyLaborContractors = Employees that are contracted by a company/person to another.
pc_policyline.PolicyOwnerOfficers = Owner/officers on this line.
pc_policyline.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_policyline.ReferenceDateInternal = Internal field for storing the reference date of this entity on bound policy periods.
pc_policyline.WCAircraftSeats = 
pc_policyline.WCCosts = 
pc_policyline.WCCoveredEmployeeBases = 
pc_policyline.WCCoveredEmployees = 
pc_policyline.WCExcludedWorkplaces = 
pc_policyline.WCFedCoveredEmployees = 
pc_policyline.WCLineConditions = Line-level conditions for Workers' Comp.
pc_policyline.WCLineCoverages = Line-level coverages for Workers' Comp.
pc_policyline.WCLineExclusions = Line-level exclusions for Workers' Comp.
pc_policyline.WCWaiverOfSubros = 

pc_policylineanswer = A merge table linking answers to a specific policyline. Specific to PolicyCenter.

pc_policylineanswer.ID = Internally managed primary key
pc_policylineanswer.BooleanAnswer = Yes / no component of answer.
pc_policylineanswer.BranchValue = Link to root of effdated tree
pc_policylineanswer.ChangeType = Type of change made to this row
pc_policylineanswer.ChoiceAnswerCode = Choice of the answer.
pc_policylineanswer.CreateTime = Timestamp when the object was created
pc_policylineanswer.CreateUser = User who created the object
pc_policylineanswer.DateAnswer = The answer in date form.
pc_policylineanswer.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policylineanswer.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policylineanswer.IntegerAnswer = Numeric component of answer.
pc_policylineanswer.PolicyLine = 
pc_policylineanswer.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policylineanswer.QuestionCode = Question that this answer answers
pc_policylineanswer.TextAnswer = Either the answer's text.
pc_policylineanswer.UpdateTime = Timestamp when the object was last updated
pc_policylineanswer.UpdateUser = User who last updated the object

pc_policylocation = Policy location specific information.

pc_policylocation.ID = Internally managed primary key
pc_policylocation.AccountLocation = The account location this policy location may be synced with.  While the policy location contains policy contract information, the account location contains shared role information.
pc_policylocation.BranchValue = Link to root of effdated tree
pc_policylocation.BuildingAutoNumberSeq = Sequence to autonumber buildings
pc_policylocation.CEDEXBureauInternal = CEDEX: Special business mail delivery bureau (France)
pc_policylocation.CEDEXInternal = CEDEX: Special business mail delivery flag (France)
pc_policylocation.ChangeType = Type of change made to this row
pc_policylocation.CreateTime = Timestamp when the object was created
pc_policylocation.CreateUser = User who created the object
pc_policylocation.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_policylocation.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_policylocation.FireProtectClass = Fire protection class.
pc_policylocation.IndustryCode = Industry Code of Location
pc_policylocation.LocationNum = The location number of this location
pc_policylocation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policylocation.TaxLocation = The TaxLocation for this location.
pc_policylocation.UpdateTime = Timestamp when the object was last updated
pc_policylocation.UpdateUser = User who last updated the object
pc_policylocation.Buildings = Set of buildings at a location
pc_policylocation.LocationAnswers = Set of answers for this location.
pc_policylocation.LocationNamedInsureds = The additional named insured covered at this location
pc_policylocation.LocationRisks = A reinsurable risk associated with a Location
pc_policylocation.TerritoryCodes = The rating territory codes.

pc_policyperiod = Policy Period allows a point in time reconstruction of all key policy attributes.

pc_policyperiod.ID = Internally managed primary key
pc_policyperiod.AllocationOfRemainder = The method to allocate the remainder of cost if overriding billing allocation for installments plan
pc_policyperiod.AltBillingAccountNumber = The number of the billing account which may only exist in billing system.
pc_policyperiod.ArchiveDate = When archiving was attempted on the root. Null if we never attempted to archive it.
pc_policyperiod.ArchiveFailure = Short version of the reason for a failure to archive
pc_policyperiod.ArchiveFailureDetails = Full details of archive failure
pc_policyperiod.ArchiveSchemaInfo = Schema version at which the root was archived or null if it was not archived
pc_policyperiod.ArchiveState = The archive state of the graph
pc_policyperiod.AssignedRisk = Flag for policy/risk assigned by state requirement
pc_policyperiod.BaseState = State the policy period is based in.
pc_policyperiod.BillImmediatelyPercentage = The percentage to bill immediately if overriding billing allocation for installments plan
pc_policyperiod.BillingMethod = Billing Method (Agency Bill, Direct Bill, etc)
pc_policyperiod.BranchName = The reference name of this branch of the job
pc_policyperiod.BranchNumber = The number of this branch of the job
pc_policyperiod.CancellationDate = Date this period was canceled, or null if still active
pc_policyperiod.CreateTime = Timestamp when the object was created
pc_policyperiod.CreateUser = User who created the object
pc_policyperiod.CustomBilling = If true indicates that the user wants to use custom billing instead of relying on BC default values
pc_policyperiod.DepositAmount_amt = 
pc_policyperiod.DepositAmount_cur = 
pc_policyperiod.DepositCollected_amt = 
pc_policyperiod.DepositCollected_cur = 
pc_policyperiod.DepositOverridePct = Override of the default reporting deposit % of the reporting pattern chosen
pc_policyperiod.DoNotPurge = Do not purge any of this policy period.
pc_policyperiod.EditEffectiveDate = Dates edits are effective
pc_policyperiod.EditLocked = Whether the PolicyPeriod is locked from edit by users without permission to edit
pc_policyperiod.ExcludedFromArchive = Indicate if this entity should be excluded from archiving
pc_policyperiod.ExcludeReason = Reason for excluding or skipping the entity from archiving. If the ExcludeFromArchive bit is set, this gives the reason for excluding. Else, if this is not null, it is the reason for skipping.
pc_policyperiod.FailedOOSEEvaluation = True if this is a PolicyPeriod in an OOS job that has blocking UWIssues at a later slice than the current primary slice
pc_policyperiod.FailedOOSEValidation = True if this is a draft PolicyPeriod in an OOS job that has failed validation
pc_policyperiod.FuturePeriods = True if when bound this branch had future bound periods
pc_policyperiod.InvoiceStreamCode = The public id of the invoice stream in billing system.
pc_policyperiod.Job = The job this policy period is part of.
pc_policyperiod.LocationAutoNumberSeq = Sequence to autonumber policy locations
pc_policyperiod.Locked = True if this row has been locked (cannot be edited)
pc_policyperiod.MinimumPremium = The minimum premium required for the policy period.
pc_policyperiod.ModelDate = Date corresponding to the model number
pc_policyperiod.ModelNumber = Modelnumber.
pc_policyperiod.MostRecentModel = True if this branch is the most recent model (has the highest model number)
pc_policyperiod.OverrideBillingAllocation = Whether to override the billing allocation for installments plan
pc_policyperiod.PeriodEnd = Upper bound of all expiration dates of this root
pc_policyperiod.PeriodStart = Lower bound of all effective dates of this root
pc_policyperiod.PNIContactDenorm = The primary named insured's contact on the policy. Denorm field so contact is retained when the policyperiod is archived.
pc_policyperiod.Policy = The policy to which this period belongs
pc_policyperiod.PolicyNumber = The policy number for this policy period. This value may be different from the core policy number on the associated Policy.
pc_policyperiod.PolicyTerm = Policy term information associated with this period
pc_policyperiod.Preempted = True if when bound this branch has been preempted
pc_policyperiod.PreferredCoverageCurrency = Preferred Coverage Currency
pc_policyperiod.PreferredSettlementCurrency = Preferred Settlement Currency
pc_policyperiod.PrimaryInsuredName = The display name of the primary names insured (denormalization).
pc_policyperiod.ProducerCodeOfRecord = The producer code that created this policy in this period and should get the commissions.
pc_policyperiod.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyperiod.QuoteHidden = Whether the quote is hidden from users without permission to view quote
pc_policyperiod.RateAsOfDate = The date the policy should be rated
pc_policyperiod.RefundCalcMethod = The method used to calculate the amount of refund due.  Once a policy is canceled, subsequent policy periods inherit this until it is reinstated, at which point this field is reset to null.  Also returns null if the cancellation cannot be found (e.g. if the cancellation was done in an external system).
pc_policyperiod.Segment = Market segment this policy period is in.
pc_policyperiod.SeriesCheckingPatternCode = The code of the pattern to use for creating and scheduling a series of checking audits
pc_policyperiod.SingleCheckingPatternCode = The code of the pattern to use for creating and scheduling single checking audits
pc_policyperiod.Status = The period's status. This field can only be updated via workflow methods available on the various Job entities.
pc_policyperiod.TermNumber = A sequence number that starts at 1 and is incremented on a renewal and rewrite, usually to distinguish between different periods of a same policy.
pc_policyperiod.TotalCostRPT_amt = 
pc_policyperiod.TotalCostRPT_cur = 
pc_policyperiod.TotalPremiumRPT_amt = 
pc_policyperiod.TotalPremiumRPT_cur = 
pc_policyperiod.TransactionCostRPT_amt = 
pc_policyperiod.TransactionCostRPT_cur = 
pc_policyperiod.TransactionPremiumRPT_amt = 
pc_policyperiod.TransactionPremiumRPT_cur = 
pc_policyperiod.UpdateTime = Timestamp when the object was last updated
pc_policyperiod.UpdateUser = User who last updated the object
pc_policyperiod.UWCompany = Underwriting company that insures this policy.  This can only change on a Cancellation or Rewrite, never mid-term.
pc_policyperiod.ValidQuote = Whether or not the policy's pricing information is up to date and accurate.  This should be set by the markValidQuote() and markInvalidQuote() domain methods.
pc_policyperiod.ValidReinsurance = True if reinsurables were generated sucessfully.
pc_policyperiod.WaiveDepositChange = Whether to waive the deposit amount change from current policy period and the based on
pc_policyperiod.WrittenDate = Nominally, the date this period was created. For reinstatements, it is the written date of the reinstated period. For rewrites, it can be the date of the rewrite or the date of the original period.
pc_policyperiod.BATransactions = 
pc_policyperiod.BOPTransactions = 
pc_policyperiod.CPTransactions = 
pc_policyperiod.Forms = Forms associated with this policy.
pc_policyperiod.GLTransactions = 
pc_policyperiod.IMTransactions = 
pc_policyperiod.Lines = Lines (e.g. Auto, Property,etc.) of this policy.
pc_policyperiod.LocationRisks = All reinsurable risks associated with policy locations on this policy period.
pc_policyperiod.Notes = Notes associated with this PolicyPeriod.
pc_policyperiod.PATransactions = 
pc_policyperiod.PeriodAnswers = Set of answers for this policy period.
pc_policyperiod.PolicyContactRoles = The policy contact roles of this policy period.
pc_policyperiod.PolicyFXRates = fx rates used for monetary amount conversions
pc_policyperiod.PolicyLocations = The period locations.
pc_policyperiod.PolicyRisks = The reinsurable risk associated with this policy period.
pc_policyperiod.RIRiskVersionLists = 
pc_policyperiod.UWIssuesIncludingSoftDeleted = Issues generated during policy evaluation.
pc_policyperiod.WCTransactions = 
pc_policyperiod.Workflows = Set of workflows associated with this period.

pc_policypolicydivide = Table linking a divided policy (a split or spun policy) to its source.

pc_policypolicydivide.ID = Internally managed primary key
pc_policypolicydivide.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_policypolicyrewrite = 
      Table linking a policy that preserves the relationship between policies from a RewriteNewAccount job.
      This join table represents a one-to-one relationship between the source policy that was rewritten and the
      new policy that was rewritten to.
    

pc_policypolicyrewrite.ID = Internally managed primary key
pc_policypolicyrewrite.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_policyterm = Contains data that varies by contractual period but not in effective time or real time.

pc_policyterm.ID = Internally managed primary key
pc_policyterm.AffinityGroup = The affinity group assigned to this term
pc_policyterm.Bound = True on promoting Submission, Rewrite and for Renewal if current mode is not 'Confirm Renewals'.
pc_policyterm.CreateTime = Timestamp when the object was created
pc_policyterm.CreateUser = User who created the object
pc_policyterm.DaysReported = The number of days for which the total reported premium applies
pc_policyterm.DepositAmount_amt = 
pc_policyterm.DepositAmount_cur = 
pc_policyterm.DepositReleased = True if the deposit amount has been released
pc_policyterm.FinalAuditOption = When false, final audit not scheduled; when true, the underwriter forces the audit to be scheduled and started; otherwise, final audit is scheduled, and rules determine whether to start it.
pc_policyterm.GenerateReinsurables = Flag for generating reinsurables for reinsurance
pc_policyterm.LastRestoreDate = The date when one or more PolicyPeriod from this PolicyTerm was last retrieved from the archive
pc_policyterm.MostRecentTerm = Flags the future-most term for a policy.
pc_policyterm.NextArchiveCheckDate = The date to next evaluate this PolicyTerm for archiving or null if archiving should be checked at the next opportunity
pc_policyterm.NextRenewalCheckDate = The date to next evaluate this PolicyTerm for renewal, null indicates to check at the next opportunity
pc_policyterm.NonRenewAddExplanation = Additional explanation why this policy marked for non renewal
pc_policyterm.NonRenewReason = Classifies the reason that the policy is marked as non-renew
pc_policyterm.Policy = The policy that this term applies to
pc_policyterm.PolicyTermArchiveState = Combined archive state of the policy periods in the policy term.
pc_policyterm.PreRenewalDirection = Indicates the pre-renewal direction,if any, of this policy
pc_policyterm.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyterm.TotalEstimatedPremium_amt = 
pc_policyterm.TotalEstimatedPremium_cur = 
pc_policyterm.TotalReportedPremium_amt = 
pc_policyterm.TotalReportedPremium_cur = 
pc_policyterm.UpdateTime = Timestamp when the object was last updated
pc_policyterm.UpdateUser = User who last updated the object
pc_policyterm.HumanTouchedIssues = The issues on which have had manual actions have been performed
pc_policyterm.NonRenewalExplanations = Non-renewal explanations
pc_policyterm.RestoreRequests = Requests that have been made to retrieve this term from the Archive
pc_policyterm.WorksheetContainers = WorksheetContainer objects on each period in the PolicyTerm

pc_policytermrestorerequest = Represents a request to retrieve a PolicyTerm from the Archive.

pc_policytermrestorerequest.ID = Internally managed primary key
pc_policytermrestorerequest.CreateTime = Timestamp when the object was created
pc_policytermrestorerequest.CreateUser = User who created the object
pc_policytermrestorerequest.PolicyTerm = The PolicyTerm requested to be retrieved from the archive.
pc_policytermrestorerequest.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policytermrestorerequest.Reason = Reason that this user requested the PolicyTerm be retrieved from the Archive.
pc_policytermrestorerequest.RequestingUser = The user that initiated this request to restore from the archive.
pc_policytermrestorerequest.ShouldCreateActivity = Flag to indicate whether an activity should be created when this request is processed.
pc_policytermrestorerequest.UpdateTime = Timestamp when the object was last updated
pc_policytermrestorerequest.UpdateUser = User who last updated the object

pc_policyuserroleassign = User role assignments for Policies.

pc_policyuserroleassign.ID = Internally managed primary key
pc_policyuserroleassign.Active = Indicates whether the user is active in this role assignment.
pc_policyuserroleassign.AssignedByUser = User who assigned this entity.
pc_policyuserroleassign.AssignedGroup = Group to which this entity is assigned; null if none assigned
pc_policyuserroleassign.AssignedQueue = Either the Queue to which this entity is assigned (if AssignmentStatus is 'assigned'), the Queue to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_policyuserroleassign.AssignedUser = Either the User to which this entity is assigned (if AssignmentStatus is 'assigned'), the User to which the system suggests assignment (if AssignmentStatus is 'manual'), or null if none assigned. Only one of AssignedUserID or AssignedQueueID should be non null.
pc_policyuserroleassign.AssignmentDate = Time when entity last assigned
pc_policyuserroleassign.AssignmentStatus = Typelist describing assignment status.
pc_policyuserroleassign.CloseDate = Date and time when this entity was closed. (Not applicable to all assignable entities)
pc_policyuserroleassign.Comments = Comments about this role assignment.
pc_policyuserroleassign.CreateTime = Timestamp when the object was created
pc_policyuserroleassign.CreateUser = User who created the object
pc_policyuserroleassign.Policy = Associated policy.
pc_policyuserroleassign.PreviousGroup = Group to which this entity was previously assigned.
pc_policyuserroleassign.PreviousQueue = Queue to which this entity was previously assigned.
pc_policyuserroleassign.PreviousUser = User to which this entity was previously assigned.
pc_policyuserroleassign.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_policyuserroleassign.Role = The role to which the user is assigned.
pc_policyuserroleassign.UpdateTime = Timestamp when the object was last updated
pc_policyuserroleassign.UpdateUser = User who last updated the object

pc_PrimaryAcctLoc = null

pc_PrimaryAcctLoc.ID = Internally managed primary key
pc_PrimaryAcctLoc.ForeignEntity = 
pc_PrimaryAcctLoc.Owner = 
pc_PrimaryAcctLoc.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_priorpolicy = Details prior coverage information including policy term, carrier, premiums and losses

pc_priorpolicy.ID = Internally managed primary key
pc_priorpolicy.AnnualPremium_amt = 
pc_priorpolicy.AnnualPremium_cur = 
pc_priorpolicy.Carrier = Name of the carrier
pc_priorpolicy.CreateTime = Timestamp when the object was created
pc_priorpolicy.CreateUser = User who created the object
pc_priorpolicy.EffectiveDate = Effective date of this row.
pc_priorpolicy.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_priorpolicy.ExpMod = The experience modifier for this prior policy
pc_priorpolicy.NumLosses = Number of losses in the last 3 years
pc_priorpolicy.Policy = The policy to which this applies
pc_priorpolicy.PolicyLinePatternCode = The applicable policy line for this coverage.
pc_priorpolicy.PolicyNumber = Policy number
pc_priorpolicy.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_priorpolicy.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_priorpolicy.TotalLosses_amt = 
pc_priorpolicy.TotalLosses_cur = 
pc_priorpolicy.TotalPremium_amt = 
pc_priorpolicy.TotalPremium_cur = 
pc_priorpolicy.UpdateTime = Timestamp when the object was last updated
pc_priorpolicy.UpdateUser = User who last updated the object

pc_processhistory = Process run history

pc_processhistory.ID = Internally managed primary key
pc_processhistory.CompleteDate = The date this process completed.
pc_processhistory.FailedOps = The number of operations that failed.
pc_processhistory.FailureReason = If not successful, the reason the process failed.
pc_processhistory.NotificationSent = Completion Notification Sent
pc_processhistory.OpsPerformed = The total number of operations the process performed.
pc_processhistory.ProcessType = The process this entry refers to.
pc_processhistory.ProfilerData = Raw Profiler data
pc_processhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_processhistory.RanToCompletion = Whether or not the process ran to completion, or failed or was interrupted.
pc_processhistory.Scheduled = Whether this was a scheduled run
pc_processhistory.StartDate = The date this process started.

pc_producercode = Identifies producer and underwriting assignment preferences.

pc_producercode.ID = Internally managed primary key
pc_producercode.Address = The contact for this producer code.
pc_producercode.AppointmentDate = Indicates when the carrier's relationship with the producer began.
pc_producercode.Branch = The internal (carrier) branch that handles the business for this producer code.
pc_producercode.Code = The producer code.
pc_producercode.CreateTime = Timestamp when the object was created
pc_producercode.CreateUser = User who created the object
pc_producercode.Description = The producer code description.
pc_producercode.Organization = The Organization this producer code belongs to.
pc_producercode.PreferredUnderwriter = The preferred underwriter for a producer code
pc_producercode.ProducerStatus = The status of this producer code.
pc_producercode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_producercode.TerminationDate = Indicates when the producer relationship was or will be terminated.
pc_producercode.UpdateTime = Timestamp when the object was last updated
pc_producercode.UpdateUser = User who last updated the object
pc_producercode.AffinityGroupProducerCodes = Available groups to a producer code.
pc_producercode.CommissionPlans = Currencies allowed to be used by the producer code as billing currency.
pc_producercode.GroupProducerCodes = Available producer codes to an external producer group.
pc_producercode.ProducerCodeRoles = Available roles to a producer code.
pc_producercode.UserProducerCodes = Available producer codes and associated roles to a user.

pc_producercoderole = The producer code to role availability relationship.

pc_producercoderole.ID = Internally managed primary key
pc_producercoderole.ProducerCode = The ProducerCode.
pc_producercoderole.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_producercoderole.Role = Security role granted to the producer code.

pc_prcod_desc_l10n = null

pc_prcod_desc_l10n.ID = Internally managed primary key
pc_prcod_desc_l10n.Language = 
pc_prcod_desc_l10n.Owner = 
pc_prcod_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_prcod_desc_l10n.Value = 

pc_producercodecode = null

pc_producercodecode.ID = Internally managed primary key
pc_producercodecode.ForeignEntity = 
pc_producercodecode.Owner = 
pc_producercodecode.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_productlookup = The Product availability lookup type.

pc_productlookup.ID = Internally managed primary key
pc_productlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_productlookup.CreateTime = Timestamp when the object was created
pc_productlookup.CreateUser = User who created the object
pc_productlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_productlookup.IndustryCode = The industry code for which this lookup applies, or null if the lookup is not restricted by industry code
pc_productlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_productlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_productlookup.ProductCode = 
pc_productlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_productlookup.SourceFile = The source file in which the entity is defined
pc_productlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_productlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_productlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_productlookup.UpdateTime = Timestamp when the object was last updated
pc_productlookup.UpdateUser = User who last updated the object

pc_productmodifier = A product-level modifier that is not associated with any specific policy line

pc_productmodifier.ID = Internally managed primary key
pc_productmodifier.BooleanModifier = Boolean modifier
pc_productmodifier.BranchValue = Link to root of effdated tree
pc_productmodifier.ChangeType = Type of change made to this row
pc_productmodifier.CreateTime = Timestamp when the object was created
pc_productmodifier.CreateUser = User who created the object
pc_productmodifier.DateModifier = Date modifier
pc_productmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_productmodifier.EffectiveDatedFields = 
pc_productmodifier.Eligible = Whether this modifier is eligible or not
pc_productmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_productmodifier.Justification = Additional comment to justify the value of this modifier
pc_productmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_productmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_productmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_productmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_productmodifier.State = The state to attach rating information to.
pc_productmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_productmodifier.TypeKeyModifier = Typekey modifier
pc_productmodifier.UpdateTime = Timestamp when the object was last updated
pc_productmodifier.UpdateUser = User who last updated the object
pc_productmodifier.ValueFinal = Whether this modifier's value is final or not
pc_productmodifier.ProductRateFactors = Individual components of the rating factor

pc_productmodifierlookup = The modifier lookup type.

pc_productmodifierlookup.ID = Internally managed primary key
pc_productmodifierlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_productmodifierlookup.CreateTime = Timestamp when the object was created
pc_productmodifierlookup.CreateUser = User who created the object
pc_productmodifierlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_productmodifierlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_productmodifierlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_productmodifierlookup.ModifierPatternCode = 
pc_productmodifierlookup.ProductCode = 
pc_productmodifierlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_productmodifierlookup.SourceFile = The source file in which the entity is defined
pc_productmodifierlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_productmodifierlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_productmodifierlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_productmodifierlookup.UpdateTime = Timestamp when the object was last updated
pc_productmodifierlookup.UpdateUser = User who last updated the object
pc_productmodifierlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_productratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_productratefactor.ID = Internally managed primary key
pc_productratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_productratefactor.BranchValue = Link to root of effdated tree
pc_productratefactor.ChangeType = Type of change made to this row
pc_productratefactor.CreateTime = Timestamp when the object was created
pc_productratefactor.CreateUser = User who created the object
pc_productratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_productratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_productratefactor.Justification = Additional comment to justify this rate factor
pc_productratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_productratefactor.ProductModifier = 
pc_productratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_productratefactor.UpdateTime = Timestamp when the object was last updated
pc_productratefactor.UpdateUser = User who last updated the object

pc_prodratefactorlookup = The rating factor lookup.

pc_prodratefactorlookup.ID = Internally managed primary key
pc_prodratefactorlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_prodratefactorlookup.CreateTime = Timestamp when the object was created
pc_prodratefactorlookup.CreateUser = User who created the object
pc_prodratefactorlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_prodratefactorlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_prodratefactorlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_prodratefactorlookup.ProductCode = 
pc_prodratefactorlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_prodratefactorlookup.RateFactorPatternCode = 
pc_prodratefactorlookup.SourceFile = The source file in which the entity is defined
pc_prodratefactorlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_prodratefactorlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_prodratefactorlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_prodratefactorlookup.UpdateTime = Timestamp when the object was last updated
pc_prodratefactorlookup.UpdateUser = User who last updated the object
pc_prodratefactorlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_profilerconfig = Profiler configuration for an entry point

pc_profilerconfig.ID = Internally managed primary key
pc_profilerconfig.DbmsCounterThresholdMs = The threshold for generating a report using dbms counters for the interval (start of profiling session, end of profiling session). Use 0 to disable. Only meaningful if ProfilerEnabled is true.
pc_profilerconfig.DiffDbmsCounters = Whether diffing DBMS counters is enabled. Only meaningful if ProfilerEnabled and DbmsCounterThresholdMs are true.
pc_profilerconfig.EntryPoint = Name of entry point
pc_profilerconfig.ExtendedQueryTracing = Whether extended query tracing is enabled. Only meaningful if ProfilerEnabled is true.
pc_profilerconfig.HiResClock = Whether to use hi-resolution clock for timing (Windows only)
pc_profilerconfig.ProfilerEnabled = Whether profiling is enabled for this entry point
pc_profilerconfig.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_profilerconfig.QueryOptimizerTracing = Whether query optimizer tracing is enabled. Only meaningful if ProfilerEnabled is true.
pc_profilerconfig.StackTraceTracking = Whether stack tracing is enabled. Only meaningful if ProfilerEnabled is true.
pc_profilerconfig.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_profilerconfig.IndividualStacks = True to capture individual stacks; null or false to aggregate the stacks

pc_programtreaty = 
      Table linking reinsurance programs to agreements to support many-to-many relationship.
  

pc_programtreaty.ID = Internally managed primary key
pc_programtreaty.Program = Associated program.
pc_programtreaty.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_programtreaty.Treaty = Associated agreement.

pc_purgedrootinfo = 
    When an bean implementing RootInfo is purged (such as ClaimInfo when a Claim is purged in ClaimCenter), an instance
    of this class is created to record the PublicID of the purged entity.
    

pc_purgedrootinfo.ID = Internally managed primary key
pc_purgedrootinfo.CreateTime = Timestamp when the object was created
pc_purgedrootinfo.CreateUser = User who created the object
pc_purgedrootinfo.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_purgedrootinfo.PurgedEntityPublicID = The PublicID of the purged entity.
pc_purgedrootinfo.PurgedEntityType = The name of the type of the purged entity.
pc_purgedrootinfo.UpdateTime = Timestamp when the object was last updated
pc_purgedrootinfo.UpdateUser = User who last updated the object

pc_questionlookup = The Question lookup type.

pc_questionlookup.ID = Internally managed primary key
pc_questionlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_questionlookup.CreateTime = Timestamp when the object was created
pc_questionlookup.CreateUser = User who created the object
pc_questionlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_questionlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_questionlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_questionlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_questionlookup.QuestionCode = 
pc_questionlookup.SourceFile = The source file in which the entity is defined
pc_questionlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_questionlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_questionlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_questionlookup.UpdateTime = Timestamp when the object was last updated
pc_questionlookup.UpdateUser = User who last updated the object

pc_questionsetlookup = The QuestionSet lookup type.

pc_questionsetlookup.ID = Internally managed primary key
pc_questionsetlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_questionsetlookup.CreateTime = Timestamp when the object was created
pc_questionsetlookup.CreateUser = User who created the object
pc_questionsetlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_questionsetlookup.IndustryCode = The industry code for which this lookup applies, or null if the lookup is not restricted by industry code
pc_questionsetlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_questionsetlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_questionsetlookup.PolicyLinePatternCode = 
pc_questionsetlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_questionsetlookup.QuestionSetCode = 
pc_questionsetlookup.SourceFile = The source file in which the entity is defined
pc_questionsetlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_questionsetlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_questionsetlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_questionsetlookup.UpdateTime = Timestamp when the object was last updated
pc_questionsetlookup.UpdateUser = User who last updated the object

pc_reinsuranceagreement = A reinsurance agreement between insurance companies

pc_reinsuranceagreement.ID = Internally managed primary key
pc_reinsuranceagreement.AgreementNumber = The agreement number of this agreement.
pc_reinsuranceagreement.AmountOfCoverage_amt = 
pc_reinsuranceagreement.AmountOfCoverage_cur = 
pc_reinsuranceagreement.AttachmentPoint_amt = 
pc_reinsuranceagreement.AttachmentPoint_cur = 
pc_reinsuranceagreement.Broker = Defines which broker (if any) helped arrange this agreement.  Useful because communications for collections, payments, etc. may be routed through the broker rather than directly to the reinsurers.
pc_reinsuranceagreement.CededShare = Defines percentage ceded to the reinsurer.
pc_reinsuranceagreement.Comments = A free form note space for the carrier to note any additional terms that are not used by the system but which are important to document to fully describe the agreement.
pc_reinsuranceagreement.Commission = This is the commission that the carrier will earn from the reinsurers for sending them RI business.
pc_reinsuranceagreement.CommissionAdjusted = True if commission is adjusted for each participant.
pc_reinsuranceagreement.CoverageLimit_amt = 
pc_reinsuranceagreement.CoverageLimit_cur = 
pc_reinsuranceagreement.CreateTime = Timestamp when the object was created
pc_reinsuranceagreement.CreateUser = User who created the object
pc_reinsuranceagreement.Currency = Currency associated with the RI contract
pc_reinsuranceagreement.EffectiveDate = Effective date of this row.
pc_reinsuranceagreement.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_reinsuranceagreement.Name = The name of this contract.
pc_reinsuranceagreement.PayableBasis = Payable Basis
pc_reinsuranceagreement.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_reinsuranceagreement.Status = Status of the contract
pc_reinsuranceagreement.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_reinsuranceagreement.UpdateTime = Timestamp when the object was last updated
pc_reinsuranceagreement.UpdateUser = User who last updated the object
pc_reinsuranceagreement.AttachmentInclusions = The exclusions/special acceptances for attached risks.
pc_reinsuranceagreement.Participants = All reinsurers participate in this agreement.
pc_reinsuranceagreement.Programs = All reinsurance programs which include this agreement.
pc_reinsuranceagreement.AttachmentBasis = Defines how applicable reinsurance agreements are determined at the time of ceding premiums or recovering on losses.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.AttachmentBasis = Defines how applicable reinsurance agreements are determined at the time of ceding premiums or recovering on losses.
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.CededPremium_amt = 
pc_reinsuranceagreement.CededPremium_cur = 
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.FlatPremiumAdjusted = True if flat premium is adjusted for each participant.
pc_reinsuranceagreement.MarkUp = Additional amount (expressed as % of ceded premium) that should be subtracted from direct premiums when determining the net premium for ceding to other agreements.
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.CededPremium_amt = 
pc_reinsuranceagreement.CededPremium_cur = 
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.FlatPremiumAdjusted = True if flat premium is adjusted for each participant.
pc_reinsuranceagreement.MarkUp = Additional amount (expressed as % of ceded premium) that should be subtracted from direct premiums when determining the net premium for ceding to other agreements.
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.CededPremium_amt = 
pc_reinsuranceagreement.CededPremium_cur = 
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.FlatPremiumAdjusted = True if flat premium is adjusted for each participant.
pc_reinsuranceagreement.MarkUp = Additional amount (expressed as % of ceded premium) that should be subtracted from direct premiums when determining the net premium for ceding to other agreements.
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.AttachmentBasis = Defines how applicable reinsurance agreements are determined at the time of ceding premiums or recovering on losses.
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.ApplyToGrossRetentionOnly = Agreement coverage applies up to the gross retention only
pc_reinsuranceagreement.AttachmentIndexed = Indicates whether loss costs will be adjusted by an inflation index before determining whether they exceed the attachment point.
pc_reinsuranceagreement.CalculateCededPremium = For some types of ceding calculations, it makes more sense to do aggregate calculations across the entire book of business rather than doing premium transaction-level calculations.
pc_reinsuranceagreement.CedingRate = If a non-proportional treaty is divided among multiple participants, then they will each negotiate a rate for their participation.
pc_reinsuranceagreement.CedingRateAdjusted = True if ceding rate is adjusted for each participant.
pc_reinsuranceagreement.GNPSubtotal = Gross Net Premium Subtotal
pc_reinsuranceagreement.LimitIndexed = Same concept of adjusting the loss cost as Attachment Indexed but for the Limit.
pc_reinsuranceagreement.AttachmentBasis = Defines how applicable reinsurance agreements are determined at the time of ceding premiums or recovering on losses.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 
pc_reinsuranceagreement.CountTowardTotalLimit = This is intended to allow for coverages that provide reinsurance for losses from a single event involving multiple risks (clash cover) but where you are not intending to cover any single risk with a TIV or SI this large.
pc_reinsuranceagreement.DepositPaymentSchedule = Deposit Payment Schedule
pc_reinsuranceagreement.MaxRetention_amt = 
pc_reinsuranceagreement.MaxRetention_cur = 
pc_reinsuranceagreement.MinDepositPremium_amt = 
pc_reinsuranceagreement.MinDepositPremium_cur = 
pc_reinsuranceagreement.NotificationThreshold_amt = 
pc_reinsuranceagreement.NotificationThreshold_cur = 

pc_riagree_nam_l10n = null

pc_riagree_nam_l10n.ID = Internally managed primary key
pc_riagree_nam_l10n.Language = 
pc_riagree_nam_l10n.Owner = 
pc_riagree_nam_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_riagree_nam_l10n.Value = 

pc_riattachmentinclusion = RI attachment exclusions, inclusions, and special acceptances

pc_riattachmentinclusion.ID = Internally managed primary key
pc_riattachmentinclusion.Agreement = The attached reinsurance agreement
pc_riattachmentinclusion.CreateTime = Timestamp when the object was created
pc_riattachmentinclusion.CreateUser = User who created the object
pc_riattachmentinclusion.DraftRiskVersionList = The associated RIRiskVersionList, was previously null if the job had been promoted to represent the active inclusion status.  Should never be null
pc_riattachmentinclusion.Inclusion = Inclusion status of attachment
pc_riattachmentinclusion.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_riattachmentinclusion.RiskNumber = The risk that is excluded/accepted from the agreement.  This will be the same as the DraftRiskVersionList's risk.
pc_riattachmentinclusion.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_riattachmentinclusion.UpdateTime = Timestamp when the object was last updated
pc_riattachmentinclusion.UpdateUser = User who last updated the object

pc_ricedingprogramchange = Queue of items on which to perform ceding calculations.

pc_ricedingprogramchange.ID = Internally managed primary key
pc_ricedingprogramchange.Program = Program that changed to create the related work item.
pc_ricedingprogramchange.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ricedingprogramchange.WorkItem = WorkItem that owns this program change.

pc_ricedingworkitem = 
      Ceding queue entity holding an item that need ceding (re-)calculations performed on it.
  

pc_ricedingworkitem.ID = Internally managed primary key
pc_ricedingworkitem.Attempts = 
pc_ricedingworkitem.CheckedOutBy = 
pc_ricedingworkitem.CommentText = Comment describing reason for a recalculation
pc_ricedingworkitem.CreationTime = 
pc_ricedingworkitem.Exception = Stack trace of the exception
pc_ricedingworkitem.LastUpdateTime = 
pc_ricedingworkitem.Priority = 
pc_ricedingworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_ricedingworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ricedingworkitem.RecalcReason = Reason for recalculation
pc_ricedingworkitem.RecalculateAll = True if this is a forced recalculation of all cedings against the entity, false if we should only calculate ceding against new Transactions
pc_ricedingworkitem.Status = Status of this workitem.
pc_ricedingworkitem.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ricedingworkitem.PolicyPeriod = PolicyPeriod to calculate ceding against.
pc_ricedingworkitem.ChangedPrograms = Set of RIPrograms changed that caused this work item to be created.

pc_ricoveragegroup = A map entry to map a reinsurance agreement to a RI coverage group type

pc_ricoveragegroup.ID = Internally managed primary key
pc_ricoveragegroup.CreateTime = Timestamp when the object was created
pc_ricoveragegroup.CreateUser = User who created the object
pc_ricoveragegroup.GroupType = The RI coverage group type.
pc_ricoveragegroup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ricoveragegroup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ricoveragegroup.UpdateTime = Timestamp when the object was last updated
pc_ricoveragegroup.UpdateUser = User who last updated the object
pc_ricoveragegroup.Agreement = The reinsurance agreement this coverage group belong to.
pc_ricoveragegroup.Program = The reinsurance program this coverage group belong to.

pc_ripolicyattachment = An attachment of a reinsurable risk to a reinsurance agreement.

pc_ripolicyattachment.ID = Internally managed primary key
pc_ripolicyattachment.Agreement = The attached reinsurance agreement
pc_ripolicyattachment.CreateTime = Timestamp when the object was created
pc_ripolicyattachment.CreateUser = User who created the object
pc_ripolicyattachment.Program = The attached reinsurance program
pc_ripolicyattachment.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ripolicyattachment.Risk = The associated reinsurable risk.
pc_ripolicyattachment.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ripolicyattachment.UpdateTime = Timestamp when the object was last updated
pc_ripolicyattachment.UpdateUser = User who last updated the object

pc_RIProgram = A reinsurance program (a collection of agreements that together cover a risk).

pc_RIProgram.ID = Internally managed primary key
pc_RIProgram.CedingRecalcExpirationDate = Expiration date may change; this field holds the maximum Expiration Date since the prior ceding calculation
pc_RIProgram.CreateTime = Timestamp when the object was created
pc_RIProgram.CreateUser = User who created the object
pc_RIProgram.Currency = Currency associated with the RI contract
pc_RIProgram.EffectiveDate = Effective date of this row.
pc_RIProgram.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_RIProgram.Name = The name of this contract.
pc_RIProgram.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_RIProgram.RequiresRecalculation = Indicates if this Program has been modified and requires a recalculation of any related Ceded Premiums
pc_RIProgram.ResponsibleUser = The last user to update the program
pc_RIProgram.SingleRiskMaximum_amt = 
pc_RIProgram.SingleRiskMaximum_cur = 
pc_RIProgram.Status = Status of the contract
pc_RIProgram.TargetMaxRetention_amt = 
pc_RIProgram.TargetMaxRetention_cur = 
pc_RIProgram.UpdateTime = Timestamp when the object was last updated
pc_RIProgram.UpdateUser = User who last updated the object

pc_riprog_name_l10n = null

pc_riprog_name_l10n.ID = Internally managed primary key
pc_riprog_name_l10n.Language = 
pc_riprog_name_l10n.Owner = 
pc_riprog_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_riprog_name_l10n.Value = 

pc_ririsk = A reinsurable risk.

pc_ririsk.ID = Internally managed primary key
pc_ririsk.CreateTime = Timestamp when the object was created
pc_ririsk.CreateUser = User who created the object
pc_ririsk.DefaultRetentionFromProgram_amt = 
pc_ririsk.DefaultRetentionFromProgram_cur = 
pc_ririsk.EffectiveDate = Effective date of this row.
pc_ririsk.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_ririsk.GrossRetention_amt = 
pc_ririsk.GrossRetention_cur = 
pc_ririsk.LocationRiskGroup = For grouping location risks. Placed on RIRisk instead of on the effDated LocationGroup so that it can be edited after the policy is locked.
pc_ririsk.LossDateAttachmentProgram = Reinsurance program associated with this RIRisk, as of the RIRisk's slice date.
pc_ririsk.PolicyAttachmentProgram = Reinsurance program associated with this RIRisk on the date Policy was issued.   This is applicable for policy-attached reinsurance.
pc_ririsk.ProbableMaxLossPct = Probable Maximum Loss Percentage.
pc_ririsk.ProbableMaxLossReason = Probable Maximum Loss Reason.
pc_ririsk.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ririsk.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ririsk.TotalInsuredValue_amt = 
pc_ririsk.TotalInsuredValue_cur = 
pc_ririsk.UpdateTime = Timestamp when the object was last updated
pc_ririsk.UpdateUser = User who last updated the object
pc_ririsk.VersionList = The version list of this RIRisk.
pc_ririsk.PolicyAttachments = All reinsurance attachments of this risk.

pc_ririskversionlist = The container for all versions of a RIRisk.

pc_ririskversionlist.ID = Internally managed primary key
pc_ririskversionlist.CancellationDate = The cancellation date.
pc_ririskversionlist.CreateTime = Timestamp when the object was created
pc_ririskversionlist.CreateUser = User who created the object
pc_ririskversionlist.EditEffectiveDate = Effective date of this change.
pc_ririskversionlist.PolicyPeriod = Associated Policy Period.
pc_ririskversionlist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ririskversionlist.RiskNumber = The risk number.
pc_ririskversionlist.Status = The status of the effdated entity
pc_ririskversionlist.UpdateTime = Timestamp when the object was last updated
pc_ririskversionlist.UpdateUser = User who last updated the object
pc_ririskversionlist.AllVersionsInternal = All versions of the RIRisk.
pc_ririskversionlist.AttachmentInclusions = The exclusions/special acceptances for attached risks.

pcx_sample_RateAdjFactor = 
    A sample table storing various adjustment factors used in rating calculations.  It supports either factors that
      are matched exactly on string values, stringOption, stringOption2, or factors that fall within an
      inclusive numeric range, [minNumber-maxNumber].  Factors can be state-specific or be a default for all
      states, state=null, with state-specific rates overriding defaults.  Lastly, all factors have an effective
      period, [effDate-expDate) where a null date means that side of the range is unbounded.
  

pcx_sample_RateAdjFactor.ID = Internally managed primary key
pcx_sample_RateAdjFactor.effDate = The date on which this factor becomes effective (inclusive).  A null date means this has always been effective.
pcx_sample_RateAdjFactor.expDate = The date on which this factor expires (exclusive).  A null date means this will always be effective.
pcx_sample_RateAdjFactor.factor = The base rate to be used.
pcx_sample_RateAdjFactor.factorName = This field indicates the name of the factor that should be applied.  Look-ups are always within a named factor.  Using this allows a single table to provide rating factors for many different types of simple (single parameter) look-ups.
pcx_sample_RateAdjFactor.factorState = Indicates a rate is applicable to a given state.  Null indicates a default rate which can be overridden by a rate specific to a state.
pcx_sample_RateAdjFactor.maxNumber = The maximum of the inclusive number range for which a given lookup value should fall within.
pcx_sample_RateAdjFactor.minNumber = The minimum of the inclusive number range for which a given lookup value should fall within.
pcx_sample_RateAdjFactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_sample_RateAdjFactor.stringOption = This field should store a string value, such as the code for a typecode field, which will be used for looking up a factor.
pcx_sample_RateAdjFactor.stringOption2 = This field should store a secondary string value used for looking up a factor.

pc_ratebook = Describes which versions of which rate tables comprise a rate book

pc_ratebook.ID = Internally managed primary key
pc_ratebook.BookCode = The rate book code
pc_ratebook.BookDesc = Optional detailed description of the rate book.
pc_ratebook.BookEdition = The edition of the rate book. This, combined with the 'BookName', identifies the rate book to the user.
pc_ratebook.BookJurisdiction = The Jurisdiction this books applies to; countrywide is null
pc_ratebook.BookName = The name of the rate book. This, combined with the 'BookEdition', identifies the rate book to the user.
pc_ratebook.BookOffering = The offering this books applies to
pc_ratebook.CreateTime = Timestamp when the object was created
pc_ratebook.CreateUser = User who created the object
pc_ratebook.EffectiveDate = The earliest policy effective date that can be rated using this rate book
pc_ratebook.ExpirationDate = The latest policy effective date that can be rated using this rate book
pc_ratebook.LastStatusChangeDate = The (calendar) date of the last Status change
pc_ratebook.LastTableRowEdit = 
pc_ratebook.PolicyLine = Code of the Policy Line that the rate table belongs to
pc_ratebook.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratebook.RenewalEffectiveDate = The earliest policy renewal effective date that can be rated using this rate book
pc_ratebook.Status = The status determines things such as whether the rate book may be changed or be brought back into an editable state, whether it has been approved for production, and whether it has been put into production.
pc_ratebook.UpdateTime = Timestamp when the object was last updated
pc_ratebook.UpdateUser = User who last updated the object
pc_ratebook.UWCompany = The Underwriting company that insures policies that are rated using this book.
pc_ratebook.RateBookCalcRoutines = Which rate routines are used in this rate book
pc_ratebook.RateTables = Which logical rate tables are in this rate book

pc_ratebookcalcroutine = The relationship between a RateBook and its associated CalcRoutineDefinition entities.

pc_ratebookcalcroutine.ID = Internally managed primary key
pc_ratebookcalcroutine.CalcRoutineDefinition = The CalcRoutineDefinition.
pc_ratebookcalcroutine.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratebookcalcroutine.RateBook = The associated RateBook.

pc_rtbk_desc_l10n = null

pc_rtbk_desc_l10n.ID = Internally managed primary key
pc_rtbk_desc_l10n.Language = 
pc_rtbk_desc_l10n.Owner = 
pc_rtbk_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtbk_desc_l10n.Value = 

pc_rtbk_name_l10n = null

pc_rtbk_name_l10n.ID = Internally managed primary key
pc_rtbk_name_l10n.Language = 
pc_rtbk_name_l10n.Owner = 
pc_rtbk_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtbk_name_l10n.Value = 

pc_ratingfactorlookup = The ratring factor lookup.

pc_ratingfactorlookup.ID = Internally managed primary key
pc_ratingfactorlookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_ratingfactorlookup.CreateTime = Timestamp when the object was created
pc_ratingfactorlookup.CreateUser = User who created the object
pc_ratingfactorlookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_ratingfactorlookup.JobType = The job type for which this lookup applies, or null if the lookup is not restricted by job type
pc_ratingfactorlookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_ratingfactorlookup.PolicyLinePatternCode = The policy line pattern code for which this lookup applies
pc_ratingfactorlookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratingfactorlookup.RateFactorPatternCode = 
pc_ratingfactorlookup.SourceFile = The source file in which the entity is defined
pc_ratingfactorlookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_ratingfactorlookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_ratingfactorlookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ratingfactorlookup.UpdateTime = Timestamp when the object was last updated
pc_ratingfactorlookup.UpdateUser = User who last updated the object
pc_ratingfactorlookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company
pc_ratingfactorlookup.PolicyType = The policy type of this lookup

pc_ratefactors = This table stores the factors used in rating calculations. It is a catch-all type of table.

pc_ratefactors.ID = Internally managed primary key
pc_ratefactors.bit1 = Bit 1
pc_ratefactors.bit2 = Bit 2
pc_ratefactors.CreateTime = Timestamp when the object was created
pc_ratefactors.CreateUser = User who created the object
pc_ratefactors.date1 = Date 1
pc_ratefactors.date2 = Date 2
pc_ratefactors.dec1 = Decimal 1
pc_ratefactors.dec2 = Decimal 2
pc_ratefactors.dec3 = Decimal 3
pc_ratefactors.dec4 = Decimal 4
pc_ratefactors.dec5 = Decimal 5
pc_ratefactors.dec6 = Decimal 6
pc_ratefactors.int1 = Integer 1
pc_ratefactors.int2 = Integer 2
pc_ratefactors.int3 = Integer 3
pc_ratefactors.int4 = Integer 4
pc_ratefactors.int5 = Integer 5
pc_ratefactors.int6 = Integer 6
pc_ratefactors.int7 = Integer 7
pc_ratefactors.int8 = Integer 8
pc_ratefactors.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratefactors.RateTable = Logical rate table that contain the factors with these values
pc_ratefactors.str1 = String 1
pc_ratefactors.str2 = String 2
pc_ratefactors.str3 = String 3
pc_ratefactors.str4 = String 4
pc_ratefactors.str5 = String 5
pc_ratefactors.str6 = String 6
pc_ratefactors.str7 = String 7
pc_ratefactors.str8 = String 8
pc_ratefactors.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_ratefactors.UpdateTime = Timestamp when the object was last updated
pc_ratefactors.UpdateUser = User who last updated the object

pcx_sample_RateGLClassCode = ounded.
  

pcx_sample_RateGLClassCode.ID = Internally managed primary key
pcx_sample_RateGLClassCode.classcode = This field indicates the class code we are doing a rate lookup on.
pcx_sample_RateGLClassCode.effDate = The date on which this factor becomes effective (inclusive).  A null date means this has always been effective.
pcx_sample_RateGLClassCode.expDate = The date on which this factor expires (exclusive).  A null date means this will always be effective.
pcx_sample_RateGLClassCode.minPremium = The minimum premium associated with a classcode
pcx_sample_RateGLClassCode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_sample_RateGLClassCode.rate = The base rate to be used
pcx_sample_RateGLClassCode.rateState = Indicates a rate is applicable to a given jurisdiction.  Null indicates a default rate which can be overridden by a rate specific to a jurisdiction. This should be the string value of a typecode in the Jurisdiction typelist. For example, if this is a typecode allowed in the US state of California, the value should be 'CA'.
pcx_sample_RateGLClassCode.splitType = The split type (BI/PD/CSL) for which this rate is applicable.
pcx_sample_RateGLClassCode.subline = The subline (Product/Premises) for which this rate is applicable.

pc_ratetable = Identifies logical rate table.  Logical rate table is associated with a single rate books and may either own or reference rate factors.

pc_ratetable.ID = Internally managed primary key
pc_ratetable.CreateTime = Timestamp when the object was created
pc_ratetable.CreateUser = User who created the object
pc_ratetable.Definition = 
pc_ratetable.LastTableRowEdit = 
pc_ratetable.NormalizedRowCount = An estimated total number of rows that would be created if the table uses range normalization
pc_ratetable.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetable.QueryStrategy = Define the factor query strategy for this table
pc_ratetable.RateBook = 
pc_ratetable.ReduceMemoryUsage = Signifies that the user set this table to not auto normalize
pc_ratetable.RowUniformityStatus = 
pc_ratetable.UpdateTime = Timestamp when the object was last updated
pc_ratetable.UpdateUser = User who last updated the object

pc_ratetableargsource = Describes the argument source for one parameter

pc_ratetableargsource.ID = Internally managed primary key
pc_ratetableargsource.ArgumentSource = The source for the value of this argument
pc_ratetableargsource.ArgumentSourceSet = RateTableArgumentSourceSet
pc_ratetableargsource.CreateTime = Timestamp when the object was created
pc_ratetableargsource.CreateUser = User who created the object
pc_ratetableargsource.IsModifier = True if the source for this value comes from a Modifier, false otherwise
pc_ratetableargsource.Parameter = Parameter (MatchOp) to match against
pc_ratetableargsource.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetableargsource.Root = The CalcRoutineParamName for the ArgumentSource if it is an entity or typelist.  Otherwise null.
pc_ratetableargsource.UpdateTime = Timestamp when the object was last updated
pc_ratetableargsource.UpdateUser = User who last updated the object

pc_ratetableargsourceset = Describes the argument source set for a Rate Table.

pc_ratetableargsourceset.ID = Internally managed primary key
pc_ratetableargsourceset.CalcRoutineParameterSet = CalcRoutineParameterSet
pc_ratetableargsourceset.Code = The parameter set code
pc_ratetableargsourceset.CreateTime = Timestamp when the object was created
pc_ratetableargsourceset.CreateUser = User who created the object
pc_ratetableargsourceset.Name = The logical name of the parameter set.
pc_ratetableargsourceset.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetableargsourceset.RateTableDefinition = RateTableDefinition
pc_ratetableargsourceset.UpdateTime = Timestamp when the object was last updated
pc_ratetableargsourceset.UpdateUser = User who last updated the object
pc_ratetableargsourceset.RateTableArgumentSources = The RateTableArgumentSource's using this Param Set

pc_rtass_name_l10n = null

pc_rtass_name_l10n.ID = Internally managed primary key
pc_rtass_name_l10n.Language = 
pc_rtass_name_l10n.Owner = 
pc_rtass_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtass_name_l10n.Value = 

pc_ratetablecolumn = Holds metadata about a column (parameter or factor) of a rate table

pc_ratetablecolumn.ID = Internally managed primary key
pc_ratetablecolumn.ColumnLabel = The label of a column to be displayed in the UI
pc_ratetablecolumn.ColumnName = The name of a column in a rate table
pc_ratetablecolumn.ColumnScale = The scale to use for this column.
pc_ratetablecolumn.ColumnType = The data type of this column
pc_ratetablecolumn.CreateTime = Timestamp when the object was created
pc_ratetablecolumn.CreateUser = User who created the object
pc_ratetablecolumn.DefinitionForFactor = Rate table definition for a factor
pc_ratetablecolumn.DefinitionForParam = Rate table definition for a parameter
pc_ratetablecolumn.DisplayType = How this column should be displayed
pc_ratetablecolumn.MatchOp = Match operation
pc_ratetablecolumn.PhysicalColumnName = The name of the physical table column to which this column is mapped.
pc_ratetablecolumn.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetablecolumn.SortOrder = Sort order of the column
pc_ratetablecolumn.UpdateTime = Timestamp when the object was last updated
pc_ratetablecolumn.UpdateUser = User who last updated the object
pc_ratetablecolumn.ValueProvider = Fully qualified name of the class implementing value provider interface

pc_rtcol_label_l10n = null

pc_rtcol_label_l10n.ID = Internally managed primary key
pc_rtcol_label_l10n.Language = 
pc_rtcol_label_l10n.Owner = 
pc_rtcol_label_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtcol_label_l10n.Value = 

pc_ratetabledefinition = The table holds metadata information for a rate table

pc_ratetabledefinition.ID = Internally managed primary key
pc_ratetabledefinition.CreateTime = Timestamp when the object was created
pc_ratetabledefinition.CreateUser = User who created the object
pc_ratetabledefinition.EntityName = Name of the physical table that will hold the data for this table.        This may be empty when using the generic physical table rather than a custom one,      although this field can optionally contain the generic physical table's name when using it.
pc_ratetabledefinition.PolicyLine = Code of the Policy Line that the rate table belongs to
pc_ratetabledefinition.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetabledefinition.TableCode = The rate table code
pc_ratetabledefinition.TableDesc = Description of the rate data that is stored by this table
pc_ratetabledefinition.TableName = The logical name of the rate table. Note: The rating data is stored in a separate physical table
pc_ratetabledefinition.UpdateTime = Timestamp when the object was last updated
pc_ratetabledefinition.UpdateUser = User who last updated the object
pc_ratetabledefinition.ArgumentSourceSets = The Parameter Sets for this Table.
pc_ratetabledefinition.Factors = The list of factor definitions for this table
pc_ratetabledefinition.MatchOps = The list of matching operations for this rate table

pc_rtdef_desc_l10n = null

pc_rtdef_desc_l10n.ID = Internally managed primary key
pc_rtdef_desc_l10n.Language = 
pc_rtdef_desc_l10n.Owner = 
pc_rtdef_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtdef_desc_l10n.Value = 

pc_rtdef_name_l10n = null

pc_rtdef_name_l10n.ID = Internally managed primary key
pc_rtdef_name_l10n.Language = 
pc_rtdef_name_l10n.Owner = 
pc_rtdef_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtdef_name_l10n.Value = 

pc_ratetablematchop = The table holds metadata information for a matching operation used to query the associated rate table

pc_ratetablematchop.ID = Internally managed primary key
pc_ratetablematchop.CreateTime = Timestamp when the object was created
pc_ratetablematchop.CreateUser = User who created the object
pc_ratetablematchop.Definition = Foreign Key to Rate Table Definition
pc_ratetablematchop.DisplayText = Localizable text displayed in UI for this operation
pc_ratetablematchop.MatchOpDefinition = Foreign Key to Match Operation Definition
pc_ratetablematchop.Name = The CODE of this matching operation.
pc_ratetablematchop.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetablematchop.UpdateTime = Timestamp when the object was last updated
pc_ratetablematchop.UpdateUser = User who last updated the object
pc_ratetablematchop.ArgumentSources = The Argument Sources that refer to this matchop
pc_ratetablematchop.Params = The list of column definitions for this matching operation

pc_ratetablematchopdef = The table holds metadata information for a matching operation used to query the associated rate table

pc_ratetablematchopdef.ID = Internally managed primary key
pc_ratetablematchopdef.AllowedParameterTypes = Parameter for this Match Operation allowed
pc_ratetablematchopdef.CreateTime = Timestamp when the object was created
pc_ratetablematchopdef.CreateUser = User who created the object
pc_ratetablematchopdef.Deprecated = 
pc_ratetablematchopdef.ImplClass = Fully qualified name of the class implementing this match operation
pc_ratetablematchopdef.NumberOfParameters = Numbers of parameters allowed
pc_ratetablematchopdef.OpCode = Match operation code
pc_ratetablematchopdef.OpDesc = Description of the Match operation applied to a rate table
pc_ratetablematchopdef.OpName = Name of the Match operation applied to a rate table
pc_ratetablematchopdef.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratetablematchopdef.SortOrder = 
pc_ratetablematchopdef.UpdateTime = Timestamp when the object was last updated
pc_ratetablematchopdef.UpdateUser = User who last updated the object
pc_ratetablematchopdef.MatchOps = The list of match operations using this match operation definition

pc_opdef_desc_l10n = null

pc_opdef_desc_l10n.ID = Internally managed primary key
pc_opdef_desc_l10n.Language = 
pc_opdef_desc_l10n.Owner = 
pc_opdef_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_opdef_desc_l10n.Value = 

pc_opdef_name_l10n = null

pc_opdef_name_l10n.ID = Internally managed primary key
pc_opdef_name_l10n.Language = 
pc_opdef_name_l10n.Owner = 
pc_opdef_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_opdef_name_l10n.Value = 

pc_rtmop_desc_l10n = null

pc_rtmop_desc_l10n.ID = Internally managed primary key
pc_rtmop_desc_l10n.Language = 
pc_rtmop_desc_l10n.Owner = 
pc_rtmop_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_rtmop_desc_l10n.Value = 

pcx_sample_RateWCClassCode = 
    A sample lookup table storing Workers Comp class code rates and minimum premiums.  Rates can be jurisdiction-specific
      or be a default for all jurisdictions, jurisdiction=null, with jurisdiction-specific rates overriding defaults.  Lastly, all factors
      have an effective period, [effDate-expDate) where a null date means that side of the range is unbounded.
  

pcx_sample_RateWCClassCode.ID = Internally managed primary key
pcx_sample_RateWCClassCode.classcode = This field indicates the class code we are doing a rate lookup on.
pcx_sample_RateWCClassCode.effDate = The date on which this factor becomes effective (inclusive).  A null date means this has always been effective.
pcx_sample_RateWCClassCode.expDate = The date on which this factor expires (exclusive).  A null date means this will always be effective.
pcx_sample_RateWCClassCode.minPremium = The minimum premium associated with a classcode
pcx_sample_RateWCClassCode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_sample_RateWCClassCode.rate = The base rate to be used
pcx_sample_RateWCClassCode.rateState = Indicates a rate is applicable to a given jurisdiction.  Null indicates a default rate which can be overridden by a rate specific to a jurisdiction. This should be the string value of a typecode in the Jurisdiction typelist. For example, if this is a typecode allowed in the US state of California, the value should be 'CA'.

pc_ratingperiodstartdate = A date which marks the beginning of a new rating period. During a rating period the basis amounts for basis-scalable exposures are typically constant.

pc_ratingperiodstartdate.ID = Internally managed primary key
pc_ratingperiodstartdate.BranchValue = Link to root of effdated tree
pc_ratingperiodstartdate.ChangeType = Type of change made to this row
pc_ratingperiodstartdate.CreateTime = Timestamp when the object was created
pc_ratingperiodstartdate.CreateUser = User who created the object
pc_ratingperiodstartdate.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_ratingperiodstartdate.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_ratingperiodstartdate.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_ratingperiodstartdate.StartDate = Date this rating period takes effect.
pc_ratingperiodstartdate.Type = The type of RPSD (anniversary date, forced re-rate, etc)
pc_ratingperiodstartdate.UpdateTime = Timestamp when the object was last updated
pc_ratingperiodstartdate.UpdateUser = User who last updated the object
pc_ratingperiodstartdate.WCJurisdiction = The jurisdiction to which this rating period belongs.

pc_reasoncodeactiontype = Lookup table for translating a ReasonCode and NotificationCategory to a NotificationActionType

pc_reasoncodeactiontype.ID = Internally managed primary key
pc_reasoncodeactiontype.CreateTime = Timestamp when the object was created
pc_reasoncodeactiontype.CreateUser = User who created the object
pc_reasoncodeactiontype.NotificationActionType = The notification action type to which this configuration applies
pc_reasoncodeactiontype.NotificationCategory = The notification category to which this configuration applies
pc_reasoncodeactiontype.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_reasoncodeactiontype.ReasonCode = The ReasonCode to which this configuration applies
pc_reasoncodeactiontype.UpdateTime = Timestamp when the object was last updated
pc_reasoncodeactiontype.UpdateUser = User who last updated the object

pc_refdatelookup = Reference date type lookup table

pc_refdatelookup.ID = Internally managed primary key
pc_refdatelookup.Availability = Specifies whether this lookup is an inclusion or exclusion for the entity whose availability is being computed
pc_refdatelookup.CreateTime = Timestamp when the object was created
pc_refdatelookup.CreateUser = User who created the object
pc_refdatelookup.EndEffectiveDate = The last day, exclusive, the rule is effective
pc_refdatelookup.LookupTableCode = The code of the LookupTable that contains this lookup
pc_refdatelookup.PolicyLinePatternCode = 
pc_refdatelookup.ProductCode = 
pc_refdatelookup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_refdatelookup.ReferenceDateType = 
pc_refdatelookup.StartEffectiveDate = The first day, inclusive, the rule is effective
pc_refdatelookup.State = The state for which this lookup applies, or null if the lookup is not restricted by state
pc_refdatelookup.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_refdatelookup.UpdateTime = Timestamp when the object was last updated
pc_refdatelookup.UpdateUser = User who last updated the object
pc_refdatelookup.UWCompanyCode = The underwriting company for which this lookup applies, or null if the lookup is not restricted by underwriting company

pc_region = 
        Represents a geographic region, an area of responsibility for a User or Group. A region contains
        a set of region zones.  Regions are therefore heterogenous with respect to a zone type.
      
    

pc_region.ID = Internally managed primary key
pc_region.CreateTime = Timestamp when the object was created
pc_region.CreateUser = User who created the object
pc_region.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_region.Name = name given to the region (this must be unique).
pc_region.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_region.UpdateTime = Timestamp when the object was last updated
pc_region.UpdateUser = User who last updated the object
pc_region.RegionZones = The zones that define this region.

pc_region_zone = A zone of a region.  It contains the zone code, the zone type and the country to which the region belongs.

pc_region_zone.ID = Internally managed primary key
pc_region_zone.Code = The code for this zone, this is the value that should be used for lookups.
pc_region_zone.Country = The country to which the zone belongs.
pc_region_zone.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_region_zone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_region_zone.Region = The region.
pc_region_zone.ZoneType = Type of zone.

pc_region_name_l10n = null

pc_region_name_l10n.ID = Internally managed primary key
pc_region_name_l10n.Language = 
pc_region_name_l10n.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_region_name_l10n.Owner = 
pc_region_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_region_name_l10n.Value = 

pc_reinsurable = A reinsurable delegate for all reinsurable risks of a policy. They could be locations, vehicles or the policy as a whole.

pc_reinsurable.ID = Internally managed primary key
pc_reinsurable.BranchValue = Link to root of effdated tree
pc_reinsurable.ChangeType = Type of change made to this row
pc_reinsurable.CoverageGroup = The RI coverage group.
pc_reinsurable.CreateTime = Timestamp when the object was created
pc_reinsurable.CreateUser = User who created the object
pc_reinsurable.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_reinsurable.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_reinsurable.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_reinsurable.ReinsuranceCurrency = Reinsurance Currency
pc_reinsurable.RiskNumber = The risk number.
pc_reinsurable.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_reinsurable.TotalInsuredValue_amt = 
pc_reinsurable.TotalInsuredValue_cur = 
pc_reinsurable.UpdateTime = Timestamp when the object was last updated
pc_reinsurable.UpdateUser = User who last updated the object
pc_reinsurable.AccountLocation = The account location associated with this risk, denormalized from the PolicyLocation
pc_reinsurable.Location = 

pc_relatedactivity = null

pc_relatedactivity.ID = Internally managed primary key
pc_relatedactivity.ForeignEntity = 
pc_relatedactivity.Owner = 
pc_relatedactivity.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_riskclass = Risk Class Codes

pc_riskclass.ID = Internally managed primary key
pc_riskclass.CoveragePatternCode = Coverage Pattern this applies to.
pc_riskclass.CreateTime = Timestamp when the object was created
pc_riskclass.CreateUser = User who created the object
pc_riskclass.Description = The description of the Risk Class.
pc_riskclass.Hazard = Hazard level of the risk class.
pc_riskclass.PolicyLinePatternCode = Policy Line Pattern this code is valid for
pc_riskclass.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_riskclass.UpdateTime = Timestamp when the object was last updated
pc_riskclass.UpdateUser = User who last updated the object

pc_riskclass_desc = null

pc_riskclass_desc.ID = Internally managed primary key
pc_riskclass_desc.Language = 
pc_riskclass_desc.Owner = 
pc_riskclass_desc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_riskclass_desc.Value = 

pc_role = 
        A set of permissions defining a user Role. A User can be given multiple Roles and will be granted
        the union of all their Role permission sets.
      
    

pc_role.ID = Internally managed primary key
pc_role.CarrierInternalRole = If true, this role is applicable to users internal to the carrier organization.
pc_role.CreateTime = Timestamp when the object was created
pc_role.CreateUser = User who created the object
pc_role.Description = An optional, more detailed description of the role.
pc_role.Name = Displayable name of the role.
pc_role.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_role.RoleType = Type of the role.
pc_role.UpdateTime = Timestamp when the object was last updated
pc_role.UpdateUser = User who last updated the object
pc_role.Privileges = Privileges granted by membership in this role.

pc_privilege = Joins a Role with the permissions granted by it.

pc_privilege.ID = Internally managed primary key
pc_privilege.Permission = Permission granted by the parent role.
pc_privilege.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_privilege.Role = The parent role.

pc_role_desc_l10n = null

pc_role_desc_l10n.ID = Internally managed primary key
pc_role_desc_l10n.Language = 
pc_role_desc_l10n.Owner = 
pc_role_desc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_role_desc_l10n.Value = 

pc_role_name_l10n = null

pc_role_name_l10n.ID = Internally managed primary key
pc_role_name_l10n.Language = 
pc_role_name_l10n.Owner = 
pc_role_name_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_role_name_l10n.Value = 

pc_rtcoledge = null

pc_rtcoledge.ID = Internally managed primary key
pc_rtcoledge.ForeignEntity = 
pc_rtcoledge.Owner = 
pc_rtcoledge.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_rtrefownership = null

pc_rtrefownership.ID = Internally managed primary key
pc_rtrefownership.ForeignEntity = 
pc_rtrefownership.Owner = 
pc_rtrefownership.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_scriptparameter = <code>ScriptParameter.OUR_STANDARD_RATE</code>.
      Their values can be edited in the Guidewire applications from the Administration tab.
    

pc_scriptparameter.ID = Internally managed primary key
pc_scriptparameter.BitValue = Value if the parameter type is Bit.
pc_scriptparameter.CreateTime = Timestamp when the object was created
pc_scriptparameter.CreateUser = User who created the object
pc_scriptparameter.DatetimeValue = Value if the parameter type is Datetime.
pc_scriptparameter.DecimalValue = Value if the parameter type is Decimal.
pc_scriptparameter.Group = Group value.
pc_scriptparameter.IntegerValue = Value if the parameter type is Int.
pc_scriptparameter.MoneyValue = Value if the parameter type is Money.
pc_scriptparameter.MonthlyfrequencyValue = Value if the parameter type is Monthly frequency.
pc_scriptparameter.NonnegativeintegerValue = Value if the parameter type is a Non-negative integer.
pc_scriptparameter.NonnegativemoneyValue = Value if the parameter type is Non-negative money.
pc_scriptparameter.ParameterName = Name of the parameter.
pc_scriptparameter.ParameterType = Identifies the value type (string, integer, boolean, date, etc).
pc_scriptparameter.PercentagedecValue = Value if the parameter type is Percentagedec.
pc_scriptparameter.PercentageValue = Value if the parameter type is Percentage.
pc_scriptparameter.PhoneValue = Value if the parameter type is Phone.
pc_scriptparameter.PositiveintegerValue = Value if the parameter type is Positive integer.
pc_scriptparameter.PositivemoneyValue = Value if the parameter type is Positive money.
pc_scriptparameter.PostalCodeValue = Value if the parameter type is PostalCode.
pc_scriptparameter.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_scriptparameter.RiskValue = Value if the parameter type is Risk.
pc_scriptparameter.SpeedValue = Value if the parameter type is Speed.
pc_scriptparameter.UpdateTime = Timestamp when the object was last updated
pc_scriptparameter.UpdateUser = User who last updated the object
pc_scriptparameter.User = User that created the script parameter.
pc_scriptparameter.VarcharValue = Value if the parameter type is Varchar (i.e. String).
pc_scriptparameter.WeeklyfrequencyValue = Value if the parameter type is Weekly frequency.
pc_scriptparameter.YearValue = Value if the parameter type is Year.

pc_securityzone = 
        Used to partition groups, users and entities assigned to them. By default, a user in one zone
        cannot view an entity assigned to someone in a different zone. Each group belongs to exactly
        one security zone, and a customer can define an arbitrary number of security zones. A user is
        a member of a zone if they are a member of a group in the zone, and an assignable entity belongs
        to a zone if its assigned group belongs to the zone. For full details see the Administration Guide.
      
    

pc_securityzone.ID = Internally managed primary key
pc_securityzone.CreateTime = Timestamp when the object was created
pc_securityzone.CreateUser = User who created the object
pc_securityzone.Description = An optional, more detailed description of the security zone.
pc_securityzone.Name = Name of the security zone.
pc_securityzone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_securityzone.UpdateTime = Timestamp when the object was last updated
pc_securityzone.UpdateUser = User who last updated the object
pc_securityzone.Groups = Groups that belong to this security zone.

pc_seczone_dsc_l10n = null

pc_seczone_dsc_l10n.ID = Internally managed primary key
pc_seczone_dsc_l10n.Language = 
pc_seczone_dsc_l10n.Owner = 
pc_seczone_dsc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_seczone_dsc_l10n.Value = 

pc_seczone_nam_l10n = null

pc_seczone_nam_l10n.ID = Internally managed primary key
pc_seczone_nam_l10n.Language = 
pc_seczone_nam_l10n.Owner = 
pc_seczone_nam_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_seczone_nam_l10n.Value = 

pc_sequence = Store mapping for sequence-key to sequence-number, sequence-key are generated on demand, and number a unique sequnce acquire by application.

pc_sequence.ID = Internally managed primary key
pc_sequence.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_sequence.SequenceKey = The sequence-key (name).
pc_sequence.SequenceNumber = The unique sequence-number for the key.

pcx_sample_ShortRateFactor = 
    A sample table storing short rate cancellation proration factors.  The table and code using it assumes an
      annual term of 365 or 366 days.  Non-annual terms must be normalized in order to use this table.  Factors can
      be state-specific or be a default for all states, state=null, with state-specific rates overriding defaults.
      Lastly, all factors have an effective period, [effDate-expDate) where a null date means that side of the range
      is unbounded.
  

pcx_sample_ShortRateFactor.ID = Internally managed primary key
pcx_sample_ShortRateFactor.daysInPeriod = The number of non-canceled days that the policy was in effect.
pcx_sample_ShortRateFactor.effDate = The date on which this factor becomes effective (inclusive).  A null date means this has always been effective.
pcx_sample_ShortRateFactor.expDate = The date on which this factor expires (exclusive).  A null date means this will always be effective.
pcx_sample_ShortRateFactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_sample_ShortRateFactor.rateState = Indicates a rate is applicable to a given state.  Null indicates a default rate which can be overridden by a rate specific to a state.
pcx_sample_ShortRateFactor.shortRateFactor = The amount that an already prorated value should be multiplied by to get to the short rate proration %.  For example, if premiums were already prorated by 50%, then a factor of 1.2 would get the amount up to the intended 60% (amount * 0.5 * 1.2 = amount * 0.6).
pcx_sample_ShortRateFactor.shortRatePercent = The proration factor (vs. the full term) that should be used.  For example, if (non-canceled length / term length) = 50%, the short rate % might be 60%.  Stored as a decimal, so 50% should be 0.5000.

pc_specialistservice = A node in the specialist services tree.

pc_specialistservice.ID = Internally managed primary key
pc_specialistservice.Active = Indicates whether the service should be used for new service requests.
pc_specialistservice.Code = Unique string identifying this service.
pc_specialistservice.CreateTime = Timestamp when the object was created
pc_specialistservice.CreateUser = User who created the object
pc_specialistservice.Description = Description of the service.
pc_specialistservice.Name = Name of the service.
pc_specialistservice.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_specialistservice.UpdateTime = Timestamp when the object was last updated
pc_specialistservice.UpdateUser = User who last updated the object

pc_spclstsvcparent = null

pc_spclstsvcparent.ID = Internally managed primary key
pc_spclstsvcparent.ForeignEntity = 
pc_spclstsvcparent.Owner = 
pc_spclstsvcparent.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_specsvcdesc_l10n = null

pc_specsvcdesc_l10n.ID = Internally managed primary key
pc_specsvcdesc_l10n.Language = 
pc_specsvcdesc_l10n.Owner = 
pc_specsvcdesc_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_specsvcdesc_l10n.Value = 

pc_specsvcname_l10n = null

pc_specsvcname_l10n.ID = Internally managed primary key
pc_specsvcname_l10n.Language = 
pc_specsvcname_l10n.Owner = 
pc_specsvcname_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_specsvcname_l10n.Value = 

pc_standardworkqueue = Standard WorkItem implementation. This should work for most work queues.

pc_standardworkqueue.ID = Internally managed primary key
pc_standardworkqueue.Attempts = 
pc_standardworkqueue.CheckedOutBy = 
pc_standardworkqueue.CreationTime = 
pc_standardworkqueue.Exception = Stack trace of the exception
pc_standardworkqueue.LastUpdateTime = 
pc_standardworkqueue.Priority = 
pc_standardworkqueue.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_standardworkqueue.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_standardworkqueue.QueueType = The queue.
pc_standardworkqueue.Status = Status of this workitem.
pc_standardworkqueue.Target = A handle, generally the ID, to the target.

pc_SubWorkflows = null

pc_SubWorkflows.ID = Internally managed primary key
pc_SubWorkflows.ForeignEntity = 
pc_SubWorkflows.Owner = 
pc_SubWorkflows.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_systemparameter = Name/value pairs for system parameters.

pc_systemparameter.Name = Property name.
pc_systemparameter.Value = Property value.

pc_tabledatadist = Stores data distribution info for each table in the database.

pc_tabledatadist.ID = Internally managed primary key
pc_tabledatadist.AdminTable = True if admin table
pc_tabledatadist.DatabaseDataDist = DatabaseDataDist for this object.
pc_tabledatadist.EntityName = Name of entity.  Can be subtype entity.
pc_tabledatadist.NumLoadedThruStagingTables = Count of # of rows loaded through the staging tables. (null if non-loadable)
pc_tabledatadist.NumRetiredRows = Count of # of retired rows. (null if non-retireable)
pc_tabledatadist.NumRows = Count of # of rows.
pc_tabledatadist.NumUpdatedRows = Count of # of updated rows.
pc_tabledatadist.NumUpdates = Count of # of total updates.
pc_tabledatadist.PlatformTable = True if platform table
pc_tabledatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_tabledatadist.StagingTableDist = True if staging table distribution
pc_tabledatadist.TableName = Name of table.
pc_tabledatadist.TypeListTableDist = True if type list table distribution
pc_tabledatadist.ArrayDataDists = Collection of ArrayDataDists linked to this TableDataDist.
pc_tabledatadist.AssignableForKeyDataDists = Collection of AssignableForKeyDataDists linked to this TableDataDist.
pc_tabledatadist.BeanVersionDataDists = Collection of BeanVersionDataDists linked to this TableDataDist.
pc_tabledatadist.BlobColDataDists = Collection of BlobColDataDists linked to this TableDataDist.
pc_tabledatadist.BooleanColDataDists = Collection of BooleanColDataDists linked to this TableDataDist.
pc_tabledatadist.ClobColDataDists = Collection of ClobColDataDists linked to this TableDataDist.
pc_tabledatadist.CustomDataDistRequests = Collection of CustomDataDistRequests linked to this TableDataDist.
pc_tabledatadist.DateAnalysisDataDists = Collection of DateAnalysisDataDists linked to this TableDataDist.
pc_tabledatadist.DateBinnedDataDists = Collection of DateBinnedDataDists linked to this TableDataDist.
pc_tabledatadist.DateSpanDataDists = Collection of min and max dates for all date columns in this table
pc_tabledatadist.ForKeyDataDists = Collection of ForKeyDataDists linked to this TableDataDist.
pc_tabledatadist.GenericGroupDataDists = Collection of GenericGroupDataDists linked to this TableDataDist.
pc_tabledatadist.HourAnalysisDataDists = Collection of HourAnalysisDataDists linked to this TableDataDist.
pc_tabledatadist.NullableColumnDataDists = Collection of NullableColumnDataDists linked to this TableDataDist.
pc_tabledatadist.TypeKeyDataDists = Collection of TypeKeyDataDists linked to this TableDataDist.

pc_tableparent = null

pc_tableparent.ID = Internally managed primary key
pc_tableparent.ForeignEntity = 
pc_tableparent.Owner = 
pc_tableparent.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_tableregistry = Stores metadata for each table in the database.

pc_tableregistry.IdName = Name of the unique id.
pc_tableregistry.TableName = Name of the table.

pc_tableupdatestats = Stores update statistics info for each table in the database.

pc_tableupdatestats.ID = Internally managed primary key
pc_tableupdatestats.DatabaseUpdateStats = DatabaseUpdateStats for this object.
pc_tableupdatestats.EndTime = End time of update statistics process for this table.
pc_tableupdatestats.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_tableupdatestats.StartTime = Start time of update statistics process for this table.
pc_tableupdatestats.TableName = Name of table.
pc_tableupdatestats.TableUpdateStatsStatements = Collection of TableUpdateStatsStatements linked to this TableUpdateStats.

pc_tableupdatestatsstatement = Database parameter row.

pc_tableupdatestatsstatement.ID = Internally managed primary key
pc_tableupdatestatsstatement.ObjectName = Object Name
pc_tableupdatestatsstatement.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_tableupdatestatsstatement.TableUpdateStats = Parent
pc_tableupdatestatsstatement.UpdateStatsStatement = Update Statistics Statement
pc_tableupdatestatsstatement.UpdateStatsType = Type of process running the operation.

pc_taxlocation = A defined location for tax purposes.

pc_taxlocation.ID = Internally managed primary key
pc_taxlocation.City = The city for the tax location
pc_taxlocation.Code = The code for the tax location
pc_taxlocation.County = The county for the tax location
pc_taxlocation.CreateTime = Timestamp when the object was created
pc_taxlocation.CreateUser = User who created the object
pc_taxlocation.Description = The description of this tax location
pc_taxlocation.EffectiveDate = Effective date of this row.
pc_taxlocation.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_taxlocation.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_taxlocation.State = The state for this tax location
pc_taxlocation.TLPrefix = The TaxLocation prefix for this tax location
pc_taxlocation.UpdateTime = Timestamp when the object was last updated
pc_taxlocation.UpdateUser = User who last updated the object

pc_territorycode = A territory code attached to a location.

pc_territorycode.ID = Internally managed primary key
pc_territorycode.BranchValue = Link to root of effdated tree
pc_territorycode.ChangeType = Type of change made to this row
pc_territorycode.Code = Territory Code
pc_territorycode.CreateTime = Timestamp when the object was created
pc_territorycode.CreateUser = User who created the object
pc_territorycode.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_territorycode.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_territorycode.PolicyLinePatternCode = Policy line this code is valid for
pc_territorycode.PolicyLocation = 
pc_territorycode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_territorycode.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_territorycode.UpdateTime = Timestamp when the object was last updated
pc_territorycode.UpdateUser = User who last updated the object

pc_tmpContactAddressLink = Temporary table for linking new addresses to their contacts.

pc_tmpContactAddressLink.ID = Internally managed primary key
pc_tmpContactAddressLink.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_tmpContactAddressLink.TempAddressID = Address to which this entry's contact links.

pc_transactionid = Transaction ids sent to create the illusion of idempotency

pc_transactionid.CreationTime = Time of creating the transaction id.
pc_transactionid.tid = Unique transaction id

pc_typecodecountdatadist = Stores typekey type code data distribution.

pc_typecodecountdatadist.ID = Internally managed primary key
pc_typecodecountdatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_typecodecountdatadist.TypeCode = Name of type code.
pc_typecodecountdatadist.TypeCodeCount = Count of type code for this table.
pc_typecodecountdatadist.TypeKeyDataDist = TypeKeyDataDist for this object.

pc_typekeydatadist = Stores type key data distribution.

pc_typekeydatadist.ID = Internally managed primary key
pc_typekeydatadist.NumNonNull = Count of # of non null values.
pc_typekeydatadist.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_typekeydatadist.TableDataDist = TableDataDist for this object.
pc_typekeydatadist.TypeKeyName = Name of type key.
pc_typekeydatadist.TypeCodeCountDataDists = Collection of TypeCodeCountDataDists linked to this ArrayDataDist.

pc_uwauthoritygrant = A grant of authority to approve a specific type of issue, potentially with constraints on the values that can be approved.

pc_uwauthoritygrant.ID = Internally managed primary key
pc_uwauthoritygrant.ApproveAnyValue = If true, grants authority to approve any value.
pc_uwauthoritygrant.CreateTime = Timestamp when the object was created
pc_uwauthoritygrant.CreateUser = User who created the object
pc_uwauthoritygrant.IssueType = 
pc_uwauthoritygrant.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwauthoritygrant.UpdateTime = Timestamp when the object was last updated
pc_uwauthoritygrant.UpdateUser = User who last updated the object
pc_uwauthoritygrant.UWAuthorityProfile = The authority profile this grant belongs to.
pc_uwauthoritygrant.Value = The value to compare against when determining if this grant allows approval of an issue.

pc_uwauthorityprofile = A UWAuthorityProfile collects up a set of UWAuthorityGrants that can be assigned to a user.

pc_uwauthorityprofile.ID = Internally managed primary key
pc_uwauthorityprofile.CreateTime = Timestamp when the object was created
pc_uwauthorityprofile.CreateUser = User who created the object
pc_uwauthorityprofile.Description = The description of the profile.
pc_uwauthorityprofile.Name = The name of the profile.
pc_uwauthorityprofile.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwauthorityprofile.UpdateTime = Timestamp when the object was last updated
pc_uwauthorityprofile.UpdateUser = User who last updated the object
pc_uwauthorityprofile.Grants = The set of grants that make up the profile.

pc_authprof_ds_l10n = null

pc_authprof_ds_l10n.ID = Internally managed primary key
pc_authprof_ds_l10n.Language = 
pc_authprof_ds_l10n.Owner = 
pc_authprof_ds_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_authprof_ds_l10n.Value = 

pc_authprof_nm_l10n = null

pc_authprof_nm_l10n.ID = Internally managed primary key
pc_authprof_nm_l10n.Language = 
pc_authprof_nm_l10n.Owner = 
pc_authprof_nm_l10n.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_authprof_nm_l10n.Value = 

pc_uwcompany = An underwriting company, legal entity licensed to issue policies.

pc_uwcompany.ID = Internally managed primary key
pc_uwcompany.Code = Code of the underwriting company
pc_uwcompany.CreateTime = Timestamp when the object was created
pc_uwcompany.CreateUser = User who created the object
pc_uwcompany.NAICCode = In the US, the regulatory ID is the NAIC code: 4-digit group code followed by 5-digit code assigned by the National Association of Insurance Commisioners (NAIC).  Other countries may have similar identifying codes issued by their regulatory bodies.
pc_uwcompany.Name = Underwriting company name.
pc_uwcompany.ParentName = Parent company name.
pc_uwcompany.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwcompany.State = For US underwriters, the state in which the company has its permanent legal residence.
pc_uwcompany.Status = The status of the company.
pc_uwcompany.UpdateTime = Timestamp when the object was last updated
pc_uwcompany.UpdateUser = User who last updated the object
pc_uwcompany.LicensedStates = The states in which this company is licensed to underwrite policies in.

pc_uwissue = A UWIssue is a raised issue of business concern.  It can be created at any point in the lifetime of a PolicyPeriod.

pc_uwissue.ID = Internally managed primary key
pc_uwissue.Active = Whether or not this issue is active.  An issue will be marked inactive if it no longer applies to the policy but we want to keep approvals for the issue around in case the issue occurs again.
pc_uwissue.ApprovalBlockingPoint = The point at which this approval still blocks
pc_uwissue.ApprovalDurationType = A typekey specifying how long the approval is valid; if 1yr or 3yr, then an expiration date is computed.
pc_uwissue.ApprovalInvalidFrom = The date on which the approval ceases to be valid. This value is null except when DurationType is 1yr or 3yrs.
pc_uwissue.ApprovalValue = The limit value to which the issue has been approved
pc_uwissue.ApprovingUser = 
pc_uwissue.AutomaticApprovalCause = The operation in progress when automatic approvals were created for auto-approvable issues. Null is used to indicate a human-generated approval.
pc_uwissue.BranchValue = Link to root of effdated tree
pc_uwissue.CanEditApprovalBeforeBind = If true then approval still valid with poilcy edits before bind
pc_uwissue.ChangeType = Type of change made to this row
pc_uwissue.CreateTime = Timestamp when the object was created
pc_uwissue.CreateUser = User who created the object
pc_uwissue.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_uwissue.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_uwissue.HasApprovalOrRejection = If true then approval this issue has an associated approval.
pc_uwissue.IssueKey = The unique key used to identify this issue.
pc_uwissue.IssueType = The type of this issue, used to match issues and to determine what authority grant is required in order to approve the issue.
pc_uwissue.LongDescription = The long description of this issue.
pc_uwissue.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwissue.ShortDescription = The short description of this issue.
pc_uwissue.UpdateTime = Timestamp when the object was last updated
pc_uwissue.UpdateUser = User who last updated the object
pc_uwissue.Value = The value, if any, associated with this issue. If present, the value will be used to compare with authority grants to determine if a user can approve this issue, and with approvals themselves to determine if the approval still applies.

pc_uwissuehistory = The history of a UWIssue.  Includes, for example, creating, removing, approving or reopening issue.

pc_uwissuehistory.ID = Internally managed primary key
pc_uwissuehistory.ApprovalDurationType = The typekey specifying the expected duration of this Approval; if 1yr or 3yr, an expiration date is computed from this value. Only used for Approval history.
pc_uwissuehistory.ApprovalInvalidFrom = The date on which the approval ceases to be valid. This value is null except when DurationType is 1yr or 3yrs. Only used for Approval history.
pc_uwissuehistory.AutomaticOperationCause = The automatically triggered operation in progress when this history was created. Null is used to indicate a human-generated event.
pc_uwissuehistory.BlockingPoint = After this operation, the point at which this issue will block progress without further Approval
pc_uwissuehistory.CreateTime = Timestamp when the object was created
pc_uwissuehistory.CreateUser = User who created the object
pc_uwissuehistory.EditBeforeBind = Whether the operation remains valid through binding even if the policy is edited
pc_uwissuehistory.EffDate = The date on which the operation on this issue became effective.
pc_uwissuehistory.IssueKey = The unique key used to identify this issue.
pc_uwissuehistory.IssueType = What type of issue this is. Used both to match up issues and to determine what authority grant is required in order to approve the issue.
pc_uwissuehistory.PolicyPeriod = The PolicyPeriod for which this history event was generated.
pc_uwissuehistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwissuehistory.ReferenceValue = The value to compare against
pc_uwissuehistory.ResponsibleUser = 
pc_uwissuehistory.Status = The nature of the operation on an issue which this history chronicles.
pc_uwissuehistory.UpdateTime = Timestamp when the object was last updated
pc_uwissuehistory.UpdateUser = User who last updated the object

pc_uwissuetype = Types of undewriting issues.

pc_uwissuetype.ID = Internally managed primary key
pc_uwissuetype.AutoApprovable = Whether or not this issue defines an automatically approvable issue.
pc_uwissuetype.BlockingPoint = The point at which this issue should block progress of a job
pc_uwissuetype.CheckingSet = The point at which issues of this type are created.
pc_uwissuetype.Code = The concise name of the issue type, used to identify the issue within rules.
pc_uwissuetype.Comparator = The comparator to use with this issue
pc_uwissuetype.CreateTime = Timestamp when the object was created
pc_uwissuetype.CreateUser = User who created the object
pc_uwissuetype.DefaultApprovalBlockingPoint = Default point to which an approval can advance this job.
pc_uwissuetype.DefaultDurationType = Default value for the duration type
pc_uwissuetype.DefaultEditBeforeBind = Default value for the edit before bind flag
pc_uwissuetype.DefaultValueAssignmentType = Specifies the mechanism by which a default value is assigned to the "Reference Value"
pc_uwissuetype.DefaultValueOffsetAmount = The numeric amount of offset to apply to the original "Reference Value" in order compute a default value for the approval.  This value is ignored when the "DefaultValueAssignmentType" is "Fixed"
pc_uwissuetype.DefaultValueOffsetCurrency = Currency to be used for the DefaultValueOffsetAmount if the comparator is a MonetaryAmount one and the DefaultValueAssignmentType is OffsetAmount.
pc_uwissuetype.Description = The more human-readable description of the issue type.
pc_uwissuetype.Name = The more human-readable name of the issue type.
pc_uwissuetype.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwissuetype.UpdateTime = Timestamp when the object was last updated
pc_uwissuetype.UpdateUser = User who last updated the object
pc_uwissuetype.ValueFormatterType = The type of the formatter to be used for issue and grant values of this issue type

pc_uwisstype_desc = null

pc_uwisstype_desc.ID = Internally managed primary key
pc_uwisstype_desc.Language = 
pc_uwisstype_desc.Owner = 
pc_uwisstype_desc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwisstype_desc.Value = 

pc_uwisstype_name = null

pc_uwisstype_name.ID = Internally managed primary key
pc_uwisstype_name.Language = 
pc_uwisstype_name.Owner = 
pc_uwisstype_name.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwisstype_name.Value = 

pc_uwissueuniqueid = A UWIssueUniqueID is an issue type/issue key pair, uniquely idenitifying a UWIssue.

pc_uwissueuniqueid.ID = Internally managed primary key
pc_uwissueuniqueid.CreateTime = Timestamp when the object was created
pc_uwissueuniqueid.CreateUser = User who created the object
pc_uwissueuniqueid.IssueKey = The unique key used to identify this issue.
pc_uwissueuniqueid.IssueType = What type of issue this is.  Used both to match up issues and to determine what authority grant is required in order to approve the issue.
pc_uwissueuniqueid.PolicyTerm = The PolicyTerm for which the corresponding issue was human-touched.
pc_uwissueuniqueid.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwissueuniqueid.UpdateTime = Timestamp when the object was last updated
pc_uwissueuniqueid.UpdateUser = User who last updated the object

pc_uw_issue_ldesc = null

pc_uw_issue_ldesc.ID = Internally managed primary key
pc_uw_issue_ldesc.BranchValue = Link to root of effdated tree
pc_uw_issue_ldesc.ChangeType = Type of change made to this row
pc_uw_issue_ldesc.CreateTime = Timestamp when the object was created
pc_uw_issue_ldesc.CreateUser = User who created the object
pc_uw_issue_ldesc.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_uw_issue_ldesc.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_uw_issue_ldesc.Language = 
pc_uw_issue_ldesc.Owner = 
pc_uw_issue_ldesc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uw_issue_ldesc.UpdateTime = Timestamp when the object was last updated
pc_uw_issue_ldesc.UpdateUser = User who last updated the object
pc_uw_issue_ldesc.Value = 

pc_uw_issue_sdesc = null

pc_uw_issue_sdesc.ID = Internally managed primary key
pc_uw_issue_sdesc.BranchValue = Link to root of effdated tree
pc_uw_issue_sdesc.ChangeType = Type of change made to this row
pc_uw_issue_sdesc.CreateTime = Timestamp when the object was created
pc_uw_issue_sdesc.CreateUser = User who created the object
pc_uw_issue_sdesc.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_uw_issue_sdesc.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_uw_issue_sdesc.Language = 
pc_uw_issue_sdesc.Owner = 
pc_uw_issue_sdesc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uw_issue_sdesc.UpdateTime = Timestamp when the object was last updated
pc_uw_issue_sdesc.UpdateUser = User who last updated the object
pc_uw_issue_sdesc.Value = 

pc_uwreferralreason = A referral reason for a given policy

pc_uwreferralreason.ID = Internally managed primary key
pc_uwreferralreason.CreateTime = Timestamp when the object was created
pc_uwreferralreason.CreateUser = User who created the object
pc_uwreferralreason.IssueKey = The unique key used to identify this issue.
pc_uwreferralreason.IssueType = The type of this issue, used to match issues and to determine what authority grant is required in order to approve the issue.
pc_uwreferralreason.LongDescription = The long description of this issue.
pc_uwreferralreason.Policy = The policy for which this referral reason applies
pc_uwreferralreason.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uwreferralreason.ShortDescription = The short description of this issue.
pc_uwreferralreason.Status = Whether this referral reason is open or closed.
pc_uwreferralreason.UpdateTime = Timestamp when the object was last updated
pc_uwreferralreason.UpdateUser = User who last updated the object
pc_uwreferralreason.Value = The value, if any, associated with this issue. If present, the value will be used to compare with authority grants to determine if a user can approve this issue, and with approvals themselves to determine if the approval still applies.

pc_uw_ref_ldesc = null

pc_uw_ref_ldesc.ID = Internally managed primary key
pc_uw_ref_ldesc.Language = 
pc_uw_ref_ldesc.Owner = 
pc_uw_ref_ldesc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uw_ref_ldesc.Value = 

pc_uw_ref_sdesc = null

pc_uw_ref_sdesc.ID = Internally managed primary key
pc_uw_ref_sdesc.Language = 
pc_uw_ref_sdesc.Owner = 
pc_uw_ref_sdesc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_uw_ref_sdesc.Value = 

pc_loaddbstatisticscommand = DB statistics commands to run after a staging table load.

pc_loaddbstatisticscommand.ID = Internally managed primary key
pc_loaddbstatisticscommand.LoadCommand = Parent.
pc_loaddbstatisticscommand.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_loaddbstatisticscommand.StatsCommand = Update database statistics command to run.
pc_loaddbstatisticscommand.TableName = Affected table.

pc_upgradedbstorageset = Stores a database storage set snapshot.

pc_upgradedbstorageset.ID = Internally managed primary key
pc_upgradedbstorageset.AfterUpgrade = True is set created after the process, false if before
pc_upgradedbstorageset.Name = Name of storage set.
pc_upgradedbstorageset.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradedbstorageset.TimeTaken = Time storage set taken.
pc_upgradedbstorageset.UpgradeDBStorageSetType = Database storage set type
pc_upgradedbstorageset.UpgradeInstance = Upgrade instance for this object
pc_upgradedbstorageset.UpgradeDBStorageSetColumns = 
pc_upgradedbstorageset.UpgradeDBStorageSetResults = 

pc_upgradedbstoragesetcolumns = Stores ordered column names for a database storage set.

pc_upgradedbstoragesetcolumns.ID = Internally managed primary key
pc_upgradedbstoragesetcolumns.ColumnClass = Java class of data.
pc_upgradedbstoragesetcolumns.ColumnName = Column name.
pc_upgradedbstoragesetcolumns.ColumnOrder = 0-based ordering of columnname.
pc_upgradedbstoragesetcolumns.CompareColumn = True if column is compared side by side.  False will show differences in parentheses
pc_upgradedbstoragesetcolumns.KeyColumn = True if used to match before and after object.  False if compare before and after
pc_upgradedbstoragesetcolumns.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradedbstoragesetcolumns.UpgradeDBStorageSet = Database storage set for this object

pc_upgradedbstoragesetresults = Stores results of database storage set.

pc_upgradedbstoragesetresults.ID = Internally managed primary key
pc_upgradedbstoragesetresults.ColumnOrder = 0-based ordering of column of result within DBSS results
pc_upgradedbstoragesetresults.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradedbstoragesetresults.RowOrder = 0-based ordering of row of result within DBSS results
pc_upgradedbstoragesetresults.UpgradeDBStorageSet = Database storage set for this object
pc_upgradedbstoragesetresults.Value = Result value.

pc_upgradedatamodelinfo = Capture info at time of each deployment

pc_upgradedatamodelinfo.ID = Internally managed primary key
pc_upgradedatamodelinfo.ApplicationMajorVers = Application Major Schema Version at time of deployment
pc_upgradedatamodelinfo.ApplicationMinorVers = Application Minor Schema Version at time of deployment
pc_upgradedatamodelinfo.ExtensionsVers = Extensions Version at time of deployment
pc_upgradedatamodelinfo.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_upgradedatamodelinfo.PlatformMajorVers = Platform Major Schema Version at time of deployment
pc_upgradedatamodelinfo.PlatformMinorVers = Platform Minor Schema Version at time of deployment
pc_upgradedatamodelinfo.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_upgradeinstance = Upgrade history.

pc_upgradeinstance.ID = Internally managed primary key
pc_upgradeinstance.DefdTasksCompleted = Whether we completed the deferred upgrade tasks
pc_upgradeinstance.EndTime = Timestamp when the timing completed
pc_upgradeinstance.ExecDuration = Execution duration in seconds
pc_upgradeinstance.NumDefdTasksCompleted = Number of completed deferred upgrade tasks
pc_upgradeinstance.ProfilerData = Raw Profiler data
pc_upgradeinstance.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradeinstance.SourceAppMajorVersion = Application major version of source
pc_upgradeinstance.SourceAppMinorVersion = Application minor version of source
pc_upgradeinstance.SourceExtensionsVersion = Extension version of source
pc_upgradeinstance.SourcePlMajorVersion = Platform major version of source
pc_upgradeinstance.SourcePlMinorVersion = Platform minor version of source
pc_upgradeinstance.StartTime = Timestamp when the timing began
pc_upgradeinstance.TargetAppMajorVersion = Application major version of target
pc_upgradeinstance.TargetAppMinorVersion = Application minor version of target
pc_upgradeinstance.TargetExtensionsVersion = Extension version of target
pc_upgradeinstance.TargetPlMajorVersion = Platform major version of target
pc_upgradeinstance.TargetPlMinorVersion = Platform minor version of target
pc_upgradeinstance.TotalNumDefdTasks = Total number of deferred upgrade tasks
pc_upgradeinstance.UpdateStatistics = Whether we updated statistics as part of this upgrade
pc_upgradeinstance.DBMSDumps = 
pc_upgradeinstance.UpgradeDBStorageSets = 
pc_upgradeinstance.UpgradeRowCounts = 
pc_upgradeinstance.UpgradeTableRegistries = 

pc_upgraderowcount = Before and after row counts within an upgrade.

pc_upgraderowcount.ID = Internally managed primary key
pc_upgraderowcount.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgraderowcount.RowCountAfterUpgrade = Row count after upgrade
pc_upgraderowcount.RowCountBeforeUpgrade = Row count before upgrade
pc_upgraderowcount.RowCountChange = Row count change after upgrade
pc_upgraderowcount.TableName = Table name
pc_upgraderowcount.UpgradeInstance = Parent

pc_upgradeschemaversion = Stores version number of upgrade instrumentation schema to control upgrading these tables.

pc_upgradeschemaversion.Name = Column for unique index
pc_upgradeschemaversion.UpgradeSchemaVersion = Upgrade instrumentation schema version.

pc_upgradetableregistry = Before and after table registry entries within an upgrade.

pc_upgradetableregistry.ID = Internally managed primary key
pc_upgradetableregistry.IDNameAfterUpgrade = Table registry entry after upgrade
pc_upgradetableregistry.IDNameBeforeUpgrade = Table registry entry before upgrade
pc_upgradetableregistry.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradetableregistry.TableName = Table name
pc_upgradetableregistry.UpgradeInstance = Parent

pc_upgradevtdbmsdump = DBMS-specific performance information for a version trigger.

pc_upgradevtdbmsdump.ID = Internally managed primary key
pc_upgradevtdbmsdump.Contents = query
pc_upgradevtdbmsdump.EndTime = Timestamp when the timing completed
pc_upgradevtdbmsdump.ExecDuration = Execution duration in seconds
pc_upgradevtdbmsdump.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_upgradevtdbmsdump.StartTime = Timestamp when the timing began
pc_upgradevtdbmsdump.UpgradeInstance = UpgradeInstance
pc_upgradevtdbmsdump.VersionActionName = Fully qualified name of version trigger to which this applies

pc_user = System users and related attributes. User personal attributes include language, experience level, contact information and vacation status. User business attributes include org, department, title and type (internal or external).

pc_user.ID = Internally managed primary key
pc_user.Contact = Contact entry related to the user.
pc_user.CreateTime = Timestamp when the object was created
pc_user.CreateUser = User who created the object
pc_user.Credential = Security credential for the user.
pc_user.DefaultCountry = User's default country
pc_user.DefaultPhoneCountry = User's default phone country
pc_user.Department = User's department within the company.
pc_user.ExperienceLevel = Experience level of the user.
pc_user.ExternalUser = If true, the user is an external user, and claims assigned to the user should be treated as externally owned.
pc_user.JobTitle = User's job title.
pc_user.Language = User's preferred language.
pc_user.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_user.Locale = User's preferred locale.
pc_user.Organization = Each user should belong to exactly one organization
pc_user.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_user.SessionTimeoutSecs = User's session timeout value in seconds
pc_user.SystemUserType = Indicates the type of special system users (for example, default claim owner). This is null for regular users.
pc_user.TimeZone = User's time zone.
pc_user.UpdateTime = Timestamp when the object was last updated
pc_user.UpdateUser = User who last updated the object
pc_user.UseOrgAddress = If true, user's address is the same as the address of their organization.
pc_user.UseProducerCodeSecurity = Is the user subject to ProducerCode security. This defaults to true for external users and false for internal users.
pc_user.UserSettings = Settings for this user (formerly known as preferences).
pc_user.UserType = Indicates type of the user.  Primarily used for assignments.
pc_user.VacationStatus = The vacation status of this user.
pc_user.ValidationLevel = Validation level that this object passed (if any) before it was stored.
pc_user.Attributes = Attributes for the user.
pc_user.BackupUsers = Backup users for this user. Though this is an array, users can only have one backup user.
pc_user.GroupUsers = Groups associated with this user.
pc_user.Regions = Regions associated with this user.
pc_user.RelatedAgencies = External organizations that an underwriter deals with.
pc_user.Roles = Security roles granted to the user.
pc_user.UserAuthorityProfiles = Authority profiles assigned to the user.
pc_user.UserProducerCodes = Available producer codes to a user.

pc_userauthorityprofile = A join entity that links a user to an authority profile.

pc_userauthorityprofile.ID = Internally managed primary key
pc_userauthorityprofile.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_userauthorityprofile.User = The associated User.
pc_userauthorityprofile.UWAuthorityProfile = The associated authority profile

pc_userbackup = 
        Supports the creation of backup user attribute for a particular User.
      
    

pc_userbackup.ID = Internally managed primary key
pc_userbackup.BackupUser = User that will serve as backup.
pc_userbackup.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_userbackup.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_userbackup.User = User.

pc_usergroupstats = Job and activity statistics for a given user/group combination.

pc_usergroupstats.ID = Internally managed primary key
pc_usergroupstats.ApprovedMidTermChangesByActivity = Number mid-term changes assigned to user (or users in group) and manually approved by underwriter counted by activity.
pc_usergroupstats.ApprovedMidTermChangesByRole = Number mid-term changes assigned to user (or users in group) and manually approved by underwriter counted by role.
pc_usergroupstats.BoundSubmissionsByActivity = Number submissions assigned to user (or users in group), bound by agent, and approved by underwriter counted by activity.
pc_usergroupstats.BoundSubmissionsByRole = Number submissions assigned to user (or users in group), bound by agent, and approved by underwriter counted by role.
pc_usergroupstats.CalculateDate = Date when statistics were calculated.
pc_usergroupstats.CompletedActivities = Number completed activities assigned to user (or users in group).
pc_usergroupstats.Group = The given group.
pc_usergroupstats.MisassignedActivities = Number of activities that are not associated with a member of the assigned group
pc_usergroupstats.MisassignedJobsByActivity = Number of jobs that are not associated with a member of the assigned group
pc_usergroupstats.MisassignedJobsByRole = Number of jobs that are not associated with a member of the assigned group
pc_usergroupstats.NewMidTermChangesByActivity = Number new mid-term changes assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.NewMidTermChangesByRole = Number new mid-term changes assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.NewRenewalsByActivity = Number new renewals assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.NewRenewalsByRole = Number new renewals assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.NewSubmissionsByActivity = Number new submissions assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.NewSubmissionsByRole = Number new submissions assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.NonRenewedRenewalsByActivity = Number renewals assigned to user (or users in group) and processed for non-renew by underwriter counted by activity.
pc_usergroupstats.NonRenewedRenewalsByRole = Number renewals assigned to user (or users in group) and processed for non-renew by underwriter counted by role.
pc_usergroupstats.NotTakenRenewalsByActivity = Number renewals assigned to user (or users in group) and not-taken by insured counted by activity.
pc_usergroupstats.NotTakenRenewalsByRole = Number renewals assigned to user (or users in group) and not-taken by insured counted by role.
pc_usergroupstats.OpenActivities = Number open activities assigned to user (or users in group).
pc_usergroupstats.OpenMidTermChangesByActivity = Number open mid-term changes assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.OpenMidTermChangesByRole = Number open mid-term changes assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.OpenRenewalsByActivity = Number open renewals assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.OpenRenewalsByRole = Number open renewals assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.OpenSubmissionsByActivity = Number open submisisons assigned to user (or users in group) to be manually reviewed counted by activity.
pc_usergroupstats.OpenSubmissionsByRole = Number open submisisons assigned to user (or users in group) to be manually reviewed counted by role.
pc_usergroupstats.OverdueActivities = Number overdue activities assigned to user (or users in group).
pc_usergroupstats.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_usergroupstats.RecordType = Type of data in this row. Extension to allow for storing of pre-aggregated stats.
pc_usergroupstats.RenewedRenewalsByActivity = Number renewals assigned to user (or users in group) and manually approved by underwriter counted by activity.
pc_usergroupstats.RenewedRenewalsByRole = Number renewals assigned to user (or users in group) and manually approved by underwriter counted by role.
pc_usergroupstats.User = The given user.

pc_userproducercode = The relationship between a user and its producer codes and associated roles.

pc_userproducercode.ID = Internally managed primary key
pc_userproducercode.ProducerCode = The ProducerCode.
pc_userproducercode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_userproducercode.Role = Security role granted to the user producer code.
pc_userproducercode.User = The associated User.

pc_userregion = Joins a user to one or more regions.

pc_userregion.ID = Internally managed primary key
pc_userregion.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_userregion.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_userregion.Region = Associated region.
pc_userregion.User = Associated user.

pc_userrole = 
        Joins a User with their security roles. The system creates this entity when you assign a Role to a User.
        The User will be granted the union of all the permissions granted by their Roles.
      
    

pc_userrole.ID = Internally managed primary key
pc_userrole.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_userrole.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_userrole.Role = Security role granted to the user.
pc_userrole.User = Parent user.

pc_usersettings = User settings/preferences

pc_usersettings.ID = Internally managed primary key
pc_usersettings.CancelAlertDismiss = The date/time when the canceled Activities alert bar was last dismissed
pc_usersettings.CreateTime = Timestamp when the object was created
pc_usersettings.CreateUser = User who created the object
pc_usersettings.EmailOnActAssign = Indicates whether to send e-mail when this user is assigned an activity.
pc_usersettings.LastAccounts = Used to store the accounts last viewed across sessions; not user controllable.
pc_usersettings.LastContacts = Used to store the contacts last viewed across sessions; not user controllable.
pc_usersettings.LastPolicies = Used to store the policies last viewed across sessions; not user controllable.
pc_usersettings.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_usersettings.MaxRecentAccounts = Maximum recent accounts to show in Account Tab.
pc_usersettings.MaxRecentContacts = Maximum recent contacts to show in Contact Tab.
pc_usersettings.MaxRecentPoliciesAndJobs = Maximum recent policies to show in Policy Tab.
pc_usersettings.PrintMargins = The margin sizes for printing (in inches)
pc_usersettings.PrintPageNums = Whether to print page numbers when printing.
pc_usersettings.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_usersettings.RotateTables = Whether to rotate table data when printing.
pc_usersettings.ShowPrintPreview = Whether to show a print preview before printing.
pc_usersettings.StartupPage = The startup page for this user
pc_usersettings.UpdateTime = Timestamp when the object was last updated
pc_usersettings.UpdateUser = User who last updated the object

pc_vehicleclasscode = A Primary Vehicle Class Code is a composite value derived from fleet status, type of vehicle, gross vehicle weight and radius of operation. 

pc_vehicleclasscode.ID = Internally managed primary key
pc_vehicleclasscode.Code = The Class Code
pc_vehicleclasscode.CreateTime = Timestamp when the object was created
pc_vehicleclasscode.CreateUser = User who created the object
pc_vehicleclasscode.Experience = Years of experience for drivers of a vehicle
pc_vehicleclasscode.Fleet = Fleet designation.
pc_vehicleclasscode.PrimaryUse = Primary use of the vehicle.
pc_vehicleclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_vehicleclasscode.Radius = Distance operated from point of principle garaging.
pc_vehicleclasscode.SizeClass = Size class of the vehicle.
pc_vehicleclasscode.Type = Type of the vehicle.
pc_vehicleclasscode.UpdateTime = Timestamp when the object was last updated
pc_vehicleclasscode.UpdateUser = User who last updated the object

pc_vehicledriver = Associates a vehicle and a driver in Personal Auto

pc_vehicledriver.ID = Internally managed primary key
pc_vehicledriver.BranchValue = Link to root of effdated tree
pc_vehicledriver.ChangeType = Type of change made to this row
pc_vehicledriver.CreateTime = Timestamp when the object was created
pc_vehicledriver.CreateUser = User who created the object
pc_vehicledriver.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_vehicledriver.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_vehicledriver.PercentageDriven = The percentage this driver drives the vehicle
pc_vehicledriver.PolicyDriver = 
pc_vehicledriver.PrimaryDriver = Indicates whether this Driver is primary for the given vehicle or not. This field is deprecated in PC 7.0 and is no longer used by the out-of-the-box configuration.
pc_vehicledriver.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_vehicledriver.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_vehicledriver.UpdateTime = Timestamp when the object was last updated
pc_vehicledriver.UpdateUser = User who last updated the object
pc_vehicledriver.Vehicle = 

pc_vehicleindustrycode = The latter part (last 2 numbers) of a business vehicle class code. 

pc_vehicleindustrycode.ID = Internally managed primary key
pc_vehicleindustrycode.Code = The vehicle industry Code
pc_vehicleindustrycode.CreateTime = Timestamp when the object was created
pc_vehicleindustrycode.CreateUser = User who created the object
pc_vehicleindustrycode.Industry = The vehicle industry
pc_vehicleindustrycode.IndustryUse = The use of the vehicle for the industry
pc_vehicleindustrycode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_vehicleindustrycode.UpdateTime = Timestamp when the object was last updated
pc_vehicleindustrycode.UpdateUser = User who last updated the object

pc_visibilityzone = null

pc_visibilityzone.ID = Internally managed primary key
pc_visibilityzone.ForeignEntity = 
pc_visibilityzone.Owner = 
pc_visibilityzone.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_wcaircraftseat = Workers' Comp Aircraft Seat Data

pc_wcaircraftseat.ID = Internally managed primary key
pc_wcaircraftseat.AircraftNumber = Aircraft N-Number
pc_wcaircraftseat.BranchValue = Link to root of effdated tree
pc_wcaircraftseat.ChangeType = Type of change made to this row
pc_wcaircraftseat.CreateTime = Timestamp when the object was created
pc_wcaircraftseat.CreateUser = User who created the object
pc_wcaircraftseat.Description = Description
pc_wcaircraftseat.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcaircraftseat.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcaircraftseat.PassengerSeats = Number of rateable passenger seats
pc_wcaircraftseat.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcaircraftseat.State = 
pc_wcaircraftseat.UpdateTime = Timestamp when the object was last updated
pc_wcaircraftseat.UpdateUser = User who last updated the object
pc_wcaircraftseat.WCLine = 

pc_wccededpremium = A Workers' Comp implementation of the RICededPremium delegate

pc_wccededpremium.ID = Internally managed primary key
pc_wccededpremium.CreateTime = Timestamp when the object was created
pc_wccededpremium.CreateUser = User who created the object
pc_wccededpremium.EffectiveDate = Effective date of this row.
pc_wccededpremium.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_wccededpremium.PolicyTerm = The policy term to which this ceding applies
pc_wccededpremium.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wccededpremium.RiskDate = Effective date of the associated risk
pc_wccededpremium.RiskNumber = Risk number, copied from the Reinsurable
pc_wccededpremium.UpdateTime = Timestamp when the object was last updated
pc_wccededpremium.UpdateUser = User who last updated the object
pc_wccededpremium.WCCost = 
pc_wccededpremium.CedingHistory = 
pc_wccededpremium.CedingTransactions = 

pc_wccededpremiumhistory = A Workers' Comp implementation of the RICededPremiumHistory delegate

pc_wccededpremiumhistory.ID = Internally managed primary key
pc_wccededpremiumhistory.CommentText = Optional comment describing the reason for the recalculation
pc_wccededpremiumhistory.CreateTime = Timestamp when the object was created
pc_wccededpremiumhistory.CreateUser = User who created the object
pc_wccededpremiumhistory.DateOfRecalculation = The date on which the recalculation was done.
pc_wccededpremiumhistory.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wccededpremiumhistory.Reason = One of a list of defined reasons for performing recalculation.
pc_wccededpremiumhistory.UpdateTime = Timestamp when the object was last updated
pc_wccededpremiumhistory.UpdateUser = User who last updated the object
pc_wccededpremiumhistory.WCCededPremium = 

pc_wccededpremiumtransaction = A Workers' Comp implementation of the RICededPremiumTransaction delegate

pc_wccededpremiumtransaction.ID = Internally managed primary key
pc_wccededpremiumtransaction.Agreement = The agreement being ceded to
pc_wccededpremiumtransaction.BasisGNP_amt = 
pc_wccededpremiumtransaction.BasisGNP_cur = 
pc_wccededpremiumtransaction.CalcTimestamp = The date and time on which ceding calculation was done.
pc_wccededpremiumtransaction.CalculationOrder = The order of calculation, essentially for documentation purposes.
pc_wccededpremiumtransaction.CededPremium_amt = 
pc_wccededpremiumtransaction.CededPremium_cur = 
pc_wccededpremiumtransaction.CededPremiumMarkup_amt = 
pc_wccededpremiumtransaction.CededPremiumMarkup_cur = 
pc_wccededpremiumtransaction.CededRiskAmount_amt = 
pc_wccededpremiumtransaction.CededRiskAmount_cur = 
pc_wccededpremiumtransaction.CedingRate = The ceding rate used for the calculation. The source of this value depends on the type of agreement. For a proportional agreement, this is the proportion of risk ceded to the agreement; for a non-proportional agreement it is the specified ceding rate. 
pc_wccededpremiumtransaction.Commission_amt = 
pc_wccededpremiumtransaction.Commission_cur = 
pc_wccededpremiumtransaction.CommissionRate = The rate used for the calculation of commission, denormalized from the agreement at the time this transaction was created.
pc_wccededpremiumtransaction.CreateTime = Timestamp when the object was created
pc_wccededpremiumtransaction.CreateUser = User who created the object
pc_wccededpremiumtransaction.DatePosted = The date the transaction was created
pc_wccededpremiumtransaction.DateWritten = The date the ceding should be recognized for financial purposes.
pc_wccededpremiumtransaction.EffectiveDate = Effective date of this row.
pc_wccededpremiumtransaction.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_wccededpremiumtransaction.MarkupRate = The rate used for the calculation of markup, denormalized from the (Fac) agreement at the time this transaction was created.
pc_wccededpremiumtransaction.PolicyFXRate = The policy foreign exchange rate used to convert the ceded premium to the settlement currency.
pc_wccededpremiumtransaction.Program = The reinsurance program that applies to this premium
pc_wccededpremiumtransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wccededpremiumtransaction.UpdateTime = Timestamp when the object was last updated
pc_wccededpremiumtransaction.UpdateUser = User who last updated the object
pc_wccededpremiumtransaction.WCCededPremium = 
pc_wccededpremiumtransaction.WCCededPremiumHistory = 

pc_wcclasscode = Workers' comp class codes.  Premium calculations are driven by class codes and both premium and losses are reported by class codes to rating bureaus.

pc_wcclasscode.ID = Internally managed primary key
pc_wcclasscode.Basis = Rating basis for this class code.
pc_wcclasscode.Classification = The Classification of the code (essentially a short description)
pc_wcclasscode.ClassIndicator = The Class Indicator for the class code
pc_wcclasscode.Code = The Class Code for a line of insurance
pc_wcclasscode.CreateTime = Timestamp when the object was created
pc_wcclasscode.CreateUser = User who created the object
pc_wcclasscode.EffectiveDate = Effective date of this row.
pc_wcclasscode.ExpirationDate = Expiration date of this row or NULL in the database if this row never expires.
pc_wcclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcclasscode.ShortDesc = short classifcation description for listviews
pc_wcclasscode.UpdateTime = Timestamp when the object was last updated
pc_wcclasscode.UpdateUser = User who last updated the object
pc_wcclasscode.WCDomain = The string value of the typecode representing the jurisdiction for which this class code value is allowed. For example, if this is a typecode allowed in the US state of California, the value should be 'CA'

pc_wcclcode_class = null

pc_wcclcode_class.ID = Internally managed primary key
pc_wcclcode_class.Language = 
pc_wcclcode_class.Owner = 
pc_wcclcode_class.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcclcode_class.Value = 

pc_wcclcode_desc = null

pc_wcclcode_desc.ID = Internally managed primary key
pc_wcclcode_desc.Language = 
pc_wcclcode_desc.Owner = 
pc_wcclcode_desc.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcclcode_desc.Value = 

pc_wccost = y further.

pc_wccost.ID = Internally managed primary key
pc_wccost.ActualAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term.
pc_wccost.ActualAmount_amt = 
pc_wccost.ActualAmount_cur = 
pc_wccost.ActualAmountBilling_amt = 
pc_wccost.ActualAmountBilling_cur = 
pc_wccost.ActualBaseRate = The base rate (before mod factors are applied) for the cost over the rated term.
pc_wccost.ActualTermAmount_amt = 
pc_wccost.ActualTermAmount_cur = 
pc_wccost.ActualTermAmountBilling_amt = 
pc_wccost.ActualTermAmountBilling_cur = 
pc_wccost.Basis = The basis for the cost over the rated term.  The basis type itself may vary (e.g. units of risk, units of money, etc.)
pc_wccost.BranchValue = Link to root of effdated tree
pc_wccost.CalcOrder = The order in which this cost was rated.
pc_wccost.ChangeType = Type of change made to this row
pc_wccost.ChargeGroup = Custom group name to group charges together
pc_wccost.ChargePattern = The type of charge (Premium, Taxes, Fee)
pc_wccost.CreateTime = Timestamp when the object was created
pc_wccost.CreateUser = User who created the object
pc_wccost.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wccost.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wccost.FXRateConversionUsed = Flags when the PolicyFXRate is used to convert amounts from coverage currency to settlement currency
pc_wccost.NumDaysInRatedTerm = The number of days in the term period used to arrive at the rate.
pc_wccost.Overridable = Indicates whether this cost can have an override applied; most likely set by the rating engine.
pc_wccost.OverrideAdjRate = The user-specified override for the adjusted rate.
pc_wccost.OverrideAmount_amt = 
pc_wccost.OverrideAmount_cur = 
pc_wccost.OverrideAmountBilling_amt = 
pc_wccost.OverrideAmountBilling_cur = 
pc_wccost.OverrideBaseRate = The user-specified override for the base rate.
pc_wccost.OverrideReason = Why the override is being applied.
pc_wccost.OverrideSource = Source of override, or null if none
pc_wccost.OverrideTermAmount_amt = 
pc_wccost.OverrideTermAmount_cur = 
pc_wccost.OverrideTermAmountBilling_amt = 
pc_wccost.OverrideTermAmountBilling_cur = 
pc_wccost.PolicyFXRate = 
pc_wccost.ProrationMethod = Procedure used to derive Amount from Term Amount, e.g. day-based pro-rata, or flat
pc_wccost.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wccost.RateAmountType = Tax/surcharge, a standard premium, or a non-standard premium
pc_wccost.RateBook = 
pc_wccost.RoundingLevel = Number of decimal places to which this cost should be rounded when prorated
pc_wccost.RoundingMode = Rounding mode (e.g. HALF_UP) to be used when prorating
pc_wccost.StandardAdjRate = The adjusted rate (after mod factors are applied) for the cost over the rated term, as calculated based on the standard base rate.
pc_wccost.StandardAmount_amt = 
pc_wccost.StandardAmount_cur = 
pc_wccost.StandardAmountBilling_amt = 
pc_wccost.StandardAmountBilling_cur = 
pc_wccost.StandardBaseRate = The standard base rate (before mod factors are applied) for the cost over the rated term.
pc_wccost.StandardTermAmount_amt = 
pc_wccost.StandardTermAmount_cur = 
pc_wccost.StandardTermAmountBilling_amt = 
pc_wccost.StandardTermAmountBilling_cur = 
pc_wccost.SubjectToReporting = Indicates whether this cost is subject to reporting.  If a cost is subject to reporting and a policy has a reporting plan, that cost will only generate charged transactions during report jobs and final audit.
pc_wccost.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wccost.UpdateTime = Timestamp when the object was last updated
pc_wccost.UpdateUser = User who last updated the object
pc_wccost.WorkersCompLine = 
pc_wccost.WCCoveredEmployee = 
pc_wccost.WorkersCompCov = 
pc_wccost.StatCode = The statistic code for classifying premiums and surcharges that are not attributable to a specific employment class code, such as experience modification, premium for increased employer liability limits, expense constant, taxes, etc.
pc_wccost.WCJurisdiction = 
pc_wccost.WCJurisdictionCostType = 

pc_wccoveredemployee = A Workers' Comp Covered Employee

pc_wccoveredemployee.ID = Internally managed primary key
pc_wccoveredemployee.AuditedAmount = The audited amount
pc_wccoveredemployee.BasisAmount = Basis Amount
pc_wccoveredemployee.BranchValue = Link to root of effdated tree
pc_wccoveredemployee.ChangeType = Type of change made to this row
pc_wccoveredemployee.ClassCode = Class Code of covered employees
pc_wccoveredemployee.CreateTime = Timestamp when the object was created
pc_wccoveredemployee.CreateUser = User who created the object
pc_wccoveredemployee.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wccoveredemployee.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wccoveredemployee.IfAnyExposure = Option to indicate that coverage is provided with precise liability to be determined later (at audit)
pc_wccoveredemployee.Location = Location of covered employees.
pc_wccoveredemployee.NumEmployees = Number of employees
pc_wccoveredemployee.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wccoveredemployee.SpecialCov = Special Coverage Class for this set of employees
pc_wccoveredemployee.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wccoveredemployee.UpdateTime = Timestamp when the object was last updated
pc_wccoveredemployee.UpdateUser = User who last updated the object
pc_wccoveredemployee.WorkersCompLine = 
pc_wccoveredemployee.Costs = 
pc_wccoveredemployee.RailroadOrVessel = Railroad or vessel name for program 1

pc_wcexcludedworkplace = Defines an exclusion for workplaces.

pc_wcexcludedworkplace.ID = Internally managed primary key
pc_wcexcludedworkplace.AddressLine1 = 
pc_wcexcludedworkplace.AddressLine2 = 
pc_wcexcludedworkplace.BranchValue = Link to root of effdated tree
pc_wcexcludedworkplace.ChangeType = Type of change made to this row
pc_wcexcludedworkplace.City = 
pc_wcexcludedworkplace.CreateTime = Timestamp when the object was created
pc_wcexcludedworkplace.CreateUser = User who created the object
pc_wcexcludedworkplace.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcexcludedworkplace.ExcludedItem = 
pc_wcexcludedworkplace.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcexcludedworkplace.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcexcludedworkplace.State = 
pc_wcexcludedworkplace.UpdateTime = Timestamp when the object was last updated
pc_wcexcludedworkplace.UpdateUser = User who last updated the object
pc_wcexcludedworkplace.WCLine = 

pc_wcfedliabclasscode = A Class Code to Class Code mapping entity

pc_wcfedliabclasscode.ID = Internally managed primary key
pc_wcfedliabclasscode.CreateTime = Timestamp when the object was created
pc_wcfedliabclasscode.CreateUser = User who created the object
pc_wcfedliabclasscode.MainClassCode = The main class code
pc_wcfedliabclasscode.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcfedliabclasscode.StateActClassCode = The State Act class code
pc_wcfedliabclasscode.UpdateTime = Timestamp when the object was last updated
pc_wcfedliabclasscode.UpdateUser = User who last updated the object
pc_wcfedliabclasscode.USLActClassCode = The USL Act class code

pc_wcjurisdiction = Container for state-level elements: coverages, modifiers, etc.

pc_wcjurisdiction.ID = Internally managed primary key
pc_wcjurisdiction.BranchValue = Link to root of effdated tree
pc_wcjurisdiction.ChangeType = Type of change made to this row
pc_wcjurisdiction.CreateTime = Timestamp when the object was created
pc_wcjurisdiction.CreateUser = User who created the object
pc_wcjurisdiction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcjurisdiction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcjurisdiction.InitialConditionsCreated = Whether or not the initial set of conditions has been created on this Coverable.
pc_wcjurisdiction.InitialCoveragesCreated = Whether or not the initial set of coverages has been created on this Coverable.
pc_wcjurisdiction.InitialExclusionsCreated = Whether or not the initial set of exclusions has been created on this Coverable.
pc_wcjurisdiction.PreferredCoverageCurrency = Preferred Coverage Currency for coverages associated with this coverable
pc_wcjurisdiction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcjurisdiction.State = The jurisdiction that is covered
pc_wcjurisdiction.UpdateTime = Timestamp when the object was last updated
pc_wcjurisdiction.UpdateUser = User who last updated the object
pc_wcjurisdiction.WCLine = 
pc_wcjurisdiction.Costs = 
pc_wcjurisdiction.Coverages = All Coverages on this State
pc_wcjurisdiction.RatingPeriodStartDates = Sub-periods within which basis amounts of basis-scalable exposures cannot change.
pc_wcjurisdiction.WCModifiers = Rating info for the jurisdiction.

pc_wclaborcontactdetail = 
    The details about the WC labor contact (e.g. labor client or labor contractor).
  

pc_wclaborcontactdetail.ID = Internally managed primary key
pc_wclaborcontactdetail.BranchValue = Link to root of effdated tree
pc_wclaborcontactdetail.ChangeType = Type of change made to this row
pc_wclaborcontactdetail.ContractEffectiveDate = Effective Date
pc_wclaborcontactdetail.ContractExpirationDate = Expiration Date
pc_wclaborcontactdetail.CreateTime = Timestamp when the object was created
pc_wclaborcontactdetail.CreateUser = User who created the object
pc_wclaborcontactdetail.DescriptionOfDuties = Description of Duties
pc_wclaborcontactdetail.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wclaborcontactdetail.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wclaborcontactdetail.Inclusion = Inclusion option. Included or Excluded
pc_wclaborcontactdetail.NumberOfEmployees = Number of employees
pc_wclaborcontactdetail.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wclaborcontactdetail.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wclaborcontactdetail.UpdateTime = Timestamp when the object was last updated
pc_wclaborcontactdetail.UpdateUser = User who last updated the object
pc_wclaborcontactdetail.WCLaborContact = 
pc_wclaborcontactdetail.WorkLocation = The address at which the employees are working

pc_wcmodifier = A line-level modifier for Workers' Comp

pc_wcmodifier.ID = Internally managed primary key
pc_wcmodifier.BooleanModifier = Boolean modifier
pc_wcmodifier.BranchValue = Link to root of effdated tree
pc_wcmodifier.ChangeType = Type of change made to this row
pc_wcmodifier.CreateTime = Timestamp when the object was created
pc_wcmodifier.CreateUser = User who created the object
pc_wcmodifier.DateModifier = Date modifier
pc_wcmodifier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcmodifier.Eligible = Whether this modifier is eligible or not
pc_wcmodifier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcmodifier.Justification = Additional comment to justify the value of this modifier
pc_wcmodifier.PatternCode = The pattern defining what kind of Modifier this is
pc_wcmodifier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcmodifier.RateModifier = Rate modifier. Use the setRateWithinLimits method to set value within min/max limits.
pc_wcmodifier.ReferenceDateInternal = Internal field for storing the reference date of modifiers on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_wcmodifier.State = The state to attach rating information to.
pc_wcmodifier.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wcmodifier.TypeKeyModifier = Typekey modifier
pc_wcmodifier.UpdateTime = Timestamp when the object was last updated
pc_wcmodifier.UpdateUser = User who last updated the object
pc_wcmodifier.ValueFinal = Whether this modifier's value is final or not
pc_wcmodifier.WCJurisdiction = 
pc_wcmodifier.WCRateFactors = Individual components of the rating factor

pc_participatingplan = A Workers' Comp participating plan

pc_participatingplan.ID = Internally managed primary key
pc_participatingplan.BranchValue = Link to root of effdated tree
pc_participatingplan.ChangeType = Type of change made to this row
pc_participatingplan.CreateTime = Timestamp when the object was created
pc_participatingplan.CreateUser = User who created the object
pc_participatingplan.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_participatingplan.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_participatingplan.LossConversionFactor = Loss Conversion Factor
pc_participatingplan.PlanID = The ID of this participating plan
pc_participatingplan.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_participatingplan.Retention = The retention amount (percent)
pc_participatingplan.UpdateTime = Timestamp when the object was last updated
pc_participatingplan.UpdateUser = User who last updated the object
pc_participatingplan.WorkersCompLine = 

pc_wcratefactor = A rate factor is a risk characteristic and its associated numeric value which might have an impact on premium. As used here rate factors are applied to base premium rather than rates. A common example of Rate Factors are the components of IRPM (individual risk premium modifier).

pc_wcratefactor.ID = Internally managed primary key
pc_wcratefactor.Assessment = Credit or debit multiplier for this rate factor. Use the setAssessmentWithinLimits method to set this value within its minimum and maximum.
pc_wcratefactor.BranchValue = Link to root of effdated tree
pc_wcratefactor.ChangeType = Type of change made to this row
pc_wcratefactor.CreateTime = Timestamp when the object was created
pc_wcratefactor.CreateUser = User who created the object
pc_wcratefactor.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcratefactor.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcratefactor.Justification = Additional comment to justify this rate factor
pc_wcratefactor.PatternCode = The pattern used to create this RateFactor that defines its type.
pc_wcratefactor.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcratefactor.UpdateTime = Timestamp when the object was last updated
pc_wcratefactor.UpdateUser = User who last updated the object
pc_wcratefactor.WCModifier = 

pcx_sample_WCRatingStep = 
    A sample table storing additional steps for rating Workers Comp policies after the basic calculation of
      manual premiums (premiums for each location/class code exposure unit).
  

pcx_sample_WCRatingStep.ID = Internally managed primary key
pcx_sample_WCRatingStep.aggCostType = Indicates the type of aggregate cost (not specific to a single location/class code exposure unit) to be used for the resulting costs, if any.  Should be non-null unless this row is not expected to result in a new cost (e.g. just stores a sub-total).
pcx_sample_WCRatingStep.amountType = Indicates the type (standard vs non-standard premium or taxes/surcharges) of the amount calculated, if any.  Should be non-null unless this row is not expected to result in a new rating line (e.g. just stores a sub-total).
pcx_sample_WCRatingStep.calcOrder = Determines the order in which the steps should be executed.
pcx_sample_WCRatingStep.classcode = Indicates the class code that should be used for the resulting premiums, if any.  Should be non-null unless this row is not expected to result in a new rating line (e.g. just stores a sub-total).
pcx_sample_WCRatingStep.customAction = If stepAction is Custom, then this indicates which custom action to execute.
pcx_sample_WCRatingStep.description = If non-null, this description will be used instead of that of the AggRatingLineType for describing the resulting premiums.
pcx_sample_WCRatingStep.effDate = The date on which this factor becomes effective (inclusive).  A null date means this has always been effective.
pcx_sample_WCRatingStep.expDate = The date on which this factor expires (exclusive).  A null date means this will always be effective.
pcx_sample_WCRatingStep.factorName = This field should match the factorName for the correct factor in RateAdjFactor.  Used for taxes and fees.  Also used if the modifier is a boolean type because, if true, the system needs to look up the rate to apply.
pcx_sample_WCRatingStep.includeInReports = Indicates whether or not this rating step should be performed for premium report jobs
pcx_sample_WCRatingStep.modifierID = Should match the modifier pattern's public ID.  If stepAction is Modifier, then this should be non-null to indicate which modifier to look-up for the calculation.
pcx_sample_WCRatingStep.PublicID = ID or primary key of the row in the external system to which this row is mapped
pcx_sample_WCRatingStep.rateConversionType = If step action looks up a rate and uses it to calculate a new amount, then this field defines how the rate should be interpreted.  (See typelist for a description of options.)
pcx_sample_WCRatingStep.rateState = Indicates a row is applicable to a given jurisdiction.  Null indicates a default row which is applicable to all jurisdictions which have no jurisdiction-specific rows for the given effective date. This should be the string value of a typecode in the Jurisdiction typelist. For example, if this is a typecode allowed in the US state of California, the value should be 'CA'. 
pcx_sample_WCRatingStep.stepAction = Explains what action should be taken for this step.  Some steps reuse generic actions and others require a Custom action.
pcx_sample_WCRatingStep.subtotal = If step action is Subtotal, then this defines which subtotal to calc and store.  Other step actions also optionally use this to lookup a previously saved subtotal as the basis for the step's calculation.

pc_letterofcredit = A Letter Of Credit

pc_letterofcredit.ID = Internally managed primary key
pc_letterofcredit.Amount_amt = 
pc_letterofcredit.Amount_cur = 
pc_letterofcredit.BranchValue = Link to root of effdated tree
pc_letterofcredit.ChangeType = Type of change made to this row
pc_letterofcredit.CreateTime = Timestamp when the object was created
pc_letterofcredit.CreateUser = User who created the object
pc_letterofcredit.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_letterofcredit.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_letterofcredit.IssuerName = The name of the issuer
pc_letterofcredit.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_letterofcredit.UpdateTime = Timestamp when the object was last updated
pc_letterofcredit.UpdateUser = User who last updated the object
pc_letterofcredit.ValidFrom = Date (inclusive) from which this letter of credit is valid.
pc_letterofcredit.ValidTo = Date (exclusive) at which this letter of credit is no longer valid.
pc_letterofcredit.WCRetrospectiveRatingPlan = The retro plan for which this letter applies

pc_retroratingplan = A plan for retrospectively rating a policy line

pc_retroratingplan.ID = Internally managed primary key
pc_retroratingplan.BasicPremiumFactor1 = The (50%) premium factor
pc_retroratingplan.BasicPremiumFactor2 = The (100%) premium factor
pc_retroratingplan.BasicPremiumFactor3 = The (150%) premium factor
pc_retroratingplan.BranchValue = Link to root of effdated tree
pc_retroratingplan.ChangeType = Type of change made to this row
pc_retroratingplan.ComputationInterval = The computation interval
pc_retroratingplan.CreateTime = Timestamp when the object was created
pc_retroratingplan.CreateUser = User who created the object
pc_retroratingplan.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_retroratingplan.EstimatedStandardPremium_amt = 
pc_retroratingplan.EstimatedStandardPremium_cur = 
pc_retroratingplan.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_retroratingplan.FirstComputationDate = The data of the first computation
pc_retroratingplan.IncludeALAE = Include ALocated Loss Adjustment
pc_retroratingplan.LastComputationDate = The data of the last computation
pc_retroratingplan.LossConversionFactor = Loss Conversion Factor
pc_retroratingplan.LossLimitAmount_amt = 
pc_retroratingplan.LossLimitAmount_cur = 
pc_retroratingplan.MaxRetroPremiumRatio = The maximum retro premium ratio
pc_retroratingplan.MinRetroPremiumRatio = The minimum retro premium ratio
pc_retroratingplan.PercentStandardPremium1 = The (50%) standard premium
pc_retroratingplan.PercentStandardPremium2 = The (100%) standard premium
pc_retroratingplan.PercentStandardPremium3 = The (150%) standard premium
pc_retroratingplan.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_retroratingplan.UpdateTime = Timestamp when the object was last updated
pc_retroratingplan.UpdateUser = User who last updated the object
pc_retroratingplan.WorkersCompLine = 
pc_retroratingplan.LettersOfCredit = The list of Letters Of Credit
pc_retroratingplan.StateMultipliers = The list of Multipliers by State

pc_wcstatecov = A state-level coverage for Workers Comp'

pc_wcstatecov.ID = Internally managed primary key
pc_wcstatecov.BranchValue = Link to root of effdated tree
pc_wcstatecov.ChangeType = Type of change made to this row
pc_wcstatecov.CreateTime = Timestamp when the object was created
pc_wcstatecov.CreateUser = User who created the object
pc_wcstatecov.Currency = Currency associated with the coverage
pc_wcstatecov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcstatecov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcstatecov.PatternCode = The pattern defining what kind of Coverage this is
pc_wcstatecov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcstatecov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_wcstatecov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wcstatecov.UpdateTime = Timestamp when the object was last updated
pc_wcstatecov.UpdateUser = User who last updated the object
pc_wcstatecov.WCJurisdiction = 

pc_statemultiplier = State Multipliers

pc_statemultiplier.ID = Internally managed primary key
pc_statemultiplier.BranchValue = Link to root of effdated tree
pc_statemultiplier.ChangeType = Type of change made to this row
pc_statemultiplier.CreateTime = Timestamp when the object was created
pc_statemultiplier.CreateUser = User who created the object
pc_statemultiplier.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_statemultiplier.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_statemultiplier.FederalExcessLossFactor = Federal Excess Loss factor
pc_statemultiplier.FederalTaxMultiplier = The federal tax multiplier
pc_statemultiplier.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_statemultiplier.State = 
pc_statemultiplier.StateExcessLossFactor = State Excess Loss factor
pc_statemultiplier.StateTaxMultiplier = The state tax multiplier
pc_statemultiplier.UpdateTime = Timestamp when the object was last updated
pc_statemultiplier.UpdateUser = User who last updated the object
pc_statemultiplier.WCRetrospectiveRatingPlan = The retro plan for which this state multiplier applies

pc_wctransaction = A transaction for the Workers' Comp line

pc_wctransaction.ID = Internally managed primary key
pc_wctransaction.Amount_amt = 
pc_wctransaction.Amount_cur = 
pc_wctransaction.AmountBilling_amt = 
pc_wctransaction.AmountBilling_cur = 
pc_wctransaction.BranchValue = Link to root of effdated tree
pc_wctransaction.ChangeType = Type of change made to this row
pc_wctransaction.Charged = Whether or not this transaction amount should be charged.
pc_wctransaction.CreateTime = Timestamp when the object was created
pc_wctransaction.CreateUser = User who created the object
pc_wctransaction.EffDate = The date on which the transaction becomes effective.
pc_wctransaction.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wctransaction.ExpDate = The date on which the transaction expires.
pc_wctransaction.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wctransaction.PolicyFXRate = 
pc_wctransaction.PostedDate = The date on which the transaction was posted.  For transactions that haven't yet been posted, this field will be null.  Otherwise, it will be equal to the date on which the job was bound or (in the case of audits) completed.
pc_wctransaction.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wctransaction.ToBeAccrued = Whether or not this transaction amount should be included in earned premium accrual calculations.
pc_wctransaction.UpdateTime = Timestamp when the object was last updated
pc_wctransaction.UpdateUser = User who last updated the object
pc_wctransaction.WCCost = The cost this transaction modifies.
pc_wctransaction.Written = Whether or not this transaction amount should be counted in written premium calculations.
pc_wctransaction.WrittenDate = The date on which (for accounting purposes) the premium is considered as written.

pc_wcwaiverofsubro = A Workers' Comp Waiver of Subrogation

pc_wcwaiverofsubro.ID = Internally managed primary key
pc_wcwaiverofsubro.BasisAmount = Basis Amount
pc_wcwaiverofsubro.BranchValue = Link to root of effdated tree
pc_wcwaiverofsubro.ChangeType = Type of change made to this row
pc_wcwaiverofsubro.ClassCode = Class Code of covered employees
pc_wcwaiverofsubro.CreateTime = Timestamp when the object was created
pc_wcwaiverofsubro.CreateUser = User who created the object
pc_wcwaiverofsubro.Description = Description
pc_wcwaiverofsubro.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wcwaiverofsubro.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wcwaiverofsubro.IfAnyExposure = Option to indicate that coverage is provided with precise liability to be determined later (at audit)
pc_wcwaiverofsubro.JobID = The job identifier
pc_wcwaiverofsubro.NumEmployees = Number of employees
pc_wcwaiverofsubro.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wcwaiverofsubro.SpecialCov = Special Coverage Class for this set of employees
pc_wcwaiverofsubro.State = 
pc_wcwaiverofsubro.Type = The type of waiver of subro.
pc_wcwaiverofsubro.UpdateTime = Timestamp when the object was last updated
pc_wcwaiverofsubro.UpdateUser = User who last updated the object
pc_wcwaiverofsubro.WCLine = 

pc_workitemset = Describes a set of Work Items

pc_workitemset.ID = Internally managed primary key
pc_workitemset.EndTime = timestamp when the last WorkItem finished processing
pc_workitemset.NumOpsCanceled = Number of operations that were not processed because the user canceled the WorkItemSet
pc_workitemset.NumOpsCompleted = Number of operations completed (successfully or otherwise)
pc_workitemset.NumOpsFailed = Number of operations that have failed
pc_workitemset.NumTotalOps = Total number of operations (WorkItems) that make up this WorkItemSet
pc_workitemset.ProcessHistory = Reference to the ProcessHistory instance of the batch process that generated this WorkItemSet
pc_workitemset.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workitemset.StartTime = timestamp when we started processing the WorkItemSet
pc_workitemset.State = The state of this WorkItemSet
pc_workitemset.WorkItemSetType = The type of WorkItemSet

pc_workqueueworkercontrol = Input/Extract pointers to work-items.

pc_workqueueworkercontrol.ID = Internally managed primary key
pc_workqueueworkercontrol.LastExecutionTime = 
pc_workqueueworkercontrol.LockName = 
pc_workqueueworkercontrol.PublicID = ID or primary key of the row in the external system to which this row is mapped

pc_wclinecond = A line-level condition for Workers' Comp

pc_wclinecond.ID = Internally managed primary key
pc_wclinecond.BranchValue = Link to root of effdated tree
pc_wclinecond.ChangeType = Type of change made to this row
pc_wclinecond.CreateTime = Timestamp when the object was created
pc_wclinecond.CreateUser = User who created the object
pc_wclinecond.Currency = Currency associated with the policy condition
pc_wclinecond.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wclinecond.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wclinecond.PatternCode = The pattern defining what kind of Condition this is
pc_wclinecond.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wclinecond.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_wclinecond.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wclinecond.UpdateTime = Timestamp when the object was last updated
pc_wclinecond.UpdateUser = User who last updated the object
pc_wclinecond.WCLine = 

pc_workerscompcov = A line-level coverage for Workers' Comp

pc_workerscompcov.ID = Internally managed primary key
pc_workerscompcov.BranchValue = Link to root of effdated tree
pc_workerscompcov.ChangeType = Type of change made to this row
pc_workerscompcov.CreateTime = Timestamp when the object was created
pc_workerscompcov.CreateUser = User who created the object
pc_workerscompcov.Currency = Currency associated with the coverage
pc_workerscompcov.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_workerscompcov.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_workerscompcov.PatternCode = The pattern defining what kind of Coverage this is
pc_workerscompcov.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workerscompcov.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_workerscompcov.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_workerscompcov.UpdateTime = Timestamp when the object was last updated
pc_workerscompcov.UpdateUser = User who last updated the object
pc_workerscompcov.WCLine = 
pc_workerscompcov.Costs = 

pc_wclineexcl = A line-level exclusion for Workers' Comp

pc_wclineexcl.ID = Internally managed primary key
pc_wclineexcl.BranchValue = Link to root of effdated tree
pc_wclineexcl.ChangeType = Type of change made to this row
pc_wclineexcl.CreateTime = Timestamp when the object was created
pc_wclineexcl.CreateUser = User who created the object
pc_wclineexcl.Currency = Currency associated with the Exclusion
pc_wclineexcl.EffectiveDate = Effective date of this row.  A value of NULL in the database indicates that this row's effective date is equal to the Period Start.
pc_wclineexcl.ExpirationDate = Expiration date of this row.  A value of NULL in the database indicates that this row's expiration date is equal to the Period End.
pc_wclineexcl.PatternCode = The pattern defining what kind of Exclusion this is
pc_wclineexcl.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_wclineexcl.ReferenceDateInternal = Internal field for storing the reference date of coverages on bound policy periods. Normally the ReferenceDate property should be used instead.
pc_wclineexcl.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_wclineexcl.UpdateTime = Timestamp when the object was last updated
pc_wclineexcl.UpdateUser = User who last updated the object
pc_wclineexcl.WCLine = 

pc_workflow = Table for workflow definitions

pc_workflow.ID = Internally managed primary key
pc_workflow.ActiveState = Specific state of this workflow if active (e.g. running, waitmanual, waitactivity).
pc_workflow.CreateTime = Timestamp when the object was created
pc_workflow.CreateUser = User who created the object
pc_workflow.CurrentAction = What action is the Workflow currently trying to take?
pc_workflow.CurrentBranch = ID of the branch the workflow is currently trying to execute.
pc_workflow.CurrentStep = ID of the workflow's current step.
pc_workflow.EnteredStep = Time when the Workflow entered the current step
pc_workflow.ForceTimeoutBranch = ID of the next workflow timeout branch to take.
pc_workflow.Handler = What infrastructure handles this Workflow?
pc_workflow.Message = Integration message associated with this workflow
pc_workflow.MessageHistory = Completed integration message associated with this workflow
pc_workflow.PreviousStep = ID of the step the workflow was on BEFORE the current step.
pc_workflow.ProcessVersion = Version of the workflow process used, if this uses an internal workflow
pc_workflow.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workflow.State = State of this workflow (e.g., 'started', 'completed', etc.)
pc_workflow.StepExecTime = Total system time spent actively processing the current step, in millis.  Does not include time spent waiting on triggers, activities, or timeouts
pc_workflow.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_workflow.TestTime = What time the Workflow thinks it is
pc_workflow.TimeoutTime = Date/time when current step will time out.
pc_workflow.TriggerInvoked = Marks the key of a Trigger that was invoked, or null
pc_workflow.UpdateTime = Timestamp when the object was last updated
pc_workflow.UpdateUser = User who last updated the object
pc_workflow.Activities = Active activities on this workflow.
pc_workflow.Log = Log of what work this Workflow has performed
pc_workflow.PolicyPeriod = The PolicyPeriod with which this workflow is associated.
pc_workflow.Processing = Indicate whether the workflow is currently processing an operation.  Use in the workflow script to             indicate when an operation starts and when it ends.
pc_workflow.FunctionToCall = The callback function name to call when the timeout is over
pc_workflow.RenewalOffer = True if this is started by a renewal offer
pc_workflow.WakeupTime = The date and time at which the workflow should wakeup
pc_workflow.FunctionToCall = The callback function name to call when the timeout is over
pc_workflow.WakeupTime = The date and time at which the workflow should wakeup

pc_workflowlog = Log of what work the Workflows have performed.  Each row is one entry.

pc_workflowlog.ID = Internally managed primary key
pc_workflowlog.Argument = The argument for the display key
pc_workflowlog.DisplayKey = The display key to construct
pc_workflowlog.LogDate = The date when this entry was logged
pc_workflowlog.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workflowlog.SortOrder = Number of times this workflow has been polled.
pc_workflowlog.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_workflowlog.Workflow = The Workflow this log entry is for
pc_workflowlog.Action = The current action
pc_workflowlog.StepId = The current step of the id
pc_workflowlog.Description = Optional detailed description (may include stack trace)
pc_workflowlog.Summary = Short description
pc_workflowlog.user = The user how invoked the action.

pc_workflowstepstats = Workflow elapsed and execution time statistics aggregated by workflow step.  Elapsed time is the total time spent from step entry to completion.  Execution time is time spent on processing, excluding time spent waiting on triggers, activities, or timeouts.

pc_workflowstepstats.ID = Internally managed primary key
pc_workflowstepstats.ElapsedTimeMax = Maximum elapsed time spent processing any occurrence of this step, in millis.
pc_workflowstepstats.ElapsedTimeMean = Average elapsed time spent processing occurrences of this step, in millis.
pc_workflowstepstats.ElapsedTimeMin = Minimum elapsed time spent processing any occurrence of this step, in millis.
pc_workflowstepstats.ElapsedTimeStdDev = Standard deviation of elapsed time spent processing occurrences of this step, in millis.
pc_workflowstepstats.EndTime = End of the statistics aggregation period.  Statistics were computed from steps completing on or before this time.
pc_workflowstepstats.execTimeMax = Maximum system time spent actively processing any occurrence of this step, in millis.
pc_workflowstepstats.ExecTimeMean = Average system time spent actively processing occurrences of this step, in millis.
pc_workflowstepstats.ExecTimeMin = Minimum system time spent actively processing any occurrence of this step, in millis.
pc_workflowstepstats.ExecTimeStdDev = Standard deviation of system time spent actively processing occurrences of this step, in millis.
pc_workflowstepstats.Executions = Total number of steps that completed within the aggregation period.
pc_workflowstepstats.ProcessVersion = Version of the workflow process used, if this uses an internal workflow
pc_workflowstepstats.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workflowstepstats.ServerID = The app server ID.
pc_workflowstepstats.StartTime = Start of the statistics aggregation period.  Statistics were computed from steps completing after this time.
pc_workflowstepstats.StepName = ID of the workflow step.
pc_workflowstepstats.WorkflowType = Type of the workflow.

pc_workflowworkitem = Queue of workflows to be advanced.

pc_workflowworkitem.ID = Internally managed primary key
pc_workflowworkitem.Attempts = 
pc_workflowworkitem.CheckedOutBy = 
pc_workflowworkitem.CreationTime = 
pc_workflowworkitem.Exception = Stack trace of the exception
pc_workflowworkitem.LastUpdateTime = 
pc_workflowworkitem.Priority = 
pc_workflowworkitem.ProcessHistoryID = The writer batch job that created this workitem (ProcessHistory).
pc_workflowworkitem.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_workflowworkitem.Status = Status of this workitem.
pc_workflowworkitem.Subtype = Identifies a particular subtype within a supertype table; each subtype of a supertype has its own unique subtype value
pc_workflowworkitem.Workflow = The Workflow to be advanced.

pc_worksheetcontainer = Entity which serves as archive root and owner for WorksheetData instances.

pc_worksheetcontainer.ID = Internally managed primary key
pc_worksheetcontainer.ArchiveDate = When archiving was attempted on the root. Null if we never attempted to archive it.
pc_worksheetcontainer.ArchiveFailure = Short version of the reason for a failure to archive
pc_worksheetcontainer.ArchiveFailureDetails = Full details of archive failure
pc_worksheetcontainer.ArchiveSchemaInfo = Schema version at which the root was archived or null if it was not archived
pc_worksheetcontainer.ArchiveState = The archive state of the graph
pc_worksheetcontainer.Branch = 
pc_worksheetcontainer.CanPurge = 
pc_worksheetcontainer.CreateTime = Timestamp when the object was created
pc_worksheetcontainer.CreateUser = User who created the object
pc_worksheetcontainer.ExcludedFromArchive = Indicate if this entity should be excluded from archiving
pc_worksheetcontainer.ExcludeReason = Reason for excluding or skipping the entity from archiving. If the ExcludeFromArchive bit is set, this gives the reason for excluding. Else, if this is not null, it is the reason for skipping.
pc_worksheetcontainer.PolicyTerm = 
pc_worksheetcontainer.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_worksheetcontainer.UpdateTime = Timestamp when the object was last updated
pc_worksheetcontainer.UpdateUser = User who last updated the object

pc_worksheetdata = Repository for Worksheet XML data.

pc_worksheetdata.ID = Internally managed primary key
pc_worksheetdata.CreateTime = Timestamp when the object was created
pc_worksheetdata.CreateUser = User who created the object
pc_worksheetdata.Data = Contents of the rating worksheet stored as GZIP-compressed XML.
pc_worksheetdata.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_worksheetdata.UpdateTime = Timestamp when the object was last updated
pc_worksheetdata.UpdateUser = User who last updated the object
pc_worksheetdata.WorksheetContainer = 

pc_zone = Geographic zone.

pc_zone.ID = Internally managed primary key
pc_zone.Code = The code for this zone, this is the value that should be used for lookups.
pc_zone.Country = The country to which the zone belongs.
pc_zone.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_zone.Name = The name of the zone, this is the value used to populate fields.
pc_zone.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_zone.ZoneType = Type of zone.
pc_zone.ForwardLinkedZones = Zones that are forward linked to this zone.
pc_zone.ReverseLinkedZones = Zones that are reverse linked to this zone.

pc_zone_link = Links 2 zones.

pc_zone_link.ID = Internally managed primary key
pc_zone_link.LoadCommandID = LoadCommand for load where row was created. If not null this object was loaded via the loader.
pc_zone_link.PublicID = ID or primary key of the row in the external system to which this row is mapped
pc_zone_link.Zone1 = Zone 1.
pc_zone_link.Zone2 = Zone 2.
