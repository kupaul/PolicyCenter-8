function FileData_Pairs(x)
{
x.t("example","building");
x.t("example","copying");
x.t("example","new");
x.t("example","add");
x.t("example","presented");
x.t("example","applies");
x.t("example","examine");
x.t("example","configured");
x.t("example","define");
x.t("example","xml");
x.t("example","configures");
x.t("example","location");
x.t("example","schedule");
x.t("example","copy");
x.t("example","package");
x.t("boplineschedulecovitem.type.typeinfo.getproperty","schedulenumber");
x.t("effdatedbranchtype=","policyperiod");
x.t("columns","needed");
x.t("columns","schedule");
x.t("columns","defined");
x.t("columns","column");
x.t("properties","methods");
x.t("properties","schedule");
x.t("construct","delegateowner");
x.t("construct","item");
x.t("bopscheduleditempropertyinfostring","stringcol1");
x.t("provide","example");
x.t("defines","database");
x.t("defines","additional");
x.t("defines","schedule");
x.t("schedulelocation","new");
x.t("pattern","add");
x.t("pattern","next");
x.t("pattern","schedule");
x.t("building","selection");
x.t("implement","generic");
x.t("implement","delegate");
x.t("implement","similar");
x.t("implement","coverable");
x.t("within","schedules");
x.t("within","given");
x.t("shown","following");
x.t("needs","reference");
x.t("gsrc","gw");
x.t("owner","construct");
x.t("owner","case");
x.t("displaykey.web.policy.bop.schedule","name");
x.t("owner.removefromboplinescheduleditems","item");
x.t("files","configuration");
x.t("create","new");
x.t("create","array");
x.t("create","delegate");
x.t("create","typekey");
x.t("create","subtype");
x.t("create","schedule");
x.t("create","lob");
x.t("create","scheduled");
x.t("business","line");
x.t("business","handle");
x.t("business","perform");
x.t("business","mapped");
x.t("business","step");
x.t("business","clause");
x.t("built-in","framework");
x.t("studio","project");
x.t("p.bopline.coveragesfromcoverable.firstwhere","c.fixedid");
x.t("allcoverages","coverage");
x.t("rename","class");
x.t("instance","entity");
x.t("key","links");
x.t("_owner.scheduleditemclause","==");
x.t("_owner.scheduleditemclause","coverage");
x.t("_owner.scheduleditemclause","return");
x.t("_owner.scheduleditemclause","null");
x.t("_owner.scheduleditemclause","cov");
x.t("required","line");
x.t("resetautonumbersequences","bindautonumbersequences");
x.t("boppolicylinemethods","class");
x.t("businessowners","line");
x.t("businessowners","replace");
x.t("parts","implementing");
x.t("name=","bopscheduleditems");
x.t("name=","bopscheduleditem");
x.t("name=","boplocation");
x.t("name=","scheduleautonumbersequence");
x.t("name=","scheduleditem");
x.t("name=","schedule");
x.t("name=","coverable");
x.t("gw.api.productmodel.schedulepropertyinfo","uses");
x.t("stringcol1","displaykey.web.policy.bop.schedule");
x.t("valuerange","keyablebean");
x.t("ipropertyinfo","return");
x.t("foreign","key");
x.t("apply","coverage");
x.t("topic","explains");
x.t("topic","presented");
x.t("version=","1.0");
x.t("effdated","platform=");
x.t("user","interface");
x.t("schedules","topic");
x.t("schedules","line");
x.t("schedules","configuring");
x.t("schedules","lines");
x.t("schedules","defining");
x.t("schedules","begin");
x.t("schedules","function");
x.t("schedules","define");
x.t("schedules","line-specific");
x.t("schedules","typical");
x.t("schedules","clause");
x.t("schedules","following");
x.t("line","defines");
x.t("line","business");
x.t("line","topic");
x.t("line","require");
x.t("line","methods");
x.t("line","coverage");
x.t("line","defining");
x.t("line","level");
x.t("line","covered");
x.t("http://guidewire.com/datamodel","effdatedonly=");
x.t("http://guidewire.com/datamodel","desc=");
x.t("http://guidewire.com/datamodel","entity=");
x.t("uses","gw.api.productmodel.schedulepropertyinfo");
x.t("uses","gw.lang.reflect.ipropertyinfo");
x.t("uses","gw.api.domain.clause");
x.t("uses","gw.api.productmodel.schedulestringpropertyinfo");
x.t("uses","gw.lob.common.abstractscheduleditemadapter");
x.t("uses","gw.lob.common.abstractscheduleimpl");
x.t("uses","gw.api.productmodel.schedule");
x.t("last","column");
x.t("boplineschedulecovitem.etx","create");
x.t("dialog","box");
x.t("text_val.select","link");
x.t("interface","within");
x.t("interface","create");
x.t("interface","studio");
x.t("interface","skip");
x.t("interface","first");
x.t("interface","step");
x.t("interface","schedule");
x.t("boplineschedulecovitem","_owner");
x.t("boplineschedulecovitem","renumberautonumbersequence");
x.t("boplineschedulecovitem","table=");
x.t("boplineschedulecovitem",".totypedarray");
x.t("boplineschedulecovitem","readonly");
x.t("boplineschedulecovitem","cascadedelete=");
x.t("boplineschedulecovitem","(owner.branch)");
x.t("extendable=","true");
x.t("gw.lang.reflect.ipropertyinfo","uses");
x.t("owner.addtoboplinescheduleditems","(scheduleditem)");
x.t("copying","existing");
x.t("deploy","product");
x.t("deploy","configuration");
x.t("type","example");
x.t("type","typekeycol1");
x.t("type","results");
x.t("type","coverage");
x.t("type","boplineschedulecov");
x.t("type","column");
x.t("createautonumber","(scheduleditem)");
x.t("c.fixedid","==");
x.t("change","references");
x.t("xmlns=","http://guidewire.com/datamodel");
x.t("setterscriptability=","external");
x.t("external","/subtype");
x.t("p.bopline","null");
x.t("explains","create");
x.t("explains","define");
x.t("extend","abstractscheduleimpl");
x.t("scheduleboppolicylocationpropertyinfo","policylocation");
x.t("product","designer");
x.t("product","model");
x.t("needed","line");
x.t("needed","step");
x.t("needed","implementation");
x.t("entities","classes");
x.t("entities","scheduled");
x.t("bop","create");
x.t("bop","line");
x.t("bop","replace");
x.t("bop","step");
x.t("bop","location");
x.t("bop","scheduled");
x.t("require","columns");
x.t("property","allcoverages");
x.t("property","valuerange");
x.t("property","propertyinfos");
x.t("property","currentandfuturescheduleditems");
x.t("property","scheduleparent");
x.t("property","schedulenumberpropinfo");
x.t("property","maps");
x.t("property","clause");
x.t("property","scheduleditems");
x.t("property","policyline");
x.t("default","return");
x.t("addcoverage","cov");
x.t("original","line");
x.t("allschedules","allcurrentandfuturescheduleditems");
x.t("link","directly");
x.t("items","shown");
x.t("items","name=");
x.t("items","coverage");
x.t("items","display");
x.t("items","particular");
x.t("items","given");
x.t("items","actually");
x.t("new","bopscheduleditempropertyinfostring");
x.t("new","boplineschedulecovitem");
x.t("new","scheduleboppolicylocationpropertyinfo");
x.t("new","entities");
x.t("new","file");
x.t("new","coverage");
x.t("new","ivaluerangegetter");
x.t("new","schedule");
x.t("new","bopscheduleditemcolumninfotypekey");
x.t("new","package");
x.t("new","entity");
x.t("new","class");
x.t("single","instance");
x.t("single","entity");
x.t("single","class");
x.t("effdatedonly=","true");
x.t("delegateowner","entity.boplineschedulecov");
x.t("schedulepropertyinfo","switch");
x.t("==","owner.fixedid");
x.t("==","null");
x.t("adapter=","gw.lob.bop.boplineschedulecovitemcoverableadapter");
x.t("_owner","boplineschedulecovitem");
x.t("_owner","item");
x.t("includes","creating");
x.t("fkentity=","boplocation");
x.t("fkentity=","boplineschedulecov");
x.t("renumberautonumbersequence","override");
x.t("gw.api.domain.clause","@export");
x.t("preemption","conditions");
x.t("gl","bop");
x.t("glpolicylinemethods","class");
x.t("messsage","policycenter");
x.t("need","single");
x.t("file","named");
x.t("file","bopschedulehelper.gs");
x.t("bopscheduleditems","setterscriptability=");
x.t("scheditems.add","(s)");
x.t("list","representative");
x.t("line-specify","policy");
x.t("determines","user");
x.t("owner.scheduleditems.tolist","owner.branch.oosslices");
x.t(".where","p.bopline");
x.t("add","new");
x.t("add","list");
x.t("add","coverage");
x.t("table=","boplineschedcovitem");
x.t("boplineschedulecovitemcoverableadapter","extends");
x.t("guide","instructions");
x.t("guide","policycenter");
x.t("presented","topics");
x.t("presented","two");
x.t("applies","coverage");
x.t("applies","following");
x.t("typekeycol1","create");
x.t("typekeycol1","displaykey.web.policy.bop");
x.t(".totypedarray","override");
x.t("results","runtime");
x.t("platform=","false");
x.t("configuring","generic");
x.t("configuring","schedule");
x.t("navigate","gsrc");
x.t("navigate","configuration");
x.t("false","effdatedbranchtype=");
x.t("false","supertype=");
x.t("false","/entity");
x.t("false","type=");
x.t("false","loadable=");
x.t("/subtype","step");
x.t("boplineschedcovitem","desc=");
x.t("deploying","configuration");
x.t("directly","page");
x.t("true","name=");
x.t("true","extendable=");
x.t("true","new");
x.t("true","desc=");
x.t("true","case");
x.t("true","final=");
x.t("schedule_subtype","schedule_subtype");
x.t("schedule_subtype","entity");
x.t("requires","additional");
x.t("requires","including");
x.t("propertyinfos","property");
x.t("propertyinfos","schedulepropertyinfo");
x.t("displaykey.web.policy.bop","schedulelocation");
x.t("displaykey.web.policy.bop","bopsurveillancetype");
x.t("currentandfuturescheduleditems","keyablebean");
x.t("helper","class");
x.t("handle","schedules");
x.t("handle","generic");
x.t("handle","out-of-sequence");
x.t("text_val.focus","text_val.select");
x.t("creating","new");
x.t("name","true");
x.t("name","surveillance");
x.t("owner.branch.oosslices",".where");
x.t("stored","scheduled");
x.t("definition","class");
x.t("functionality","required");
x.t("box","specify");
x.t("settings","code");
x.t("no","meaning");
x.t("framework","policycenter");
x.t("constructor","parameterized");
x.t("follows","package");
x.t("readonly","owner");
x.t("references","original");
x.t("skip","step");
x.t("(delegateowner)","override");
x.t("concrete","implementation");
x.t("perform","several");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("none","schedule");
x.t("provides","adding");
x.t("provides","overrides");
x.t("window","navigate");
x.t("bopscheduleditem.etx","define");
x.t("methods","properties");
x.t("methods","apply");
x.t("methods","allschedules");
x.t("methods","override");
x.t("methods","abstractscheduleditemadapter");
x.t("methods","abstractschedulehelper");
x.t("methods","class");
x.t("matchingslicedschedulecov.scheduleditems.each","scheditems.contains");
x.t("boolean","return");
x.t("generic","properties");
x.t("generic","schedules");
x.t("generic","methods");
x.t("generic","schedule");
x.t("boplineschedulecov.etx","entity");
x.t("arrayentity=","boplineschedulecovitem");
x.t("bopscheduleditem","implementsentity");
x.t("bopscheduleditem","fulldescription");
x.t("gw.api.productmodel.schedulestringpropertyinfo","@export");
x.t("(scheduleditem)","owner.addtoboplinescheduleditems");
x.t("(scheduleditem)","return");
x.t("scheditems","owner.scheduleditems.tolist");
x.t("scheditems.map","item");
x.t("representative","items");
x.t("schedule\u2019s","type");
x.t("hasclause","boolean");
x.t("implementations","copy");
x.t("exclusion","defines");
x.t("exclusion","needed");
x.t("exclusion","schedule");
x.t("exclusion","defined");
x.t("supertype=","businessownerscov");
x.t("businessownerscov","implementsinterface");
x.t("gw","lob");
x.t("schedulenumber","last");
x.t("cansafelydeletelocation","checklocationinuse");
x.t("selection","determines");
x.t("selection","match");
x.t("selection","entity");
x.t("lines","schedules");
x.t("array","arrayentity=");
x.t("array","store");
x.t("gw.lob.bop.boplineschedulecovitemcoverableadapter","implementsentity");
x.t("gw.lob.bop.boplineschedulecovitemcoverableadapter","foreignkey");
x.t("scheduleparent","schedule");
x.t("examine","glpolicylinemethods");
x.t("examine","overrides");
x.t("defining","schedules");
x.t("defining","generic");
x.t("coverage","pattern");
x.t("coverage","studio");
x.t("coverage","_owner.scheduleditemclause");
x.t("coverage","dialog");
x.t("coverage","define");
x.t("coverage","return");
x.t("coverage","override");
x.t("coverage","surveillance");
x.t("coverage","condition");
x.t("coverage","schedule");
x.t("coverage","scheduled");
x.t("coverage","entity");
x.t("coverage","terms");
x.t("coverage","therefore");
x.t("coverage","patterns");
x.t("desc=","bop");
x.t("desc=","scheduled");
x.t("matchingslicedschedulecov","p.bopline.coveragesfromcoverable.firstwhere");
x.t("matchingslicedschedulecov","null");
x.t("addition","scheduled");
x.t("gw.lob.bop","uses");
x.t("gw.lob.gl.glschedulehelper","class");
x.t("relative","structure");
x.t("policycenter","product");
x.t("policycenter","new");
x.t("policycenter","provides");
x.t("begin","implement");
x.t("metadata","entity");
x.t("store","scheduled");
x.t("entity.boplineschedulecov","construct");
x.t("entity.boplineschedulecov","super");
x.t("designer","example");
x.t("error","occurred");
x.t("config","metadata");
x.t("boplocation","/delegate");
x.t("boplocation","exportable=");
x.t("display","schedule\u2019s");
x.t("display","keys");
x.t("display","schedule");
x.t("renumberautonumbersequences","starting");
x.t("point","examine");
x.t("configured","example");
x.t("configured","line");
x.t("1.0","delegate");
x.t("1.0","subtype");
x.t("1.0","entity");
x.t("delegate","shown");
x.t("delegate","xmlns=");
x.t("delegate","entities");
x.t("delegate","addition");
x.t("delegate","additional");
x.t("delegate","entity");
x.t("mapped","column");
x.t("keyablebean","return");
x.t("keyablebean","var");
x.t("syntax","typekey");
x.t("syntax","column");
x.t("typekey\u2019s","type");
x.t("next","define");
x.t("first","step");
x.t("scheduleautonumbersequence","array");
x.t("cascadedelete=","true");
x.t("scheduleitem","delegate");
x.t("/entity","step");
x.t("depend","clause");
x.t("_owner.schedule.bopline","override");
x.t("out-of-sequence","preemption");
x.t("select","category");
x.t("appears","no");
x.t("guidewire_selectall","var");
x.t("iface=","gw.api.productmodel.schedule");
x.t("configuration/gsrc/gw/lob/gl/schedule","configuration/grsc/gw/lob/bop/schedule");
x.t("function","addcoverage");
x.t("function","hasclause");
x.t("function","guidewire_selectall");
x.t("function","removescheduleditem");
x.t("function","createandaddscheduleditem");
x.t("function","removecoverage");
x.t("implements","schedule");
x.t("implements","column");
x.t("removescheduleditem","item");
x.t("define","new");
x.t("define","coverage");
x.t("define","delegate");
x.t("define","line-specific");
x.t("define","schedule");
x.t("define","typical");
x.t("define","entity");
x.t("advantage","built-in");
x.t("different","syntax");
x.t("against","typekey\u2019s");
x.t("particular","clause");
x.t("line-specific","definition");
x.t("line-specific","schedule");
x.t("line-specific","policy");
x.t("line-specific","class");
x.t("line-specific","adapter");
x.t("gw.lob.common.abstractscheduleditemadapter","uses");
x.t("step","create");
x.t("step","schedules");
x.t("step","deploy");
x.t("step","define");
x.t("step","implementing");
x.t("step","implementation");
x.t("step","schedule");
x.t("step","modify");
x.t("heading","display");
x.t("createandaddscheduleditem","scheduleditem");
x.t("replace","gl");
x.t("replace","generalliability");
x.t("starting","point");
x.t("implementing","schedules");
x.t("implementing","generic");
x.t("xml","version=");
x.t("types","columns");
x.t("types","surveillance");
x.t("types","schedule");
x.t("types","defined");
x.t("gw.lob.common.abstractscheduleimpl","uses");
x.t("policylocation","displaykey.web.policy.bop");
x.t("declaring","omitting");
x.t("_owner.schedule","override");
x.t("match","coverable");
x.t("changes","deploying");
x.t("changes","update");
x.t("switch","typeof");
x.t("important","syntax");
x.t("reference","policy");
x.t("schedulenumberpropinfo","ipropertyinfo");
x.t("typekey","add");
x.t("typekey","column");
x.t("steps","provide");
x.t("steps","configure");
x.t("code","bopsurveillanceequipmentschedulecov");
x.t("override","property");
x.t("override","methods");
x.t("override","depend");
x.t("override","function");
x.t("override","following");
x.t("scheduleditem","owner.removefromboplinescheduleditems");
x.t("scheduleditem","new");
x.t("scheduleditem","adapter=");
x.t("scheduleditem","delegate");
x.t("scheduleditem","return");
x.t("scheduleditem","override");
x.t("scheduleditem","entity");
x.t("scheduleditem","var");
x.t("return","boplineschedulecovitem.type.typeinfo.getproperty");
x.t("return","_owner.scheduleditemclause");
x.t("return","new");
x.t("return","scheditems.map");
x.t("return","_owner.schedule.bopline");
x.t("return","_owner.schedule");
x.t("return","scheduleditem");
x.t("return","owner.boplinescheduleditems");
x.t("return","super.propertyinfos");
x.t("return","result");
x.t("return","owner.bopline.branch.policylocations");
x.t("level","coverage");
x.t("given","coverable");
x.t("given","clause");
x.t("gw.api.productmodel.schedule","uses");
x.t("gw.api.productmodel.schedule","impl=");
x.t("owner.boplinescheduleditems","override");
x.t("database","columns");
x.t("generalliability","businessowners");
x.t("boplineschedulecov","selection");
x.t("boplineschedulecov","matchingslicedschedulecov");
x.t("boplineschedulecov","nullok=");
x.t("boplineschedulecov","surveillance");
x.t("boplineschedulecov","final=");
x.t("ivaluerangegetter","override");
x.t("owner.fixedid","boplineschedulecov");
x.t("scheditems.contains","(s)");
x.t("nullok=","false");
x.t("occurred","messsage");
x.t("project","window");
x.t("implementsentity","name=");
x.t("gw.lob.bop.schedule","uses");
x.t("typeof","owner");
x.t("null","_owner.scheduleditemclause");
x.t("null","configuring");
x.t("null","matchingslicedschedulecov.scheduleditems.each");
x.t("null","override");
x.t("null",".each");
x.t("existing","line-specify");
x.t("existing","helper");
x.t("existing","gw.lob.gl.glschedulehelper");
x.t("existing","class");
x.t("configuration","files");
x.t("configuration","guide");
x.t("configuration","config");
x.t("configuration","changes");
x.t("keys","schedules");
x.t("failure","step");
x.t("cov","coverage");
x.t("cov","boplineschcovitemcov");
x.t("named","boplineschedulecovitem.etx");
x.t("named","bopscheduleditem.etx");
x.t("named","boplineschedulecov.etx");
x.t("named","surveillance");
x.t("named","schedule");
x.t("named","gw.lob.gl.boplineschedulecovitemcoverableadapter");
x.t("surveillance","equipment");
x.t("additional","columns");
x.t("additional","steps");
x.t("additional","column");
x.t("abstractscheduleditemadapter","class");
x.t("abstractscheduleditemadapter","var");
x.t("similar","overrides");
x.t("configures","surveillance");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("implementation","line");
x.t("implementation","includes");
x.t("implementation","scheduled");
x.t("implementation","class");
x.t("/delegate","step");
x.t("removecoverage","cov");
x.t("several","additional");
x.t("bopschedulehelper.gs","replace");
x.t("bopschedulehelper.gs","bopschedulehelper.gs");
x.t("specific","functionality");
x.t("businessownersline","selection");
x.t("businessownersline","coverage");
x.t("condition","exclusion");
x.t("condition","exception");
x.t("exception","surveillance");
x.t("extends","properties");
x.t("extends","methods");
x.t("extends","abstractscheduleditemadapter");
x.t("extends","abstractscheduleimpl");
x.t("extends","policylinemethodsdefaultimpl");
x.t("abstractscheduleimpl","create");
x.t("abstractscheduleimpl","entity.boplineschedulecov");
x.t("abstractscheduleimpl","entity");
x.t("bopsurveillanceequipmentschedulecov","name");
x.t("bopsurveillanceequipmentschedulecov","return");
x.t(".each","var");
x.t("actually","stored");
x.t("type=","effdated");
x.t("subtype","xmlns=");
x.t("subtype","entity");
x.t("boplineschedulecovimpl","extends");
x.t("(owner.branch)","createautonumber");
x.t("(s)","scheditems.add");
x.t("(s)","return");
x.t("page","error");
x.t("schedule","example");
x.t("schedule","columns");
x.t("schedule","businessowners");
x.t("schedule","interface");
x.t("schedule","deploy");
x.t("schedule","default");
x.t("schedule","needed");
x.t("schedule","items");
x.t("schedule","fkentity=");
x.t("schedule","applies");
x.t("schedule","requires");
x.t("schedule","helper");
x.t("schedule","none");
x.t("schedule","defining");
x.t("schedule","coverage");
x.t("schedule","configured");
x.t("schedule","delegate");
x.t("schedule","appears");
x.t("schedule","implementing");
x.t("schedule","return");
x.t("schedule","named");
x.t("schedule","implementation");
x.t("schedule","column");
x.t("schedule","coverable");
x.t("schedule","package");
x.t("schedule","entity=");
x.t("schedule","covered");
x.t("schedule","category");
x.t("location","fkentity=");
x.t("location","defined");
x.t("location","policy");
x.t("location","column");
x.t("super.propertyinfos","override");
x.t("typical","implementations");
x.t("typical","coverage");
x.t("bopscheduleditemcolumninfotypekey","bopsurveillancetype");
x.t("configure","schedule");
x.t("implementsinterface","iface=");
x.t("defined","single");
x.t("defined","step");
x.t("defined","schedule");
x.t("defined","lob");
x.t("foreignkey","name=");
x.t("foreignkey","desc=");
x.t("policyperiod","implementsentity");
x.t("result","_owner.scheduleditemclause");
x.t("result","override");
x.t("cloneautonumbersequences","resetautonumbersequences");
x.t("meaning","relative");
x.t("policy","line");
x.t("policy","location");
x.t("case","bopsurveillanceequipmentschedulecov");
x.t("case","schedule");
x.t("case","specify");
x.t("owner.bopline.branch.policylocations","true");
x.t("bopsurveillancetype","typekeycol1");
x.t("bopsurveillancetype","true");
x.t("bopsurveillancetype","incorrectly");
x.t("runtime","failure");
x.t("maps","column");
x.t("abstractschedulehelper","class");
x.t("structure","schedule");
x.t("topics","explains");
x.t("two","parts");
x.t("classes","advantage");
x.t("column","example");
x.t("column","needs");
x.t("column","type");
x.t("column","different");
x.t("column","heading");
x.t("column","types");
x.t("column","important");
x.t("column","mapping");
x.t("column","definitions");
x.t("@export","class");
x.t("boplineschcovitemcov","override");
x.t("coverable","schedules");
x.t("coverable","adapter=");
x.t("coverable","need");
x.t("coverable","businessownersline");
x.t("coverable","schedule");
x.t("coverable","entity");
x.t("coverable","adapter");
x.t("copy","existing");
x.t("policylinemethodsdefaultimpl","provides");
x.t("bindautonumbersequences","renumberautonumbersequences");
x.t("package","gw.lob.bop");
x.t("package","define");
x.t("package","gw.lob.bop.schedule");
x.t("package","named");
x.t("mapping","implements");
x.t("model","guide");
x.t("model","configuring");
x.t("model","changes");
x.t("clause","type");
x.t("clause","coverage");
x.t("clause","clause");
x.t("clause","var");
x.t("entity","defines");
x.t("entity","implement");
x.t("entity","shown");
x.t("entity","create");
x.t("entity","studio");
x.t("entity","foreign");
x.t("entity","xmlns=");
x.t("entity","schedule_subtype");
x.t("entity","concrete");
x.t("entity","implements");
x.t("entity","scheduleditem");
x.t("entity","boplineschedulecov");
x.t("entity","defined");
x.t("entity","case");
x.t("entity","scheduled");
x.t("entity","per");
x.t("entity","specify");
x.t("scheduled","items");
x.t("scheduled","item");
x.t("following","example");
x.t("following","settings");
x.t("following","methods");
x.t("following","steps");
x.t("following","adapter");
x.t("lob","bop");
x.t("lob","scheduleitem");
x.t("lob","scheduleditem");
x.t("links","schedule");
x.t("loadable=","false");
x.t("gw.lob.gl.boplineschedulecovitemcoverableadapter","follows");
x.t("class","example");
x.t("class","shown");
x.t("class","implement");
x.t("class","change");
x.t("class","extend");
x.t("class","file");
x.t("class","boplineschedulecovitemcoverableadapter");
x.t("class","handle");
x.t("class","configuration/gsrc/gw/lob/gl/schedule");
x.t("class","line-specific");
x.t("class","step");
x.t("class","override");
x.t("class","surveillance");
x.t("class","named");
x.t("class","implementation");
x.t("class","extends");
x.t("class","boplineschedulecovimpl");
x.t("class","schedule");
x.t("class","defined");
x.t("class","overrides");
x.t("entity=","boplineschedulecovitem");
x.t("entity=","boplineschedulecov");
x.t("terms","example");
x.t("adding","generic");
x.t("per","clause");
x.t("impl=","gw.lob.bop.schedule.boplineschedulecovimpl");
x.t("fulldescription","bop");
x.t("exportable=","true");
x.t("scheduleditems","scheduleditem");
x.t("omitting","typekey\u2019s");
x.t("overrides","properties");
x.t("overrides","boppolicylinemethods");
x.t("overrides","generic");
x.t("overrides","existing");
x.t("overrides","specific");
x.t("configuration/grsc/gw/lob/bop/schedule","rename");
x.t("equipment","schedule");
x.t("definitions","constructor");
x.t("policyline","return");
x.t("policyline","policyline");
x.t("modify","line-specific");
x.t("therefore","coverable");
x.t("covered","object");
x.t("var","_owner");
x.t("var","text_val=eval");
x.t("var","scheditems");
x.t("var","matchingslicedschedulecov");
x.t("var","scheduleditem");
x.t("var","result");
x.t("gw.lob.bop.schedule.boplineschedulecovimpl","implementsentity");
x.t("including","propertyinfos");
x.t("parameterized","against");
x.t("adapter","class");
x.t("adapter","overrides");
x.t("allcurrentandfuturescheduleditems","cansafelydeletelocation");
x.t("patterns","product");
x.t("/fulldescription","foreignkey");
x.t("incorrectly","declaring");
x.t("conditions","within");
x.t("category","display");
x.t("category","select");
x.t("specify","line-specific");
x.t("specify","implementation");
x.t("specify","following");
x.t("final=","false");
x.t("item","boplineschedulecovitem");
x.t("item","scheduleditem");
x.t("item","override");
x.t("item","entity");
x.t("item","exportable=");
x.t("item","/fulldescription");
x.t("item","item");
x.t("super","(delegateowner)");
x.t("checklocationinuse","cloneautonumbersequences");
x.t("object","type");
x.t("object","businessownersline");
x.t("update","policycenter");
}
