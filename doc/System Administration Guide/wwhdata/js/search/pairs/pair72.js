function FileData_Pairs(x)
{
x.t("example","user");
x.t("example","xml");
x.t("example","including");
x.t("viewadmin","soapadmin");
x.t("import/export","data");
x.t("looks","matching");
x.t("differently","depending");
x.t("exports","xml");
x.t("exports","data");
x.t("exports","imports");
x.t("exist","reading");
x.t("rather","command");
x.t("defines","xml");
x.t("demo_sample:200","within");
x.t("demo_sample:200","users");
x.t("spf.newsaxparser","parser.parse");
x.t("version","keep");
x.t("version","during");
x.t("just","command-line");
x.t("files","likely");
x.t("files","time");
x.t("files","directory");
x.t("files","following");
x.t("within","single");
x.t("within","xml");
x.t("refer","group");
x.t("myimportfile.xml","new");
x.t("inserts","new");
x.t("key","foreign");
x.t("key","array");
x.t("key","object\u2019s");
x.t("javax.xml.validation.schemafactory","uses");
x.t("keep","old");
x.t("schema-aware","xml");
x.t("likely","change");
x.t("foreign","key");
x.t("/user","group");
x.t("user","viewadmin");
x.t("user","interface");
x.t("user","group");
x.t("user","definition");
x.t("user","userrole");
x.t("user","demo_sample:100");
x.t("user","publicid=");
x.t("user","object");
x.t("refers","group");
x.t("referenced","object");
x.t("current","array");
x.t("line","interface");
x.t("groupuser","user");
x.t("until","later");
x.t("later","file");
x.t("uses","javax.xml.validation.schemafactory");
x.t("uses","javax.xml.parsers.saxparserfactory");
x.t("uses","org.xml.sax.handlerbase");
x.t("uses","javax.xml.xmlconstants");
x.t("uses","java.io.file");
x.t("uses","java.io.bytearrayinputstream");
x.t("download","file");
x.t("download","xml");
x.t("text_val.select","link");
x.t("interface","rather");
x.t("interface","import");
x.t("interface","export");
x.t("interface","imports");
x.t("interface","log");
x.t("errors","referenced");
x.t("displays","conflicting");
x.t("prompts","open");
x.t("change","configure");
x.t("open","download");
x.t("time","modify");
x.t("public","id");
x.t("schemafile.exists","var");
x.t("owns","array");
x.t("delete","current");
x.t("spf.namespaceaware","true");
x.t("however","choice");
x.t("however","policycenter");
x.t("browser","prompts");
x.t("handlerbase","importing");
x.t("entities","referred");
x.t("link","directly");
x.t("objects","file");
x.t("single","xml");
x.t("new","version");
x.t("new","handlerbase");
x.t("new","file");
x.t("new","fileinputstream");
x.t("new","entity");
x.t("want","resolve");
x.t("differences","imported");
x.t("differences","existing");
x.t("updates","existing");
x.t("contents","array");
x.t("command","exports");
x.t("command","line");
x.t("command","gwpc");
x.t("choice","resolving");
x.t("messsage","policycenter");
x.t("file","example");
x.t("file","defines");
x.t("file","just");
x.t("file","common");
x.t("file","further");
x.t("file","testenvironment.tempdirectory");
x.t("file","contain");
x.t("file","policycenter");
x.t("file","select");
x.t("file","against");
x.t("file","reference");
x.t("file","import");
x.t("file","perhaps");
x.t("file","validating");
x.t("file","export");
x.t("file","using");
x.t("group","demo_sample:200");
x.t("group","foreign");
x.t("group","definition");
x.t("group","publicid=");
x.t("group","member");
x.t("group","exceptions");
x.t("id","example");
x.t("/users","/group");
x.t("spf","saxparserfactory.newinstance");
x.t("during","import");
x.t("during","export");
x.t("actions","check");
x.t("resolving","array");
x.t("guide","importing");
x.t("according","xsd");
x.t("validate","xml");
x.t("parser.parse","new");
x.t("check","user");
x.t("referred","user");
x.t("directly","page");
x.t("true","spf.namespaceaware");
x.t("true","var");
x.t("imported","data");
x.t("text_val.focus","text_val.select");
x.t("creating","xml");
x.t("common","references");
x.t("definition","refers");
x.t("definition","elsewhere");
x.t("references","objects");
x.t("references","information");
x.t("previously","defined");
x.t("enables","define");
x.t("enables","update");
x.t("perform","case-by-case");
x.t("old","version");
x.t("pre-update","rules");
x.t("handles","arrays");
x.t("virtual","arrays");
x.t("virtual","array");
x.t("text_val=eval","document.linktothisurlform.urlfield");
x.t("further","references");
x.t("exists","schemafile.exists");
x.t("replaced","import");
x.t("factory.newschema","(schemafile)");
x.t("trying","import");
x.t("userrole","object");
x.t("testenvironment.tempdirectory","pc_import.xsd");
x.t("schemafactory.newinstance","(xmlconstants.w3c_xml_schema_ns_uri)");
x.t("saxparserfactory.newinstance","spf.setschema");
x.t("records","match");
x.t("arrays","differently");
x.t("arrays","policycenter");
x.t("arrays","cannot");
x.t("policycenter/build/xsd/pc_import.xsd","file");
x.t("entire","file");
x.t("fields","enables");
x.t("record","new");
x.t("array","virtual");
x.t("array","policycenter");
x.t("array","replace");
x.t("array","export");
x.t("array","entity");
x.t("array","elements");
x.t("sets","data");
x.t("contain","user");
x.t("defining","item");
x.t("permissions","click");
x.t("permissions","choose");
x.t("resolution","discrepancy");
x.t("policycenter","looks");
x.t("policycenter","exports");
x.t("policycenter","inserts");
x.t("policycenter","user");
x.t("policycenter","displays");
x.t("policycenter","handles");
x.t("policycenter","importing");
x.t("policycenter","function");
x.t("policycenter","reports");
x.t("policycenter","gives");
x.t("policycenter","import");
x.t("policycenter","notifies");
x.t("policycenter","export");
x.t("policycenter","system");
x.t("policycenter","run");
x.t("policycenter","log");
x.t("gwpc","regen-xsd");
x.t("regen-xsd","regenerate");
x.t("(xmlconstants.w3c_xml_schema_ns_uri)","var");
x.t("error","occurred");
x.t("supervisor","users");
x.t("pc_import.xsd","file");
x.t("pc_import.xsd","asserttrue");
x.t("javax.xml.parsers.saxparserfactory","uses");
x.t("(schemafile)","var");
x.t("(schema)","spf.validating");
x.t("validation","rules");
x.t("elsewhere","user");
x.t("elsewhere","xml");
x.t("first","example");
x.t("spf.setschema","(schema)");
x.t("resolve","differences");
x.t("conflicting","fields");
x.t("command-line","import");
x.t("reason","run");
x.t("select","download");
x.t("select","data");
x.t("select","export");
x.t("importing","perform");
x.t("importing","arrays");
x.t("importing","exporting");
x.t("importing","data");
x.t("importing","owned");
x.t("guidewire_selectall","var");
x.t("function","guidewire_selectall");
x.t("editor","help");
x.t("define","groups");
x.t("against","pc_import.xsd");
x.t("whether","importing");
x.t("cannot","replaced");
x.t("cannot","deleted");
x.t("different","sets");
x.t("org.xml.sax.handlerbase","var");
x.t("publicid","policycenter");
x.t("replace","contents");
x.t("xml","file");
x.t("xml","validate");
x.t("xml","editor");
x.t("xml","format");
x.t("xml","schema");
x.t("xml","import");
x.t("format","creating");
x.t("format","information");
x.t("directory","pc_entities.xsd");
x.t("properly","according");
x.t("match","data");
x.t("admin","policy");
x.t("reference","item");
x.t("reports","errors");
x.t("code","uses");
x.t("groups","policycenter");
x.t("groups","first");
x.t("fileinputstream","myimportfile.xml");
x.t("schema","factory.newschema");
x.t("schema","used");
x.t("demo_sample:100","/user");
x.t("demo_sample:100","/groupuser");
x.t("demo_sample:100","member");
x.t("javax.xml.xmlconstants","uses");
x.t("schemafile","new");
x.t("schemafile","exists");
x.t("discrepancy","policycenter");
x.t("option","delete");
x.t("java.io.file","uses");
x.t("click","administration");
x.t("click","export");
x.t("occurred","messsage");
x.t("existing","records");
x.t("existing","data");
x.t("existing","entity");
x.t("rules","however");
x.t("rules","reason");
x.t("exporting","administrative");
x.t("exporting","data");
x.t("pc_entities.xsd","pc_typelists.xsd");
x.t("pc_typelists.xsd","schema-aware");
x.t("/group","example");
x.t("factory","schemafactory.newinstance");
x.t("case-by-case","resolution");
x.t("document.linktothisurlform.urlfield","text_val.focus");
x.t("regenerate","xsd");
x.t("depending","whether");
x.t("gives","option");
x.t("holds","roles");
x.t("import","file");
x.t("import","during");
x.t("import","policycenter/build/xsd/pc_import.xsd");
x.t("import","policycenter");
x.t("import","exporting");
x.t("import","administrative");
x.t("import","choose");
x.t("import","export");
x.t("import","users");
x.t("import","following");
x.t("generate","xsd");
x.t("perhaps","previously");
x.t("forms","policy");
x.t("administrative","data");
x.t("page","error");
x.t("page","importing");
x.t("help","format");
x.t("publicid=","demo_sample:200");
x.t("publicid=","demo_sample:100");
x.t("parser","spf.newsaxparser");
x.t("data","user");
x.t("data","however");
x.t("data","trying");
x.t("data","policycenter");
x.t("data","select");
x.t("data","importing");
x.t("data","publicid");
x.t("data","xml");
x.t("data","admin");
x.t("data","existing");
x.t("data","data");
x.t("data","administration");
x.t("data","export");
x.t("data","model");
x.t("information","properly");
x.t("information","two");
x.t("configure","data");
x.t("defined","until");
x.t("defined","elsewhere");
x.t("/groupuser","/users");
x.t("validating","xml");
x.t("maintenance_tools","actions");
x.t("soapadmin","permissions");
x.t("policy","holds");
x.t("policy","forms");
x.t("java.io.bytearrayinputstream","uses");
x.t("choose","import/export");
x.t("choose","want");
x.t("notifies","differences");
x.t("notifies","locates");
x.t("owned","array");
x.t("administration","guide");
x.t("administration","page");
x.t("administration","tab");
x.t("export","browser");
x.t("export","command");
x.t("export","file");
x.t("export","different");
x.t("export","click");
x.t("export","import");
x.t("export","administrative");
x.t("export","tab");
x.t("two","xsd");
x.t("users","groupuser");
x.t("users","groups");
x.t("users","defined");
x.t("object\u2019s","public");
x.t("locates","existing");
x.t("system","administration");
x.t("used","import");
x.t("following","command");
x.t("following","different");
x.t("following","code");
x.t("model","files");
x.t("model","within");
x.t("entity","owns");
x.t("entity","updates");
x.t("entity","xml");
x.t("entity","entity");
x.t("run","pre-update");
x.t("run","validation");
x.t("run","maintenance_tools");
x.t("elements","policycenter");
x.t("using","following");
x.t("xsd","files");
x.t("xsd","definitions");
x.t("deleted","cannot");
x.t("tab","select");
x.t("tab","choose");
x.t("definitions","generate");
x.t("modify","data");
x.t("member","group");
x.t("referring","supervisor");
x.t("var","spf");
x.t("var","text_val=eval");
x.t("var","schemafile");
x.t("var","schema");
x.t("var","factory");
x.t("var","parser");
x.t("including","referring");
x.t("roles","during");
x.t("imports","exports");
x.t("imports","entities");
x.t("reading","entire");
x.t("asserttrue","schemafile");
x.t("spf.validating","true");
x.t("log","user");
x.t("exceptions","import");
x.t("object","exist");
x.t("object","refer");
x.t("object","foreign");
x.t("item","enables");
x.t("item","defining");
x.t("matching","data");
x.t("update","record");
}
